<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Floware4</name>
    </assembly>
    <members>
        <member name="T:Floware.Archive._7zUtils">
            <summary>
            <para>7zipUtils</para>
            <para>all method blocking(sync) method</para>
            </summary>
        </member>
        <member name="M:Floware.Archive._7zUtils.CompFolder(Floware.Archive.ArchiveType,System.String,System.String)">
            <summary>
            <para>Blocking 압축</para>
            <para>srcFolder를 ArchiveType을 이용하여 toAbsName으로 압축</para>
            <para>SubFolder까지 모두 압축한다.</para>
            </summary>
            <param name="archiveType"></param>
            <param name="srcFolder"></param>
            <param name="toAbsName">absolute file path name, e.g a.7z</param>
        </member>
        <member name="M:Floware.Archive._7zUtils.CompFolderOnlyFiles(Floware.Archive.ArchiveType,System.String,System.String)">
            <summary>
            <para>Blocking 압축</para>
            <para>SubFolder는 압축하지 않는다.</para>
            </summary>
            <param name="archiveType"></param>
            <param name="srcFolder"></param>
            <param name="toAbsName"></param>
        </member>
        <member name="M:Floware.Archive._7zUtils.CompFile(Floware.Archive.ArchiveType,System.String,System.String)">
            <summary>
            <para>Blocking 압축</para>
            <para>srcFile을 ArchieveType 포맷으로 toAbsName으로 압축</para>
            </summary>
            <param name="archiveType"></param>
            <param name="srcFile"></param>
            <param name="toAbsName"></param>
        </member>
        <member name="M:Floware.Archive._7zUtils.ExtrcFolder(System.String,System.String)">
            <summary>
            <para>Blocking 압축해제</para>
            <para>srcArchiveFile을 archive type 감지하여 destFolder에 압축풀기</para>
            <para>-o (set Output directory) switch</para>
            <para>-ao (Overwrite mode) switch: -aoa Overwrite All existing files without prompt </para>
            <para>-y (assume Yes on all queries) switch: All overwrite queries will be suppressed and files on disk with same filenames as in archive will be overwritten.</para>
            </summary>
            <param name="srcArchiveFile"></param>
            <param name="destFolder"></param>
        </member>
        <member name="M:Floware.Archive._7zUtils.CompMSZip(System.String,System.String[])">
            <summary>
            <para>Files -> xxx.cab (MSZip)</para>
            <para>Overwrite cab file</para>
            </summary>
            <param name="cabFileName"></param>
            <param name="srcFiles"></param>
        </member>
        <member name="T:Floware.Archive.ArchiveType">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.Archive.ArchiveType._7Z">
            <summary/>
        </member>
        <member name="F:Floware.Archive.ArchiveType.TAR">
            <summary/>
        </member>
        <member name="F:Floware.Archive.ArchiveType.GZIP">
            <summary/>
        </member>
        <member name="F:Floware.Archive.ArchiveType.ZIP">
            <summary/>
        </member>
        <member name="T:Floware.Barcode.Print.Code128.Enums.CodeSet">
            <summary>
            supported: CodeA, CodeB, 
            not supported: CodeC
            </summary>
        </member>
        <member name="F:Floware.Barcode.Print.Code128.Enums.CodeSet.CodeA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.Barcode.Print.Code128.Enums.CodeSet.CodeB">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.Barcode.Print.Code128.Enums.CodeSetAllowed">
            <summary>
            Indicates which code sets can represent a character -- CodeA, CodeB, or either
            </summary>
        </member>
        <member name="F:Floware.Barcode.Print.Code128.Enums.CodeSetAllowed.CodeA">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.Barcode.Print.Code128.Enums.CodeSetAllowed.CodeB">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.Barcode.Print.Code128.Enums.CodeSetAllowed.CodeAorB">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Barcode.Print.Code128.Code128Code.CodesForChar(System.Int32,System.Int32,Floware.Barcode.Print.Code128.Enums.CodeSet@)">
            <summary>
            Get the Code128 code value(s) to represent an ASCII character, with 
            optional look-ahead for length optimization
            </summary>
            <param name="CharAscii">The ASCII value of the character to translate</param>
            <param name="LookAheadAscii">The next character in sequence (or -1 if none)</param>
            <param name="CurrCodeSet">The current codeset, that the returned codes need to follow;
            if the returned codes change that, then this value will be changed to reflect it</param>
            <returns>An array of integers representing the codes that need to be output to produce the 
            given character</returns>
        </member>
        <member name="M:Floware.Barcode.Print.Code128.Code128Code.CodesetAllowedForChar(System.Int32)">
            <summary>
            Tells us which codesets a given character value is allowed in
            </summary>
            <param name="charAscii">ASCII value of character to look at</param>
            <returns>Which codeset(s) can be used to represent this character</returns>
        </member>
        <member name="M:Floware.Barcode.Print.Code128.Code128Code.CharCompatibleWithCodeset(System.Int32,Floware.Barcode.Print.Code128.Enums.CodeSet)">
            <summary>
            Determine if a character can be represented in a given codeset
            </summary>
            <param name="charAscii">character to check for</param>
            <param name="currcs">codeset context to test</param>
            <returns>true if the codeset contains a representation for the ASCII character</returns>
        </member>
        <member name="M:Floware.Barcode.Print.Code128.Code128Content.#ctor(System.String)">
            <summary>
            Create content based on a string of ASCII data
            </summary>
            <param name="asciiData">the string that should be represented</param>
        </member>
        <member name="M:Floware.Barcode.Print.Code128.Code128Content.StringToCode128(System.String)">
            <summary>
            Transform the string into integers representing the Code128 codes
            necessary to represent it
            </summary>
            <param name="asciiData">string to be encoded</param>
            <returns>Code128 representation</returns>
        </member>
        <member name="M:Floware.Barcode.Print.Code128.Code128Content.GetBestStartSet(Floware.Barcode.Print.Code128.Enums.CodeSetAllowed,Floware.Barcode.Print.Code128.Enums.CodeSetAllowed)">
            <summary>
            Determines the best starting code set based on the the first two 
            characters of the string to be encoded
            </summary>
            <param name="allow1">First character of input string</param>
            <param name="allow2">Second character of input string</param>
            <returns>The codeset determined to be best to start with</returns>
        </member>
        <member name="P:Floware.Barcode.Print.Code128.Code128Content.Codes">
            <summary>
            Provides the Code128 code values representing the object's string
            </summary>
        </member>
        <member name="T:Floware.Barcode.Print.Code128.Code128Rendering">
            <summary>
            in principle these rows should each have 6 elements
            however, the last one -- STOP -- has 7. The cost of the
            extra integers is trivial, and this lets the code flow
            much more elegantly
            </summary>
        </member>
        <member name="M:Floware.Barcode.Print.Code128.Code128Rendering.MakeBarcodeImage(System.String,System.Int32,System.Boolean)">
            <summary>
            Make an image of a Code128 barcode for a given string
            </summary>
            <param name="text">Message to be encoded</param>
            <param name="barThickness">Base thickness for bar width (1 or 2 works well)</param>
            <param name="addQuietZone">Add required horiz margins (use if output is tight)</param>
            <returns>An Image of the Code128 barcode representing the message</returns>
        </member>
        <member name="T:Floware.Barcode.Print.ZPL.ZplPrintHelper">
            <summary>
            <para>ZPL barcode printer</para>
            <para>-</para>
            <para>2012.08</para>
            <para>PrintWithPrinterNameAsync 함수 추가</para>
            <para>-</para>
            </summary>
        </member>
        <member name="F:Floware.Barcode.Print.ZPL.ZplPrintHelper.DEVICE_NAME_LPT1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.Barcode.Print.ZPL.ZplPrintHelper.DEVICE_NAME_COM1">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.Barcode.Print.ZPL.ZplPrintHelper.DEVICE_NAME_USB001">
            <summary>
            <para>public const string USB001 = "USB001";</para>
            <para><![CDATA[HKLM/SYSTEM/ControlSet001/Enum/USB/Vid_xxxx&Pid_xxxx/yyyyyyyyyyyy/DeviceParameter/SymbolicName]]></para>
            <para>zpl.DeviceName = @</para>
            <para><![CDATA[\\?\USB#Vid_04e8&Pid_3252#BE34BKDPB13166D.#{a5dcbf10-6530-11d2-901f-00c04fb951ed};]]></para>
            <para><![CDATA[\\?\USB#Vid_1203&Pid_0126#000001          #{a5dcbf10-6530-11d2-901f-00c04fb951ed}]]></para>
            <para>Vid, Pid, 000001 부분만 다르다.</para>
            </summary>
        </member>
        <member name="F:Floware.Barcode.Print.ZPL.ZplPrintHelper.DEVICE_NAME_ZEBRA_TLP_2844_Z">
            <summary>
            <![CDATA[@"\\?\USB#Vid_043e&Pid_70d4#AA04012700017690#{a5dcbf10-6530-11d2-901f-00c04fb951ed}";]]>
            </summary>
        </member>
        <member name="F:Floware.Barcode.Print.ZPL.ZplPrintHelper.DEVICE_NAME_TSC">
            <summary>
            <![CDATA[@"\\?\USB#Vid_1203&Pid_0126#000001#{a5dcbf10-6530-11d2-901f-00c04fb951ed}";]]>
            </summary>
        </member>
        <member name="M:Floware.Barcode.Print.ZPL.ZplPrintHelper.TestPrintWithDeviceName(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Barcode.Print.ZPL.ZplPrintHelper.TestPrintWithPrinterName(System.String)">
            <summary>
            <para>Print Test With Sample ZPL</para>
            </summary>
        </member>
        <member name="M:Floware.Barcode.Print.ZPL.ZplPrintHelper.GetPrinterNames">
            <summary>
            <para>OS의 Printer Name 목록 가져오기</para>
            </summary>
        </member>
        <member name="M:Floware.Barcode.Print.ZPL.ZplPrintHelper.PrintWithPrinterName(System.String,System.String)">
            <summary>
            <para>Sync 방식 프린팅</para>
            </summary>
        </member>
        <member name="M:Floware.Barcode.Print.ZPL.ZplPrintHelper.PrintWithPrinterNameAsync(System.String,System.String)">
            <summary>
            <para>Async 방식 PrinterName 프린팅</para>
            </summary>
            <param name="printerName"></param>
            <param name="zpl"></param>
        </member>
        <member name="M:Floware.Barcode.Print.ZPL.ZplPrintHelper.PrintWithDeviceName(System.String,System.String)">
            <summary>
            <para>Async 방식 DeviceName 프린팅</para>
            <para>Printer 이상 발생시 Blocking으로 인해 Thread 처리를 넣음.</para>
            </summary>
            <param name="deviceName"></param>
            <param name="zpl"></param>
        </member>
        <member name="T:Floware.Barcode.Read.KeyenceReader">
            <summary>
            <para>KeyenceBarcodeReader</para>
            <para></para>
            <para>매번 읽을때마다 new 객체를 생성하고 finally에서 Close를 권장한다.</para>
            <para></para>
            </summary>
        </member>
        <member name="T:Floware.IO.SerialComm">
            <summary>
            <para>SerialComm</para>
            <para>ThreadUtils.Interrupt를 사용하면 안됨. 프로그램 죽음</para>
            <para>Close와 IOException을 처리해야 함.</para>
            </summary>
        </member>
        <member name="M:Floware.IO.SerialComm.#ctor">
            <summary>
            <para>readtimeout=1000;</para>
            </summary>
        </member>
        <member name="M:Floware.IO.SerialComm.Open">
            <summary>
            open serial port
            </summary>
        </member>
        <member name="M:Floware.IO.SerialComm.Close">
            <summary>
            close SerailPort
            </summary>
        </member>
        <member name="M:Floware.IO.SerialComm.QuietClose">
            <summary>
            Ignore close error
            </summary>
        </member>
        <member name="M:Floware.IO.SerialComm.Dispose">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.IO.SerialComm.Clean">
            <summary>
            DiscardInBuffer();
            DiscardOutBuffer();
            </summary>
        </member>
        <member name="M:Floware.IO.SerialComm.CleanIn">
            <summary>
            Clean read buffer
            </summary>
        </member>
        <member name="M:Floware.IO.SerialComm.CleanOut">
            <summary>
            Clean write buffer
            </summary>
        </member>
        <member name="M:Floware.IO.SerialComm.WriteLeInt(System.Int32)">
            <summary>
            Write little endian int
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Floware.IO.SerialComm.WriteLeShort(System.Int32)">
            <summary>
            <para>Write little endian short</para>
            <para>-32768 ~ 32767</para>
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Floware.IO.SerialComm.WriteBeInt(System.Int32)">
            <summary>
            Write big endian int
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Floware.IO.SerialComm.WriteBeShort(System.Int32)">
            <summary>
            <para>Write big endian short</para>
            <para>-32768 ~ 32767</para>
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Floware.IO.SerialComm.ReadBeShort">
            <summary>
            Read big endian short
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.IO.SerialComm.ReadBeUshort">
            <summary>
            Read big endian ushort
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.IO.SerialComm.ReadBeInt">
            <summary>
            Read big endian int
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.IO.SerialComm.ReadLeShort">
            <summary>
            Read little endian short
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.IO.SerialComm.ReadLeInt">
            <summary>
            Read little endian int
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.IO.SerialComm.ReadAscii(System.Int32)">
            <summary>
            <para>Read string</para>
            <para>Encoding.ASCII</para>
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.IO.SerialComm.ReadAscii(System.Int32,System.Text.Encoding)">
            <summary>
            <para>Read string</para>
            </summary>
            <param name="size"></param>
            <param name="encoding"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.IO.SerialComm.ReadBytes(System.Int32)">
            <summary>
            <para>blocing read</para>
            </summary>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.IO.SerialComm.ReadUntil(System.Byte)">
            <summary>
            <para>NewLine, ETX까지 읽는 경우.</para>
            <para>b는 포함되지 않음</para>
            <para>in stream에서 b 까지 읽음</para>
            </summary>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.IO.SerialComm.Write(System.String)">
            <summary>
            
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Floware.IO.SerialComm.Write(System.Int32)">
            <summary>
            <para>int -> byte로 변경해서 Write(byte[] bs)호출.</para>
            <para>0~255 argument</para>
            </summary>
            <param name="i"></param>
        </member>
        <member name="M:Floware.IO.SerialComm.Write(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bs"></param>
        </member>
        <member name="M:Floware.IO.SerialComm.WriteLine(System.String)">
            <summary>
            
            </summary>
            <param name="s"></param>
        </member>
        <member name="M:Floware.IO.SerialComm.ReadLine">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.IO.SerialComm.Read1Byte">
            <summary>
            <para>Block until read 1 byte</para>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Floware.IO.SerialComm.RetryCount">
            <summary/>
        </member>
        <member name="P:Floware.IO.SerialComm.H">
            <summary/>
        </member>
        <member name="P:Floware.IO.SerialComm.IsOpen">
            <summary>
            SerialPort is open or not
            </summary>
        </member>
        <member name="P:Floware.IO.SerialComm.ReadTimeout">
            <summary>
            <para>Blocking ReadTimeout milli-second</para>
            <para>-</para>
            <para>1000ms (Default)</para>
            <para>Infinite: -1</para>
            <para>0: Exception</para>
            </summary>
        </member>
        <member name="P:Floware.IO.SerialComm.NewLine">
            <summary>
            <para>ReadLine, WriteLine함수를 이용할 경우 NewLine 구분자</para>
            <para>Default: Environment.NewLine</para>
            <para>"\r"; 0xD</para>
            <para>"\n"; 0xA(Default)</para>
            </summary>
        </member>
        <member name="P:Floware.IO.SerialComm.PortName">
            <summary>
            COM1(Default), COM2, ...
            </summary>
        </member>
        <member name="P:Floware.IO.SerialComm.DiscardNull">
            <summary>
            <para>Normally False</para>
            <para>null bytes are ignored</para>
            </summary>
        </member>
        <member name="P:Floware.IO.SerialComm.BaudRate">
            <summary>
            <para>2400</para>
            <para>4800</para>
            <para>7200</para>
            <para>9600(Default)</para>
            <para>14400</para>
            <para>19200</para>
            <para>38400</para>
            <para>57600</para>
            <para>115200</para>
            </summary>
        </member>
        <member name="P:Floware.IO.SerialComm.Parity">
            <summary>
            <para>Parity.None(Default)</para>
            <para>Parity.Odd</para>
            <para>Parity.Even</para>
            <para>Parity.Mark</para>
            <para>Parity.Space</para>
            </summary>
        </member>
        <member name="P:Floware.IO.SerialComm.DataBits">
            <summary>
            <para>7</para>
            <para>8(Default)</para>
            </summary>
        </member>
        <member name="P:Floware.IO.SerialComm.StopBits">
            <summary>
            <para>StopBits.None</para>
            <para>StopBits.One(Default)</para>
            <para>StopBits.Two</para>
            </summary>
        </member>
        <member name="P:Floware.IO.SerialComm.Handshake">
            <summary>
            <para>Handshake.None(Default)</para>
            <para>Handshake.XOnXOff</para>
            <para>Handshake.RequestToSend</para>
            <para>Handshake.RequestToSendXOnXOff</para>
            </summary>
        </member>
        <member name="P:Floware.IO.SerialComm.IsReadDataExist">
            <summary>
            BytesToRead > 0
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.Barcode.Read.KeyenceReader.#ctor">
            <summary>
            BaudRate = 9600
            Parity = Parity.Even
            DataBits = 7
            StopBits = StopBits.One
            </summary>
        </member>
        <member name="M:Floware.Barcode.Read.KeyenceReader.Open">
            <summary>
            NewLine = "\r"; ////chr(0D)
            </summary>
        </member>
        <member name="M:Floware.Barcode.Read.KeyenceReader.Read">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Barcode.Read.KeyenceReader.LaserOff">
            <summary>
            LOFF
            </summary>
        </member>
        <member name="M:Floware.Barcode.Read.KeyenceReader.ToString">
            <summary/>
        </member>
        <member name="T:Floware.Barcode.Read.SickReader">
            <summary>
            <para></para>
            <para>매번 읽을때마다 new 객체를 생성하고 finally에서 Close를 권장한다.</para>
            <para></para>
            <para>SICK는 별도의 COMMAND가 없고.. 접점을 붙이면 DATA가 들어온다.</para>
            </summary>
        </member>
        <member name="M:Floware.Barcode.Read.SickReader.#ctor">
            <summary>
            BaudRate = 9600;
            Parity = Parity.None;
            DataBits = 8;
            StopBits = StopBits.One;
            </summary>
        </member>
        <member name="M:Floware.Barcode.Read.SickReader.Open">
            <summary>
            NewLine = "\r"; //chr(0D)
            </summary>
        </member>
        <member name="M:Floware.Barcode.Read.SickReader.Ready">
            <summary>
            WriteCommand("11");
            </summary>
        </member>
        <member name="M:Floware.Barcode.Read.SickReader.Read">
            <summary/>
        </member>
        <member name="M:Floware.Barcode.Read.SickReader.ToString">
            <summary>
            string.Format("SickBarcodeReader {0} Retry:{1}", PortName, RetryCount);
            </summary>
        </member>
        <member name="T:Floware.Barcode.Read.TorayReader">
            <summary>
            <para>Toray2DBarcode Reader</para>
            <para></para>
            <para>매번 읽을때마다 new 객체, Open호출, finally에서 Close를 권장.</para>
            <para></para>
            <para>BaudRate = 9600;</para>
            <para>Parity.None;</para>
            <para>DataBits = 8;</para>
            <para>StopBits.One;</para>
            <para>Handshake.None</para>
            </summary>
        </member>
        <member name="M:Floware.Barcode.Read.TorayReader.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Barcode.Read.TorayReader.Open">
            <summary>
            <para>NewLine = "\r"; //chr(0D);</para>
            </summary>
        </member>
        <member name="M:Floware.Barcode.Read.TorayReader.Read">
            <summary>
            <para>timeout 기본값이 1초 이므로 retry 3회 기본으로 적용됨</para>
            <para>V or D로 시작하면 성공</para>
            <para>R로 시작하면 nak + errorcode(2)</para>
            <para>ack(1) + length(2) + ascii data + checksum</para>
            <para></para>
            <para>[00ms]: write, resp오는 시간 차이 계산 -> ReadTimeout 조정</para>
            </summary>
            <returns>읽기 성공시 data, 에러-> string.Empty</returns>
        </member>
        <member name="M:Floware.Barcode.Read.TorayReader.ToString">
            <summary/>
            <returns>string.Format("TorayReader {0} Retry:{1}", PortName, RetryCount)</returns>
        </member>
        <member name="T:Floware.Collections.HashMap`2">
            <summary>
            <para>-</para>
            <para>2012.08 Make</para>
            <para>Dictionary 보강하여 추가함</para>
            <para>KeyPairValue는 적용하지 않음</para>
            <para>최초 추가된 Key 순서가 보장되며 Remove, Add를 해도 최초 추가된 이력대로 순서가 보장된다.</para>
            <para>Duplicate Key에 대한 Exception이 발생하지 않는다.</para>
            <para>GetIdxValue: Count기준 0 Base Index를 기준으로 Value 추출</para>
            <para>GetKeyList: Key에 대한 IList</para>
            <para>GetValueList: Value에 대한 IList</para>
            <para>-</para>
            <para>Threadsafe</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.Collections.HashMap`2.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.Collections.HashMap`2.#ctor(System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.Collections.HashMap`2.Add(`0,`1)">
            <summary>
            <para>Key가 존재할 경우 Remove로 지우고 값을 새로 넣는다.</para>
            </summary>
        </member>
        <member name="M:Floware.Collections.HashMap`2.ContainsKey(`0)">
            <summary/>
        </member>
        <member name="M:Floware.Collections.HashMap`2.Remove(`0)">
            <summary>
            <para>에러는 나지 않고 return 값으로 remove 여부를 확인할 수 있다.</para>
            </summary>
        </member>
        <member name="M:Floware.Collections.HashMap`2.TryGetValue(`0,`1@)">
            <summary/>
        </member>
        <member name="M:Floware.Collections.HashMap`2.Add(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary/>
        </member>
        <member name="M:Floware.Collections.HashMap`2.Clear">
            <summary/>
        </member>
        <member name="M:Floware.Collections.HashMap`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary/>
        </member>
        <member name="M:Floware.Collections.HashMap`2.CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.Collections.HashMap`2.Remove(System.Collections.Generic.KeyValuePair{`0,`1})">
            <summary/>
        </member>
        <member name="M:Floware.Collections.HashMap`2.GetEnumerator">
            <summary/>
        </member>
        <member name="M:Floware.Collections.HashMap`2.GetIdxValue(System.Int32)">
            <summary>
            <para>Index를 이용하여 값 추출</para>
            </summary>
        </member>
        <member name="M:Floware.Collections.HashMap`2.GetIdxKey(System.Int32)">
            <summary>
            <para>Index를 이용하여 Key 추출</para>
            </summary>
        </member>
        <member name="P:Floware.Collections.HashMap`2.Empty">
            <summary/>
        </member>
        <member name="P:Floware.Collections.HashMap`2.Keys">
            <summary/>
        </member>
        <member name="P:Floware.Collections.HashMap`2.Values">
            <summary/>
        </member>
        <member name="P:Floware.Collections.HashMap`2.Item(`0)">
            <summary/>
        </member>
        <member name="P:Floware.Collections.HashMap`2.Count">
            <summary/>
        </member>
        <member name="P:Floware.Collections.HashMap`2.IsReadOnly">
            <summary>
            ??
            </summary>
        </member>
        <member name="T:Floware.Collections.Set`1">
            <summary>
            Dictionary keys와 동일한 기능을 하는 class
            </summary>
        </member>
        <member name="F:Floware.Collections.Set`1.hash">
            <summary/>
        </member>
        <member name="M:Floware.Collections.Set`1.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.Collections.Set`1.#ctor(System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.Collections.Set`1.Add(`0)">
            <summary>
            이미 값이 있으면 Add를 하지 않는다.
            return value 로 체크해야 함.
            </summary>
        </member>
        <member name="M:Floware.Collections.Set`1.Remove(`0)">
            <summary>
            값이 없어도 에러는 나지 않는다.
            </summary>
        </member>
        <member name="M:Floware.Collections.Set`1.HasValue(`0)">
            <summary/>
        </member>
        <member name="M:Floware.Collections.Set`1.Clear">
            <summary/>
        </member>
        <member name="P:Floware.Collections.Set`1.Values">
            <summary/>
        </member>
        <member name="P:Floware.Collections.Set`1.Empty">
            <summary>
            IsEmpty
            </summary>
        </member>
        <member name="P:Floware.Collections.Set`1.Count">
            <summary>
            added count
            </summary>
        </member>
        <member name="T:Floware.Concurrent.LockUtils">
            <summary>
            <para>Lock 처리 Utility</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.LockUtils.TryLock(System.Object)">
            <summary>
            <para>arg object try lock</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.LockUtils.Lock(System.Object)">
            <summary>
            <para>arg object lock을 얻을때까지 blocking</para>
            <para>동일 Thread의 경우 Lock은 Unlock 하지 않고 2번 이상 호출이 가능하다.</para>
            <para>Unlock을 pair하지 않을 경우 Notify가 동작하지 않으며 arg object에 대해 
            Unlock을 하는 순간 Notify를 이용한 다음 동작이 수행된다.</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.LockUtils.Unlock(System.Object)">
            <summary>
            <para>arg object unlock</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.LockUtils.Wait">
            <summary>
            <para>무한대기</para>
            <para>0을 입력할 경우에만 false반환되며, 나머지는 true</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.LockUtils.Wait(System.Int32)">
            <summary>
            <para>Notify를 하지 않고 Wait만 하는 경우 사용.</para>
            <para>Threadsafe한 object을 생성하여 단순 대기.</para>
            <para>Notify를 이용하여 깨어나지 않으므로 항상 False 반환.</para>
            <para>-</para>
            <para>-1 or Timeout.Infinite를 넣을 경우 무한대기</para>
            </summary>
            <param name="ms">milli-second</param>
        </member>
        <member name="M:Floware.Concurrent.LockUtils.Wait(System.Object)">
            <summary>
            <para>Wait를 호출하는 순간 모든 Thread의 Lock이 해제된다. => Wait와 Lock을 같은 객체로 사용하지 않는것이 좋다.</para>
            <para>Wait를 했다 하더라도 Lock, Unlock의 회수는 pair가 되어야 한다.</para>
            <para>-</para>
            <para>0을 입력할 경우에만 false반환되며, 나머지는 true</para>
            <para>Notify로 깨어날 경우 true 반환.</para>
            <para>-</para>
            <para>lock 구문과 사용할 수 없다.</para>
            <para>Wait를 호출하는 순간 arg에 Lock이 모두 해제된다.</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.LockUtils.Wait(System.Int32,System.Object)">
            <summary>
            <para>Wait를 호출하는 순간 모든 Thread의 Lock이 해제된다. => Wait와 Lock을 같은 객체로 사용하지 않는것이 좋다.</para>
            <para>Wait를 했다 하더라도 Lock, Unlock의 회수는 pair가 되어야 한다.</para>
            <para>-</para>
            <para>Timeout발생 false</para>
            <para>Notify로 깨어날 경우 true 반환.</para>
            <para>-</para>
            <para>lock 구문과 사용할 수 없다.</para>
            <para>Wait를 호출하는 순간 arg에 Lock이 모두 해제된다.</para>
            </summary>
            <param name="ms">milli-second</param>
            <param name="obj"></param>
        </member>
        <member name="M:Floware.Concurrent.LockUtils.NotifyAll(System.Object)">
            <summary>
            <para>arg에 대한 전체 Thread 깨움</para>
            </summary>
        </member>
        <member name="T:Floware.Concurrent.MutexQueue`1">
            <summary>
            <para>Thread Safe Queue</para>
            <para>default init capacity 1024</para>
            <para>default full capacity 1024*1024</para>
            <para>Full capacity 에 도달하면 dequeue에 문제가 있다고 판단하여 queue를 자동으로 clear한다.</para>
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:Floware.Concurrent.MutexQueue`1.WN">
            <summary>
            Wait, Notify Lock
            </summary>
        </member>
        <member name="F:Floware.Concurrent.MutexQueue`1.lock1">
            <summary>
            Enqueue, Dequeue, Clear lock
            </summary>
        </member>
        <member name="M:Floware.Concurrent.MutexQueue`1.#ctor">
            <summary>
            <para>init size 1024</para>
            <para>full size 1024 * 1024</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.MutexQueue`1.#ctor(System.Int32)">
            <summary>
            <para>init size를 정할 수 있다.</para>
            <para>full size 1024 * 1024</para>
            </summary>
            <param name="size">init queue size</param>
        </member>
        <member name="M:Floware.Concurrent.MutexQueue`1.#ctor(System.Int32,System.Int32)">
            <summary>
            <para>init size를 정할 수 있다.</para>
            <para>full size를 정할 수 있다.</para>
            </summary>
            <param name="size">init queue size</param>
            <param name="full">full capacity</param>
        </member>
        <member name="M:Floware.Concurrent.MutexQueue`1.Enqueue(`0)">
            <summary>
            <para>Enqueue</para>
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:Floware.Concurrent.MutexQueue`1.Dequeue">
            <summary>
            <para>Blocking Dequeue</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.MutexQueue`1.Clear">
            <summary>
            <para>Clear Queue</para>
            </summary>
        </member>
        <member name="P:Floware.Concurrent.MutexQueue`1.Size">
            <summary>
            <para>Queue Size</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.SyncObject.Lock">
            <summary>
            빠른 socket response 를 보정하기 위해서 Lock을 잡아둘경우
            LockUtils.Await의 Monitor.Wait에서 같이 깨워준다
            이로서 Tcp Response를 보정할 수 있다.
            </summary>
        </member>
        <member name="M:Floware.Concurrent.SyncObject.Await(System.Int32)">
            <summary>
            <para>Notify: true</para>
            <para>Timeout: false</para>
            </summary>
        </member>
        <member name="T:Floware.Concurrent.Threadable">
            <summary>
            <para>상속해서 사용하는 Thread Class</para>
            <para>1. Native Thread ID</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.Threadable.Run(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.Concurrent.Threadable.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.Concurrent.Threadable.Start">
            <summary>
            Background thread로 시작한다.
            </summary>
        </member>
        <member name="M:Floware.Concurrent.Threadable.Stop">
            <summary/>
        </member>
        <member name="M:Floware.Concurrent.Threadable.Wait">
            <summary>
            <para>무한 대기, Awake를 하면 바로 실행된다.</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.Threadable.Wait(System.Int32)">
            <summary>
            <para>milli-second만큼 대기, Awake를 하면 바로 실행된다.</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.Threadable.Awake">
            <summary>
            Wait object을 깨워서 다음 동작 수행하게 함.
            </summary>
        </member>
        <member name="M:Floware.Concurrent.Threadable.ElapsedTime(System.Int64)">
            <summary/>
        </member>
        <member name="P:Floware.Concurrent.Threadable.IsAlive">
            <summary>
            Thread alive or not
            </summary>
        </member>
        <member name="P:Floware.Concurrent.Threadable.ThreadID">
            <summary>
            Native Thread ID
            </summary>
        </member>
        <member name="T:Floware.Concurrent.ThreadUtils">
            <summary>
            <para>Method 기반의 Thread 사용 class.</para>
            <para>-</para>
            <para>ThreadPool을 이용한 Thread 생성 및 PoolSize 지정</para>
            <para>InitPoolSize</para>
            <para>InvokePool</para>
            <para>-</para>
            <para>일반 backgroud Thread 실행</para>
            <para>Invoke</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.GetCurrThreadID">
            <summary>
            <para>Win32 Thread 가져오기.</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InitPoolSize(System.Int32)">
            <summary>
            <para>ThreadPool의 초기 사이즈를 잡는다.</para>
            <para>-</para>
            <para>사용중에 Thread는 InitSize 밑으로 내려갈 수 있지만</para>
            <para>생성이 다시 필요할 경우 InitSize만큼은 빠른 속도로 수행된다.</para>
            <para>-</para>
            <para>초기 생성가 아니며 최소 유지 시키는 사이즈</para>
            <para>-</para>
            </summary>
            <param name="min">Pool Size</param>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InitPoolSize(System.Int32,System.Int32)">
            <summary>
            min은 항상 유지, max는 임계치
            <para>max에 도달후 wait되어 기존 thread가 종료되면 다시 pool에서 수행한다.</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokePoolEx(Floware.TAction)">
            <summary>
            Logging exception without throw
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokePoolEx``1(Floware.TAction{``0},``0)">
            <summary>
            Logging exception without throw
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokePoolEx``2(Floware.TAction{``0,``1},``0,``1)">
            <summary>
            Logging exception without throw
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokePoolEx``3(Floware.TAction{``0,``1,``2},``0,``1,``2)">
            <summary>
            Logging exception without throw
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokePoolEx``4(Floware.TAction{``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Logging exception without throw
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokePool(Floware.TAction)">
            <summary>
            <para>ThreadPool을 이용한 Invoke</para>
            <para>호출 method는 Poolxxxx 형태의 method naming을 권장함.</para>
            <para>void argument 0 method</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokePool``1(Floware.TAction{``0},``0)">
            <summary>
            <para>ThreadPool을 이용한 Invoke</para>
            <para>호출 method는 Poolxxxx 형태의 method naming을 권장함.</para>
            <para>void argument 1 method</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokePool``2(Floware.TAction{``0,``1},``0,``1)">
            <summary>
            <para>ThreadPool을 이용한 Invoke</para>
            <para>호출 method는 Poolxxxx 형태의 method naming을 권장함.</para>
            <para>void argument 2 method</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokePool``3(Floware.TAction{``0,``1,``2},``0,``1,``2)">
            <summary>
            <para>ThreadPool을 이용한 Invoke</para>
            <para>호출 method는 Poolxxxx 형태의 method naming을 권장함.</para>
            <para>void argument 3 method</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokePool``4(Floware.TAction{``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            <para>ThreadPool을 이용한 Invoke</para>
            <para>호출 method는 Poolxxxx 형태의 method naming을 권장함.</para>
            <para>void argument 4 method</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokeEx(Floware.TAction)">
            <summary/>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokeEx``1(Floware.TAction{``0},``0)">
            <summary>
            Logging exception without throw
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokeEx``2(Floware.TAction{``0,``1},``0,``1)">
            <summary>
            Logging exception without throw
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokeEx``3(Floware.TAction{``0,``1,``2},``0,``1,``2)">
            <summary>
            Logging exception without throw
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.InvokeEx``4(Floware.TAction{``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Logging exception without throw
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.Invoke(Floware.TAction)">
            <summary>
            <para>Backgroud thread를 생성하여 invoke</para>
            <para>void argument 0</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.Invoke``1(Floware.TAction{``0},``0)">
            <summary>
            <para>Backgroud thread를 생성하여 invoke</para>
            <para>void argument 1</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.Invoke``2(Floware.TAction{``0,``1},``0,``1)">
            <summary>
            <para>Backgroud thread를 생성하여 invoke</para>
            <para>void argument 2</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.Invoke``3(Floware.TAction{``0,``1,``2},``0,``1,``2)">
            <summary>
            <para>Backgroud thread를 생성하여 invoke</para>
            <para>void argument 3</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.Invoke``4(Floware.TAction{``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            <para>Backgroud thread를 생성하여 invoke</para>
            <para>void argument 4</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.Kill(System.Threading.Thread)">
            <summary>
            <para>Thread 강제 kill</para>
            <para></para>
            <para>한번 종료한 Thread는 다시 사용할 수 없다. new 를 이용하여 생성해야 함.</para>
            <para>Socket read 동작은 중단되지 않는다.</para>
            <para>Socket 연결 중 동작은 중단된다.</para>
            <para>Socket 중단 처리를 위해서는 Kill후 Socket을 중단하는 방법 권장.ThreadAbortException 처리 가능.</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.Stop(System.Threading.Thread)">
            <summary>
            <para>1. Interrupt</para>
            <para>2. Join 100ms</para>
            <para>-</para>
            <para>Queue를 사용할 경우 ThreadInterruptedException시 break 구문을 수행하여야 한다.</para>
            </summary>
            <returns>stopped or not</returns>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.Interrupt(System.Threading.Thread)">
            <summary>
            단순 Interrupt, th thread wait state -> interrupt,
            종료 위해서는 break구문 처리 필요.
            </summary>
        </member>
        <member name="M:Floware.Concurrent.ThreadUtils.IsAlive(System.Threading.Thread)">
            <summary>
            Thread alive or not
            </summary>
        </member>
        <member name="P:Floware.Concurrent.ThreadUtils.ThBgMode">
            <summary/>
        </member>
        <member name="T:Floware.Concurrent.TsQueue`1">
            <summary>
            Thread safe Queue
            </summary>
        </member>
        <member name="M:Floware.Concurrent.TsQueue`1.#ctor">
            <summary>
            <para>init size 1024</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.TsQueue`1.#ctor(System.Int32)">
            <summary>
            <para>init size를 정할 수 있다.</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.TsQueue`1.Enqueue(`0)">
            <summary/>
        </member>
        <member name="M:Floware.Concurrent.TsQueue`1.Dequeue">
            <summary>
            <para>ThreadUtils.Interrupt으로 종료 가능함.</para>
            <para>종료가 안될 경우 ThreadUtils.Stop으로 해도 되나 Interrupt 권장함.</para>
            </summary>
        </member>
        <member name="M:Floware.Concurrent.TsQueue`1.Dequeue(System.Int32)">
            <summary>
            dequeue sometime wait
            </summary>
        </member>
        <member name="M:Floware.Concurrent.TsQueue`1.Pull">
            <summary>
            안전한 데이터 추출
            </summary>
        </member>
        <member name="M:Floware.Concurrent.TsQueue`1.Clear">
            <summary/>
        </member>
        <member name="P:Floware.Concurrent.TsQueue`1.Size">
            <summary/>
        </member>
        <member name="T:Floware.Dongle.Defender">
            <summary/>
        </member>
        <member name="M:Floware.Dongle.Defender.IsLicensed(Floware.TAction)">
            <summary/>
        </member>
        <member name="T:Floware.Dongle.License">
            <summary/>
        </member>
        <member name="M:Floware.Dongle.License.Permit">
            <summary/>
        </member>
        <member name="T:Floware.FFTP.FF">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.FFTP.FF.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.FFTP.FF.Port">
            <summary>
            <para>Tcp 포트</para>
            </summary>
        </member>
        <member name="P:Floware.FFTP.FF.Timeout">
            <summary>
            <para>기본 10sec</para>
            </summary>
        </member>
        <member name="P:Floware.FFTP.FF.BufferSize">
            <summary>
            <para>BufferSize: 기본 2MB</para>
            </summary>
        </member>
        <member name="P:Floware.FFTP.FF.PathEncoding">
            <summary>
            <para>Path Encoding:다국어 지원, 기본값은 OS charset</para>
            </summary>
        </member>
        <member name="T:Floware.FFTP.FileClient">
            <summary>
            <para>File download</para>
            </summary>
        </member>
        <member name="M:Floware.FFTP.FileClient.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.FFTP.FileClient.Download(System.String,System.String)">
            <summary>
            <para>Server -&gt; Local</para>
            <para>remote, local 경로</para>
            <para>-</para>
            <para>Exception</para>
            <para>연결 실패 경우</para>
            </summary>
            <param name="remotepath"></param>
            <param name="localpath"></param>
            <exception cref="T:Floware.Utils.AssertException">연결 실패의 경우.</exception>
        </member>
        <member name="M:Floware.FFTP.FileClient.DownloadSync(System.String,System.String)">
            <summary>
            <para>Sync방식 Download</para>
            <para>-</para>
            <para>Server -> Local</para>
            <para>remote, local 경로</para>
            <para>-</para>
            <para>Exception</para>
            <para>연결 실패 경우</para>
            </summary>
            <param name="remotepath"></param>
            <param name="localpath"></param>
        </member>
        <member name="M:Floware.FFTP.FileClient.Upload(System.String,System.String)">
            <summary>
            <para>Local -&gt; Server</para>
            <para>remote, local 경로</para>
            <para>-</para>
            <para>Exception</para>
            <para>Local파일 없는 경우</para>
            <para>연결 실패 경우</para>
            </summary>
            <param name="remotepath"></param>
            <param name="localpath"></param>
            <exception cref="T:Floware.Utils.AssertException">Local 파일 업는 경우, 연결실패의 경우.</exception>
        </member>
        <member name="M:Floware.FFTP.FileClient.UploadSync(System.String,System.String)">
            <summary>
            <para>Sync방식 Upload</para>
            <para>-</para>
            <para>Local -&gt; Server</para>
            <para>remote, local 경로</para>
            <para>-</para>
            <para>Exception</para>
            <para>Local파일 없는 경우</para>
            <para>연결 실패 경우</para>
            </summary>
            <param name="remotepath"></param>
            <param name="localpath"></param>
            <exception cref="T:Floware.Utils.AssertException">Local 파일 업는 경우, 연결실패의 경우.</exception>
        </member>
        <member name="M:Floware.FFTP.FileClient.Close">
            <summary>
            <para>CloseSocket</para>
            </summary>
        </member>
        <member name="E:Floware.FFTP.FileClient.OnProgressChanged">
            <summary>
            <para>arg: ProgressInfo</para>
            </summary>
        </member>
        <member name="E:Floware.FFTP.FileClient.OnCompleted">
            <summary>
            <para>arg1: remote path</para>
            <para>arg2: local path</para>
            </summary>
        </member>
        <member name="P:Floware.FFTP.FileClient.IpAddress">
            <summary>
            <para>FileServer IP</para>
            </summary>
        </member>
        <member name="T:Floware.FFTP.FileServer">
            <summary>
            <para>고속 파일 Download 서버</para>
            </summary>
        </member>
        <member name="M:Floware.FFTP.FileServer.Open">
            <summary>
            <para>전송 준비</para>
            </summary>
        </member>
        <member name="T:Floware.FFTP.ProgressInfo">
            <summary>
            <para>Fast FTP 진행 정보</para>
            </summary>
        </member>
        <member name="M:Floware.FFTP.ProgressInfo.ToString">
            <summary>
            <para>AccumSize/TotalSize</para>
            </summary>
        </member>
        <member name="P:Floware.FFTP.ProgressInfo.TotalSize">
            <summary>
            <para>전체 사이즈</para>
            </summary>
        </member>
        <member name="P:Floware.FFTP.ProgressInfo.AccumSize">
            <summary>
            <para>송수신 완료된 누적 사이즈</para>
            </summary>
        </member>
        <member name="P:Floware.FFTP.ProgressInfo.ProgressPercentage">
            <summary>
            <para>100%기준 Percentage</para>
            </summary>
        </member>
        <member name="T:Floware.FileSystem.FileUtils">
            <summary>
            <para>File, Path Utils</para>
            <para>-</para>
            <para>2012.08 닷넷 Path관련 함수 설명 필요해서 내장 시킴</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.GetFiles(System.String,System.String,System.Boolean)">
            <summary>
            <para>Directory.GetFiles는 folder가 없을 경우에 에러가 발생하므로 이를 보정함.</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.GetFileInfos(System.String,System.String,System.Boolean)">
            <summary>
            FileInfos
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.DeleteFileIfExist(System.String)">
            <summary>
            <para>File.Delete는 directory가 없을 경우에 에러가 발생하므로 이를 보정함.</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.ChangeExtension(System.String,System.String)">
            <summary>
            <para>실제 파일의 확장자를 바꾸지 않고 return 되는 경로 확장자만 바꾸어 진다.</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.GetFolderName(System.String)">
            <summary>
            <para>path의 폴더 경로를 가져오며 마지막에 PathSeparator \가 없다.</para>
            <para>e.g.</para>
            <para>C:\\Users\\Administrator\\AppData\\Local\\Temp</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.GetFolders(System.String,System.Boolean)">
            <summary>
            <para>Folder가 없을 경우에 에러가 발생하므로 이를 보정함.</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.CreateFolder(System.String,System.Boolean)">
            <summary>
            <para>Folder생성.</para>
            <para>File or Folder를 지원한다.</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.GetExtension(System.String)">
            <summary>
            <para>확장자 만을 가져옴 .이 포함된다.</para>
            <para>e.g.</para>
            <para>(.zip)</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.GetFileName(System.String)">
            <summary>
            <para>파일 이름(확장자 포함)만 추출하고 싶을 경우</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.GetFileNameWithoutExtension(System.String)">
            <summary>
            <para>파일 이름(확장자 없음)만 추출하고 싶을 경우</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.GetFullPath(System.String)">
            <summary>
            <para>전체 경로 추출</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.GetPathRoot(System.String)">
            <summary>
            <para>루트 경로 추출</para>
            <para>e.g.</para>
            <para>C:\\ or D:\\</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.GetRandomFileName">
            <summary>
            <para>Random파일을 생성하여 FileName만 추출한다.</para>
            <para>실제 파일은 만들어 지지 않는다.</para>
            <para>전체 경로를 추출하려면 GetFullPath 활용</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.GetTempFileName">
            <summary>
            <para>Temp파일의 전체 경로를 추출한다.</para>
            <para>실제 0바이트의 temp 파일이 생성된다.</para>
            <para>e.g.</para>
            <para>C:\\Users\\Administrator\\AppData\\Local\\Temp\\tmpEC58.tmp</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.GetTempPath">
            <summary>
            <para>경로 끝에 \\ 가 포함되어 있다.</para>
            <para>e.g.</para>
            <para>C:\\Users\\Administrator\\AppData\\Local\\Temp\\</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.IsFolder(System.String)">
            <summary>
            <para>Folder or not</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.IsFileLocked(System.IO.FileInfo)">
            <summary>
            <para>File이 다른 process가 열고 있는지 체크하는 함수</para>
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileUtils.OpenRead(System.String,System.Int32)">
            <summary>
            <para>다른 Process가 파일을 수정여부와 상관없이 파일을 열수있다.</para>
            </summary>
        </member>
        <member name="T:Floware.FileSystem.FileWatcher">
            <summary>
            FileWatcher
            </summary>
        </member>
        <member name="M:Floware.FileSystem.FileWatcher.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.FileSystem.FileWatcher.Watch">
            <summary>
            Watch start
            </summary>
        </member>
        <member name="E:Floware.FileSystem.FileWatcher.OnFileChanged">
            <summary>
            <para>arg: FileSystemEventArgs</para>
            <para>File 변경시 이벤트 발생.</para>
            </summary>
        </member>
        <member name="P:Floware.FileSystem.FileWatcher.Path">
            <summary>
            Fullpath or 상대경로
            </summary>
        </member>
        <member name="P:Floware.FileSystem.FileWatcher.Filter">
            <summary>
            <para>default: *.*</para>
            <para>example: *.csv</para>
            </summary>
        </member>
        <member name="T:Floware.FTP.FTPClient">
            <summary>
            <para>WebClient에 CWD를 하는 함수는 없다</para>
            <para>-</para>
            <para>(주의) FTP Remote 경로는 모두 FTP 접속시 접근되는 폴더 기준으로 해야한다.</para>
            <para>-</para>
            <para>2012.07</para>
            <para>UploadFile함수 기능 보강.</para>
            <para>-</para>
            </summary>
        </member>
        <member name="F:Floware.FTP.FTPClient.ANONYMOUS">
            <summary>Anonymous User ID</summary>
        </member>
        <member name="F:Floware.FTP.FTPClient.lock1">
            <summary>
            Webclient Support Only One IO
            </summary>
        </member>
        <member name="M:Floware.FTP.FTPClient.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.FTP.FTPClient.CheckCompulsory">
            <summary>
            <para>필수 체크 항목</para>
            <para>-</para>
            <para>1. 계정 세팅 connect 호출 여부 체크.</para>
            </summary>
        </member>
        <member name="M:Floware.FTP.FTPClient.Connect">
            <summary>
            <para>User, Password 접속 정보만 세팅하며</para>
            <para>바로 접속은 하지 않고 필요시 연결은 자동으로 처리한다.</para>
            <para>User를 세팅하지 않으면 기본 Anonymous User로 접속된다.</para>
            </summary>
        </member>
        <member name="M:Floware.FTP.FTPClient.ListDirectory(System.String)">
            <summary>
            <para>FTP server 원격 ListDirectory 목록 조회.</para>
            <para>-</para>
            <para>현재 경로 List가져오기</para>
            <para>ListDirectory("/")</para>
            </summary>
        </member>
        <member name="M:Floware.FTP.FTPClient.GetInitDirectory">
            <summary>
            <para>초기 접속 경로</para>
            <para>에러가 발생할 경우 ??를 return한다</para>
            </summary>
        </member>
        <member name="M:Floware.FTP.FTPClient.ChangeFileName(System.String,System.String)">
            <summary>
            <para>예제.</para>
            <para>ChangeFileName("/aaa.bbb", "aaa.ccc")</para>
            </summary>
        </member>
        <member name="M:Floware.FTP.FTPClient.MakeDirectory(System.String)">
            <summary>
            <para>Directory 생성이 필요할 경우마다 호출함, Exception이 발생하지 않으며 Debug로그만 Write한다.</para>
            <para>-</para>
            <para>모든 경로는 접속시 기본 경로에서 시작한다.</para>
            <para>-</para>
            <para>접속시 기본 경로: /home/fms</para>
            <para>//home/fms/FTP 만들기 예제</para>
            <para>-</para>
            <para>상대 경로로 만들 경우</para>
            <para>/FTP 앞에 /를 붙여 줘야 한다.</para>
            <para>-</para>
            <para>절대 경로로 만들 경우</para>
            <para>//home/fms/FTP</para>
            <param name="dir"></param>
            </summary>
        </member>
        <member name="M:Floware.FTP.FTPClient.DeleteFile(System.String)">
            <summary>
            <para>Delete Remote File or Directory</para>
            </summary>
            <param name="remote">File or Directory</param>
        </member>
        <member name="M:Floware.FTP.FTPClient.DownloadFile(System.String)">
            <summary>
            <para>Use DownloadFile(remotePath, localPath)</para>
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:Floware.FTP.FTPClient.DownloadFile(System.String,System.String)">
            <summary>
            <para>Sync 방식 File Download</para>
            <para>-</para>
            <para>모든 경로는 접속시 기본 경로에서 시작한다.</para>
            <para>-</para>
            <para>접속시 기본 경로: /home/fms</para>
            <para>//home/fms/FTP/aaa.txt Download 예제</para>
            <para>-</para>
            <para>상대 경로 Download</para>
            <para>DownloadFile(/FTP/aaa.txt, c:\aaa.txt)</para>
            <para>-</para>
            <para>절대 경로 Download</para>
            <para>DownloadFile("//home/fms/FTP/aaa.txt", "c:\aaa.txt")</para>
            <para>-</para>/// </summary>
            <param name="remotePath"></param>
            <param name="localPath"></param>
        </member>
        <member name="M:Floware.FTP.FTPClient.UploadFile(System.String,System.String)">
            <summary>
            <para>Sync방식 Upload FTP</para>
            <para>-</para>
            <para>모든 경로는 접속시 기본 경로에서 시작한다.</para>
            <para>-</para>
            <para>remoteFileName에는 파일 이름을 써줘야 한다.</para>
            <para>-</para>
            <para>접속시 기본 경로: /home/fms</para>
            <para>//home/fms/FTP/aaa.txt파일 올리기 예제</para>
            <para>-</para>
            <para>상대 경로 Upload</para>
            <para>UploadFile(/FTP/aaa.txt, c:\aaa.txt)</para>
            <para>-</para>
            <para>절대 경로 Upload</para>
            <para>UploadFile(//home/fms/FTP/aaa.txt, c:\aaa.txt)</para>
            <para>-</para>
            <para>주의: Server에 해당 파일이 있을 경우는 Option에 따라 다르게 동작함</para>
            <para>Delete 권한 있을 경우: Overwrite</para>
            <para>Delete 권한 없을 경우: 에러 발생함</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.FTP.FTPClient.UploadFileAsync(System.String,System.String)">
            <summary>
            <para>비동기 FTP File Upload Request</para>
            <para>-</para>
            <para>경로는 UploadFile을 참고한다.</para>
            </summary>
        </member>
        <member name="M:Floware.FTP.FTPClient.ToString">
            <summary>
            string.Format("FTPClient '{0}/{1}' '{2}:{3}'", IpAddress, Port, User, Password);
            </summary>
        </member>
        <member name="P:Floware.FTP.FTPClient.User">
            <summary>FTP Client User</summary>
        </member>
        <member name="P:Floware.FTP.FTPClient.IpAddress">
            <summary>FTP IpAddress</summary>
        </member>
        <member name="P:Floware.FTP.FTPClient.Port">
            <summary>FTP Port, Default 21</summary>
        </member>
        <member name="P:Floware.FTP.FTPClient.Password">
            <summary>FTP Password</summary>
        </member>
        <member name="P:Floware.FTP.FTPClient.Proxy">
            <summary>
            <para>Proxy</para>
            <para>-</para>
            <para>Default null</para>
            </summary>
        </member>
        <member name="T:Floware.HSMS.HsmsManager">
            <summary>
            Host용 Hsms Only
            <para>Instance는 Connect, Disconnect를 이용할 경우 기존 instance를 재사용한다.</para>
            </summary>
        </member>
        <member name="F:Floware.HSMS.HsmsManager.qQ">
            <summary>
            <para>Msg pump queue</para>
            </summary>
        </member>
        <member name="M:Floware.HSMS.HsmsManager.#ctor">
            <summary>
            default constructor
            </summary>
        </member>
        <member name="M:Floware.HSMS.HsmsManager.ReadMsgLibrary(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.HSMS.HsmsManager.Send(Floware.SECSFlow.Core.Object.SFMessage,System.Int32)">
            <summary>
            after milli-second dalay send
            <para>if after 0 -> direct call</para>
            </summary>
        </member>
        <member name="M:Floware.HSMS.HsmsManager.Send(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            Hsms send
            </summary>
        </member>
        <member name="M:Floware.HSMS.HsmsManager.ChgTcpTimeout(System.Boolean)">
            <summary>
            System time change disconnect 방지.
            </summary>
        </member>
        <member name="M:Floware.HSMS.HsmsManager.ReqReply(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            <para>sync 방식</para>
            <para>S1F3,S1F4에 유용함.</para>
            <para>Not Connected, T3 Timeout -> return null</para>
            </summary>
        </member>
        <member name="M:Floware.HSMS.HsmsManager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.HSMS.HsmsManager.Connect(System.Boolean,System.Int32)">
            <summary>
            Connect Delay
            </summary>
            <param name="active"></param>
            <param name="after">millis</param>
        </member>
        <member name="M:Floware.HSMS.HsmsManager.Connect(System.Boolean)">
            <summary>
            Hsms connect
            </summary>
        </member>
        <member name="M:Floware.HSMS.HsmsManager.Disconnect">
            <summary>
            Hsms disconnect
            </summary>
        </member>
        <member name="M:Floware.HSMS.HsmsManager.Dispose">
            <summary>
            Hsms dispose
            </summary>
        </member>
        <member name="E:Floware.HSMS.HsmsManager.OnHsmsContd">
            <summary>
            <para>arg: Config ID</para>
            </summary>
        </member>
        <member name="E:Floware.HSMS.HsmsManager.OnHsmsDiscontd">
            <summary>
            <para>arg1: Config ID</para>
            <para>arg2: Exception</para>
            </summary>
        </member>
        <member name="E:Floware.HSMS.HsmsManager.OnHsmsLog">
            <summary>
            <para>arg1: Config ID</para>
            <para>arg2: Log</para>
            </summary>
        </member>
        <member name="E:Floware.HSMS.HsmsManager.OnHsmsT3Timeout">
            <summary>
            <para>arg: SFMessage</para>
            </summary>
        </member>
        <member name="E:Floware.HSMS.HsmsManager.OnHsmsSent">
            <summary>
            <para>arg: SFMessage</para>
            </summary>
        </member>
        <member name="E:Floware.HSMS.HsmsManager.OnHsmsRecd">
            <summary>
            <para>arg: SFMessage</para>
            </summary>
        </member>
        <member name="E:Floware.HSMS.HsmsManager.OnHsmsRecdUnk">
            <summary>
            <para>arg1: Recdived SFMessage</para>
            <para>arg2: Compared SFMessage list</para>
            </summary>
        </member>
        <member name="P:Floware.HSMS.HsmsManager.HML">
            <summary/>
        </member>
        <member name="P:Floware.HSMS.HsmsManager.AutoS9Fy">
            <summary/>
        </member>
        <member name="P:Floware.HSMS.HsmsManager.Config">
            <summary>
            HsmsConfig
            </summary>
        </member>
        <member name="P:Floware.HSMS.HsmsManager.Item(System.String)">
            <summary>
            retrive SFM message
            </summary>
        </member>
        <member name="P:Floware.HSMS.HsmsManager.Connected">
            <summary>
            Hsms connected or not
            </summary>
        </member>
        <member name="T:Floware.HSMS.HsmsConfig">
            <summary>
            Host 용 HsmsConfig
            </summary>
        </member>
        <member name="T:Floware.Foco">
            <summary>
            <para>Floware old csharp object, POCO</para>
            <para>-</para>
            <para>1. Serializable</para>
            <para>2. ToString pretty override</para>
            </summary>
        </member>
        <member name="F:Floware.Foco.T_INT">
            <summary>
            Int32 타입과 동일
            </summary>
        </member>
        <member name="F:Floware.Foco.T_LONG">
            <summary>
            Int64 타입과 동일
            </summary>
        </member>
        <member name="F:Floware.Foco.T_FLOAT">
            <summary>
            Single 타입과 동일
            </summary>
        </member>
        <member name="F:Floware.Foco.T_DOUBLE">
            <summary>
            Double 타입과 동일
            </summary>
        </member>
        <member name="M:Floware.Foco.ToString">
            <summary>
            ToString 재정의
            </summary>
        </member>
        <member name="M:Floware.Foco.ChgNullValue(System.String)">
            <summary>
            string Property값이 null일 경우 v로 변경.
            </summary>
        </member>
        <member name="M:Floware.Foco.ChgNullValue">
            <summary>
            string Property값이 null일 경우 string.Empty로 변경.
            </summary>
        </member>
        <member name="F:Floware.Foco.NSS_NULL_STRING">
            <summary>
            Nss Null string setting
            <para>def: string.Empty</para>
            </summary>
        </member>
        <member name="M:Floware.Foco.IntV(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Foco.DoubleV(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.HSMS.HsmsConfig.#ctor">
            <summary>
            <para>생성자.</para>
            </summary>
        </member>
        <member name="P:Floware.HSMS.HsmsConfig.ID">
            <summary>
            HostID
            </summary>
        </member>
        <member name="P:Floware.HSMS.HsmsConfig.IpAddress">
            <summary>
            hsms ip
            </summary>
        </member>
        <member name="P:Floware.HSMS.HsmsConfig.Port">
            <summary>
            hsms port
            </summary>
        </member>
        <member name="P:Floware.HSMS.HsmsConfig.DeviceID">
            <summary/>
        </member>
        <member name="P:Floware.HSMS.HsmsConfig.T3">
            <summary/>
        </member>
        <member name="P:Floware.HSMS.HsmsConfig.T5">
            <summary/>
        </member>
        <member name="P:Floware.HSMS.HsmsConfig.T6">
            <summary/>
        </member>
        <member name="P:Floware.HSMS.HsmsConfig.HideLogLink">
            <summary/>
        </member>
        <member name="P:Floware.HSMS.HsmsConfig.TLink">
            <summary>
            LinkTest Timeout
            </summary>
        </member>
        <member name="P:Floware.HSMS.HsmsConfig.AutoRepDelay">
            <summary>
            <para>일부 드라이버의 성능 이슈때문에 linktest rep, autoreply에 대해 delay 적용.</para>
            <para>milli-second</para>
            </summary>
        </member>
        <member name="P:Floware.HSMS.HsmsConfig.TcpRecdTimeout">
            <summary>
            TLink > 0 ? Config.TLink + T6 : -1;
            </summary>
        </member>
        <member name="T:Floware.HSMS.HsmsMsgLib">
            <summary>
            sfm message lib 관리 class
            </summary>
        </member>
        <member name="F:Floware.HSMS.HsmsMsgLib.lock0">
            <summary>
            <para>Lock 처리</para>
            <para>-</para>
            <para>ReadMsgLibrary</para>
            <para>FindWellKnownMessage</para>
            <para>ClearReadMessages</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.HSMS.HsmsMsgLib.ReadMsgContent(System.String)">
            <summary>
            <para>*.sfm 내용 입력.</para>
            <para>Read, reload msg lib</para>
            </summary>
        </member>
        <member name="M:Floware.HSMS.HsmsMsgLib.ReadMsgLib(System.String)">
            <summary>
            <para>*.sfm 경로 입력.</para>
            <para>Read, reload msg lib</para>
            </summary>
        </member>
        <member name="M:Floware.HSMS.HsmsMsgLib.AddNew(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.HSMS.HsmsMsgLib.HasMsg(System.String)">
            <summary>
            ReadMsgLib후 msgName이 있는지 없는지 여부 검사.
            </summary>
        </member>
        <member name="P:Floware.HSMS.HsmsMsgLib.Item(System.String)">
            <summary>
            Msg clone 추출.
            </summary>
        </member>
        <member name="T:Floware.IFF.CEYON.AscCommReader">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.IFF.CEYON.BinCommReader">
            <summary/>
        </member>
        <member name="T:Floware.IFF.CEYON.CeRF">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.IFF.IffComm">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.IFF.IffComm.ENQ">
            <summary/>
        </member>
        <member name="F:Floware.IFF.IffComm.STX">
            <summary/>
        </member>
        <member name="F:Floware.IFF.IffComm.ETX">
            <summary/>
        </member>
        <member name="F:Floware.IFF.IffComm.ACK">
            <summary/>
        </member>
        <member name="F:Floware.IFF.IffComm.NAK">
            <summary/>
        </member>
        <member name="F:Floware.IFF.IffComm.logger">
            <summary/>
        </member>
        <member name="M:Floware.IFF.IffComm.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.IFF.IffComm.Read(Floware.IFF.IffObject)">
            <summary>
            
            </summary>
            <param name="iff"></param>
        </member>
        <member name="M:Floware.IFF.IffComm.Write(Floware.IFF.IffObject)">
            <summary>
            
            </summary>
            <param name="iff"></param>
        </member>
        <member name="M:Floware.IFF.IffComm.AdjTimeout(System.Int32)">
            <summary>
            mills second or second 둘다 허용하여 적당한 값 할당.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="P:Floware.IFF.IffComm.T5">
            <summary>
            connect timeout
            </summary>
        </member>
        <member name="P:Floware.IFF.IffComm.T6">
            <summary>
            receive timeout
            </summary>
        </member>
        <member name="P:Floware.IFF.IffComm.T8">
            <summary>
            Write read delay
            </summary>
        </member>
        <member name="P:Floware.IFF.IffComm.PortNo">
            <summary/>
        </member>
        <member name="M:Floware.IFF.CEYON.CeRF.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.IFF.CEYON.CeRF.AdjustChNo(System.Int32)">
            <summary>
            Write의 경우 chno 자동 보정.
            </summary>
            <param name="i"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.IFF.CEYON.CeRF.Read(System.Int32,System.Int32)">
            <summary/>
            <param name="addr"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.IFF.CEYON.CeRF.Write(System.Int32,System.Int32,System.String)">
            <summary/>
            <param name="addr"></param>
            <param name="size"></param>
            <param name="v"></param>
            <returns></returns>
        </member>
        <member name="P:Floware.IFF.CEYON.CeRF.ChNo">
            <summary>
            <para>READ: 0x80~0x83</para>
            </summary>
        </member>
        <member name="P:Floware.IFF.CEYON.CeRF.RetryCnt">
            <summary/>
        </member>
        <member name="P:Floware.IFF.CEYON.CeRF.ReaderID">
            <summary/>
        </member>
        <member name="M:Floware.IFF.CEYON.BinCommReader.Open">
            <summary/>
        </member>
        <member name="M:Floware.IFF.CEYON.BinCommReader.Read(Floware.IFF.IffObject)">
            <summary>
            
            </summary>
            <param name="iff"></param>
        </member>
        <member name="M:Floware.IFF.CEYON.AscCommReader.Write(Floware.IFF.IffObject)">
            <summary>
            
            </summary>
            <param name="iff"></param>
        </member>
        <member name="M:Floware.IFF.CEYON.AscCommReader.Read(Floware.IFF.IffObject)">
            <summary>
            
            </summary>
            <param name="iff"></param>
        </member>
        <member name="T:Floware.IFF.CEYON.AscTcpReader">
            <summary/>
        </member>
        <member name="T:Floware.IFF.CEYON.BinTcpReader">
            <summary/>
        </member>
        <member name="M:Floware.IFF.CEYON.BinTcpReader.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.IFF.CEYON.BinTcpReader.ChgAsciiMode">
            <summary/>
        </member>
        <member name="M:Floware.IFF.CEYON.BinTcpReader.ChgBinaryMode">
            <summary>
            CAP1.3 -> CAP1.3S
            </summary>
        </member>
        <member name="M:Floware.IFF.CEYON.BinTcpReader.TcpConnect">
            <summary/>
        </member>
        <member name="M:Floware.IFF.CEYON.BinTcpReader.TcpClose">
            <summary/>
        </member>
        <member name="M:Floware.IFF.CEYON.BinTcpReader.WR(Floware.IFF.IffObject,Floware.IFF.IffObject)">
            <summary>
            Write and Read
            </summary>
            <param name="w"></param>
            <param name="r"></param>
        </member>
        <member name="M:Floware.IFF.CEYON.BinTcpReader.Write(Floware.IFF.IffObject)">
            <summary>
            
            </summary>
            <param name="iff"></param>
        </member>
        <member name="M:Floware.IFF.CEYON.BinTcpReader.Read(Floware.IFF.IffObject)">
            <summary>
            
            </summary>
            <param name="iff"></param>
        </member>
        <member name="M:Floware.IFF.CEYON.BinTcpReader.ToString">
            <summary/>
            <returns></returns>
        </member>
        <member name="P:Floware.IFF.CEYON.BinTcpReader.IpAddr">
            <summary/>
        </member>
        <member name="M:Floware.IFF.CEYON.AscTcpReader.Write(Floware.IFF.IffObject)">
            <summary>
            
            </summary>
            <param name="iff"></param>
        </member>
        <member name="M:Floware.IFF.CEYON.AscTcpReader.Read(Floware.IFF.IffObject)">
            <summary>
            
            </summary>
            <param name="iff"></param>
        </member>
        <member name="M:Floware.IFF.CEYON.AscTcpReader.ToString">
            <summary/>
            <returns></returns>
        </member>
        <member name="T:Floware.IFF.LSIS.AscCommReader">
             <summary>
            <para></para>
             </summary>
        </member>
        <member name="T:Floware.IFF.LSIS.LsRF">
            <summary>
            <para>BlockNo 0: 4Byte, 1:8Byte</para>
            </summary>
        </member>
        <member name="M:Floware.IFF.LSIS.LsRF.#ctor">
            <summary/>
        </member>
        <member name="P:Floware.IFF.LSIS.LsRF.H">
            <summary/>
        </member>
        <member name="M:Floware.IFF.LSIS.AscCommReader.Read(Floware.IFF.IffObject)">
            <summary/>
            <param name="iff"></param>
        </member>
        <member name="M:Floware.IFF.LSIS.AscCommReader.ToString">
            <summary/>
        </member>
        <member name="T:Floware.IFF.LSIS.BinCommReader">
             <summary>
            <para>Host control mode --> OpMode:1 (default)</para>
            <para>Hexa commType --> CommType:1 (only setting 필요)</para>
            <para></para>
            <para>CommDev --> RS232 경우 점퍼로만 세팅 가능</para>
            <para></para>
            <para>console 모드로 들어갈 경우 전원을 2-3초 후에 꼽아야 함.</para>
            <para>Config change --> reboot</para>
            <para></para>
             </summary>
        </member>
        <member name="M:Floware.IFF.LSIS.BinCommReader.Read(Floware.IFF.IffObject)">
            <summary/>
        </member>
        <member name="M:Floware.IFF.LSIS.BinCommReader.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Floware.IFF.IffObject">
            <summary/>
        </member>
        <member name="M:Floware.IFF.IffObject.#ctor">
            <summary/>
        </member>
        <member name="P:Floware.IFF.IffObject.Addr">
            <summary/>
        </member>
        <member name="P:Floware.IFF.IffObject.Size">
            <summary>
            byte size
            </summary>
        </member>
        <member name="P:Floware.IFF.IffObject.Req">
            <summary/>
        </member>
        <member name="P:Floware.IFF.IffObject.Rsp">
            <summary/>
        </member>
        <member name="P:Floware.IFF.IffObject.ErrCode">
            <summary/>
        </member>
        <member name="P:Floware.IFF.IffObject.ErrText">
            <summary/>
        </member>
        <member name="P:Floware.IFF.IffObject.WriteV">
            <summary>
            Write시 Write Data
            </summary>
        </member>
        <member name="P:Floware.IFF.IffObject.ReadV">
            <summary>
            Read시 Read Data
            </summary>
        </member>
        <member name="P:Floware.IFF.IffObject.KeepTcp">
            <summary>
            Tcp 재사용 여부,
            true: TcpClose를 하지 않는다.
            </summary>
        </member>
        <member name="P:Floware.IFF.IffObject.NoError">
            <summary/>
        </member>
        <member name="T:Floware.IO.ConsoleOutputter">
            <summary>
            console data를 richtext box로 redirect하는 class
            </summary>
        </member>
        <member name="M:Floware.IO.ConsoleOutputter.ChangeFontColor(System.Drawing.Color)">
            <summary>
            <para>ChangeFontColor를 호출한 다음부터 logger의 Font Color가 변경된다.</para>
            <para>화면 Thread에서 호출해야 함.</para>
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:Floware.IO.ConsoleOutputter.Output">
            <summary>
            <para>redirect 시작.</para>
            </summary>
        </member>
        <member name="P:Floware.IO.ConsoleOutputter.LinesWaterMark">
            <summary>
            <para>richtext clear할 라인수</para>
            </summary>
        </member>
        <member name="P:Floware.IO.ConsoleOutputter.TextBox">
            <summary>
            <para>console data redirect 되는 richtext</para>
            </summary>
        </member>
        <member name="T:Floware.IO.MbCommUtils">
            <summary>
            Modbus Serial Comm Utils
            </summary>
        </member>
        <member name="M:Floware.IO.MbCommUtils.ReadReqCrcRTU(System.Int32,System.Byte,System.Int32,System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.IO.MbCommUtils.WriteSingleWordCrcRTU(System.Int32,System.Byte,System.Int32,System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.IO.MbCommUtils.WriteWordCrcRTU(System.Int32,System.Byte,System.Int32,System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.IO.MbCommUtils.ReadRspCrcRTU(Floware.IO.SerialComm)">
            <summary/>
        </member>
        <member name="M:Floware.IO.MbCommUtils.CrcCheck(Floware.Utils.MemoryBuffer)">
            <summary/>
        </member>
        <member name="T:Floware.IO.SpDetail">
            <summary>
            <para>SerialPort Detail Config</para>
            </summary>
        </member>
        <member name="M:Floware.IO.SpDetail.#ctor">
            <summary/>
        </member>
        <member name="P:Floware.IO.SpDetail.BaudRate">
            <summary>
            <para>2400</para>
            <para>4800</para>
            <para>7200</para>
            <para>9600(Default)</para>
            <para>14400</para>
            <para>19200</para>
            <para>38400</para>
            <para>57600</para>
            <para>115200</para>
            </summary>
        </member>
        <member name="P:Floware.IO.SpDetail.Parity">
            <summary>
            <para>Parity.None(Default)</para>
            <para>Parity.Odd</para>
            <para>Parity.Even</para>
            <para>Parity.Mark</para>
            <para>Parity.Space</para>
            </summary>
        </member>
        <member name="P:Floware.IO.SpDetail.StopBits">
            <summary>
            <para>StopBits.None</para>
            <para>StopBits.One(Default)</para>
            <para>StopBits.Two</para>
            </summary>
        </member>
        <member name="P:Floware.IO.SpDetail.DataBits">
            <summary>
            <para>7</para>
            <para>8(Default)</para>
            </summary>
        </member>
        <member name="P:Floware.IO.SpDetail.Handshake">
            <summary>
            <para>None(Default)</para>
            </summary>
        </member>
        <member name="T:Floware.LINQ.LinqUtils">
            <summary>
            <para>TopN:Linq 기본함수. Skip, Take 사용.</para>
            <para>Any</para>
            </summary>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwGroupKey``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            GroupBy Key를 List로 반환함.
            </summary>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwGroupList``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})">
            <summary>
            GroupBy (Key+List) Dictionary
            </summary>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>
            <para>List에서만 수행되는 ForEach를 IEnumerable 에서도 수행가능.</para>
            <para>-</para>
            <para>!! FwEach 2개 이상 사용시 반드시 ToList로 변경 후 호출.</para>
            <para>Select로 가져온 IEnumerable은 Cursor가 마지막 위치 이므로 Loop를 수행하지 않음.</para>
            </summary>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwContains``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            <para>source 객체의 특정 Property항목중 comp를 포함하는 List 추출.</para>
            <para>!! comp의 입력 순서를 보장한다, 20151204</para>
            <para>e.g.)var v = ll.FwContains(x => x.IntX, new int[] { 2, 3 });</para>
            <para>e.g.)var v = ll.FwContains(x => x.IntX, lly.Select(y => y.IntY));</para>
            </summary>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwSort``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            <para>기본 Sort, Argument 없는 OrderBy와 동일함.</para>
            <para>string, int, DateTime등 기본 compare가 있는 타입에 사용가능함.</para>
            </summary>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwSort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEnumerable{``1})">
            <summary>
            <para>comp의 기준으로 sort한다.</para>
            <para>comp 포함되지 않는 항목은 뒤로 보내서 위치시킨다.</para>
            </summary>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwSort``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},``1[])">
            <summary>
            <para>comp의 기준으로 sort한다.</para>
            <para>comp 포함되지 않는 항목은 뒤로 보내서 위치시킨다.</para>
            </summary>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwTake``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},``1,``1)">
            <summary>
            from~to 부분을 Take함.
            <para>to 는 from 이후의 최초 발견되는 to까지 찾는다.</para>
            <para>from이 없거나 to가 없는 경우 exception</para>
            <para>from 이후 to가 없을 경우 exception</para>
            </summary>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwFormat``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Object})">
            <summary/>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwFormat``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Object},System.String)">
            <summary/>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwNothing``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
            조건을 만족하는 element가 하나도 없으면.. true
            </summary>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwBetween(System.DateTime,System.DateTime,System.DateTime)">
            <summary>
            Between
            <para>Linq사용가능하지만 NoSQL 사용불가</para>
            </summary>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.FwBetween(System.Int32,System.Int32,System.Int32)">
            <summary>
            Between
            <para>Linq, NssModel 사용가능</para>
            <para>MongoModel 사용불가</para>
            </summary>
        </member>
        <member name="M:Floware.LINQ.LinqUtils.NssNull(System.String)">
            <summary>
            Nss null string check 함수
            <para>string.IsNullOrEmpty이거나 Foco.NSS_NULL_STRING 입력값과 동일하면 true</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.AppenderUtils.RemoveAppender(log4net.Repository.Hierarchy.Logger,System.String)">
            <summary>
            <para>1. Logger에서 Appender 제거함.</para>
            <para>2. Close Appender</para>
            </summary>
            <param name="logger"></param>
            <param name="name"></param>
        </member>
        <member name="T:Floware.Logging.FileAppender">
            <summary>
            <para>Floware FileAppender</para>
            <para>-</para>
            <para>default value</para>
            <para>BackupDays: 10</para>
            <para>DatePattern: -MMdd'.log'</para>
            <para>Layout: %d{MM-dd HH:mm:ss.fff} %-2.2t %-5p %m%n</para>
            <para>-</para>
            <para>StaticLogFileName: 최초 파일 생성시 datepattern이 적용된 파일로 생성여부.</para>
            <para>default: true, xxx.log</para>
            <para>false: xxx-130405.log</para>
            <para>폴더 생성 모드를 사용할 경우 자동으로 false로 세팅된다.</para>
            <para>-</para>
            <para>PreserveLogFileNameExtension: log4net 1.2.11 이상</para>
            <para>-</para>
            <para>폴더 만들기 예제 File</para>
            <para>"C:/LOG/SECS-I/%d/SECS1"</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.FileAppender.#ctor">
            <summary>
            FileAppender constructor
            </summary>
        </member>
        <member name="M:Floware.Logging.FileAppender.#ctor(log4net.Core.Level)">
            <summary>
            FileAppender constructor
            </summary>
            <param name="level"></param>
        </member>
        <member name="M:Floware.Logging.FileAppender.ActivateOptions">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Logging.FileAppender.OpenFile(System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="fileName"></param>
            <param name="append"></param>
        </member>
        <member name="M:Floware.Logging.FileAppender.AdjustFileBeforeAppend">
            <summary>
            Logging을 할때마다 아래 함수가 호출되며
            먼저 파일을 닫고, OpenFile이 호출된다.
            </summary>
        </member>
        <member name="M:Floware.Logging.FileAppender.OnClose">
            <summary>
            appender close
            </summary>
        </member>
        <member name="E:Floware.Logging.FileAppender.OnFileOpened">
            <summary>
            <para>arg: FileName</para>
            </summary>
        </member>
        <member name="P:Floware.Logging.FileAppender.BackupDays">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.Logging.Logger">
            <summary>
            Logger wrapping class
            </summary>
        </member>
        <member name="M:Floware.Logging.Logger.GetLogger">
            <summary>
            Logger를 생성한 Class의 Type을 찾아서 Logger를 만든다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.Logging.Logger.GetLogger(System.Type)">
            <summary>
            Logger factory
            </summary>
        </member>
        <member name="M:Floware.Logging.Logger.GetLogger(System.String)">
            <summary>
            Logger factory
            </summary>
        </member>
        <member name="M:Floware.Logging.Logger.D(System.Object)">
            <summary>
            Debug
            </summary>
        </member>
        <member name="M:Floware.Logging.Logger.D(System.String,System.Object[])">
            <summary>
            DebugFormat
            </summary>
        </member>
        <member name="M:Floware.Logging.Logger.I(System.Object)">
            <summary>
            Info
            </summary>
        </member>
        <member name="M:Floware.Logging.Logger.I(System.String,System.Object[])">
            <summary>
            InfoFormat
            </summary>
        </member>
        <member name="M:Floware.Logging.Logger.W(System.Object)">
            <summary>
            Warn
            </summary>
        </member>
        <member name="M:Floware.Logging.Logger.W(System.String,System.Object[])">
            <summary>
            WarnFormat
            </summary>
        </member>
        <member name="M:Floware.Logging.Logger.E(System.Object)">
            <summary>
            Error
            </summary>
        </member>
        <member name="M:Floware.Logging.Logger.E(System.String,System.Object[])">
            <summary>
            ErrorFormat
            </summary>
        </member>
        <member name="M:Floware.Logging.Logger.F(System.Object)">
            <summary>
            Fatal
            </summary>
        </member>
        <member name="M:Floware.Logging.Logger.F(System.String,System.Object[])">
            <summary>
            FatalFormat
            </summary>
        </member>
        <member name="P:Floware.Logging.Logger.IsDE">
            <summary>
            DebugEnabled
            </summary>
        </member>
        <member name="M:Floware.Logging.LoggerUtils.HasLogger(System.String)">
            <summary>
            Has Logger or not
            </summary>
            <param name="loggerName">LoggerName</param>
            <returns></returns>
        </member>
        <member name="M:Floware.Logging.LoggerUtils.GetLogger(System.String)">
            <summary>
            <para>Logger가 없을 경우 만들어준다.</para>
            <para>AddLogger 기능과 같다.</para>
            </summary>
            <param name="loggerName"></param>
            <returns></returns>
        </member>
        <member name="T:Floware.Logging.LogUtils">
            <summary>
            <para>Log4Net Utils</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.Configure">
            <summary>
            <para>empty log4net config</para>
            <para>log repository...</para>
            <para>Level: INFO</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.Configure(System.String)">
            <summary>
            <para>Log4net config file loading</para>
            </summary>
            <param name="cfgPath"></param>
        </member>
        <member name="M:Floware.Logging.LogUtils.Configure(System.String,System.Boolean)">
            <summary/>
        </member>
        <member name="M:Floware.Logging.LogUtils.ChangeAdditivity(System.String,System.Boolean)">
            <summary>
            <para>Change additivity option</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.CreateConsoleAppender">
            <summary>
            <para>Create Console Appender</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.CreateConsoleAppender(System.String)">
            <summary/>
            <param name="name">Appender Name</param>
        </member>
        <member name="M:Floware.Logging.LogUtils.CreateConsoleAppender(System.String,log4net.Layout.ILayout)">
            <summary/>
            <param name="name">Appender Name</param>
            <param name="layout"></param>
        </member>
        <member name="M:Floware.Logging.LogUtils.CommonLogging">
            <summary/>
        </member>
        <member name="M:Floware.Logging.LogUtils.ChangeLevel(log4net.Core.Level)">
            <summary>
            <para>RootLogger Change Level</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.ChangeLevel(System.String,log4net.Core.Level)">
            <summary>
            <para>Non-RootLogger Change Level</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.ChangeThreshold(System.String,log4net.Core.Level)">
            <summary>
            <para>Change RootLogger Appender's Level</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.ChangeThreshold(System.String,System.String,log4net.Core.Level)">
            <summary>
            <para>Change Specific Logger Appender's Level</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.CreateLayout(System.String)">
            <summary>
            <para>Pattern layout 생성</para>
            <para>-</para>
            <para>Class: %c</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.AddAppender(log4net.Appender.IAppender)">
            <summary>
            <para>RootLogger AddAppender</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.AddAppender(System.String,log4net.Appender.IAppender)">
            <summary>
            <para>Non-RootLogger AddAppender</para>
            <para>Logger가 없을 경우 생성한다.</para>
            <para>-</para>
            <para>AppenderName이 없을 경우 loggerName을 AppenderName으로 세팅한다.</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.AddAppender(System.String,log4net.Appender.IAppender,System.Boolean)">
            <summary>
            <para>Non-RootLogger AddAppender</para>
            <para>Logger가 없을 경우 생성한다.</para>
            <para>-</para>
            <para>AppenderName이 없을 경우 loggerName을 AppenderName으로 세팅한다.</para>
            <para>-</para>
            <para>Additivity option</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.RemoveAppender(System.String)">
            <summary>
            <para>RootLogger</para>
            <para>-</para>
            <para>1. RootLogger에서 Appender 제거함.</para>
            <para>2. Close Appender</para>
            </summary>
        </member>
        <member name="M:Floware.Logging.LogUtils.RemoveAppender(System.String,System.String)">
            <summary>
            <para>Non-RootLogger</para>
            <para>-</para>
            <para>1. Logger에서 Appender 제거함.</para>
            <para>2. Close Appender</para>
            </summary>
        </member>
        <member name="P:Floware.Logging.LogUtils.RootLogger">
            <summary>
            <para>Get RootLogger</para>
            </summary>
        </member>
        <member name="P:Floware.Logging.LogUtils.DefaultLayout">
            <summary>
            <para>%d{MM-dd HH:mm:ss.fff} %-2.2t %-5p %m%n</para>
            <para>-</para>
            <para>LoggerName: %-10.10c</para>
            <para>-</para>
            <para>%-a.b -:left justify, a:minimum width, b:maximum width</para>
            <para>-</para>
            </summary>
        </member>
        <member name="T:Floware.Logging.NoSqlAppender">
            <summary>
            log4net mongo appender
            </summary>
        </member>
        <member name="M:Floware.Logging.NoSqlAppender.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.Logging.NoSqlAppender.ActivateOptions">
            <summary/>
        </member>
        <member name="M:Floware.Logging.NoSqlAppender.Append(log4net.Core.LoggingEvent)">
            <summary>
            queue에 적재만 한다.
            </summary>
        </member>
        <member name="M:Floware.Logging.NoSqlAppender.ClearHistory">
            <summary>
            BackupDay 기준의 데이터만 보관.
            </summary>
        </member>
        <member name="P:Floware.Logging.NoSqlAppender.BackupDay">
            <summary>
            Log 보관주기
            </summary>
        </member>
        <member name="P:Floware.Logging.NoSqlAppender.DBName">
            <summary/>
        </member>
        <member name="P:Floware.Logging.NoSqlAppender.TableName">
            <summary/>
        </member>
        <member name="P:Floware.Logging.NoSqlAppender.IP">
            <summary/>
        </member>
        <member name="P:Floware.Logging.NoSqlAppender.PortNo">
            <summary>
            Server port no
            <para>def: 27017</para>
            </summary>
        </member>
        <member name="T:Floware.Logging.NoSqlLog">
            <summary/>
        </member>
        <member name="P:Floware.Logging.NoSqlLog.AddTime">
            <summary/>
        </member>
        <member name="P:Floware.Logging.NoSqlLog.Level">
            <summary/>
        </member>
        <member name="P:Floware.Logging.NoSqlLog.Thread">
            <summary/>
        </member>
        <member name="P:Floware.Logging.NoSqlLog.Logger">
            <summary/>
        </member>
        <member name="P:Floware.Logging.NoSqlLog.Key0">
            <summary>
            Key 0th parameter
            <para>Log의 space 기준 0th value</para>
            <para>1~64 string only</para>
            </summary>
        </member>
        <member name="P:Floware.Logging.NoSqlLog.LogV">
            <summary/>
        </member>
        <member name="P:Floware.Logging.NoSqlLog.Id">
            <summary/>
        </member>
        <member name="T:Floware.MAIL.MailBox">
            <summary/>
        </member>
        <member name="M:Floware.MAIL.MailBox.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.MAIL.MailBox.Send(Floware.MAIL.MailV)">
            <summary>
            수신자: MailV.AddTo
            <para>CC: MailV.AddCC</para>
            </summary>
        </member>
        <member name="P:Floware.MAIL.MailBox.FromName">
            <summary/>
        </member>
        <member name="P:Floware.MAIL.MailBox.FromMail">
            <summary/>
        </member>
        <member name="P:Floware.MAIL.MailBox.Uid">
            <summary/>
        </member>
        <member name="P:Floware.MAIL.MailBox.Pwd">
            <summary/>
        </member>
        <member name="P:Floware.MAIL.MailBox.IpAddr">
            <summary/>
        </member>
        <member name="P:Floware.MAIL.MailBox.Encoding">
            <summary/>
        </member>
        <member name="T:Floware.MAIL.MailV">
            <summary/>
        </member>
        <member name="M:Floware.MAIL.MailV.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.MAIL.MailV.AddTo(System.String,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.MAIL.MailV.AddCC(System.String,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.MAIL.MailV.AddBCC(System.String,System.String)">
            <summary/>
        </member>
        <member name="P:Floware.MAIL.MailV.Subject">
            <summary/>
        </member>
        <member name="P:Floware.MAIL.MailV.Body">
            <summary/>
        </member>
        <member name="P:Floware.MAIL.MailV.HtmlFormat">
            <summary/>
        </member>
        <member name="P:Floware.MAIL.MailV.FileList">
            <summary/>
        </member>
        <member name="M:Floware.MQ.IP.Mediator.Init(System.String,System.Int32)">
            <summary>
            active-active 지원
            </summary>
        </member>
        <member name="M:Floware.MQ.IP.Mediator.EnqFwdWrite(Floware.MQ.IP.Message)">
            <summary>
            연결이 단절되었을때 queue에 넣지 않음
            </summary>
        </member>
        <member name="M:Floware.MQ.IP.Mediator.FwdListen(System.Int32)">
            <summary>
            새로운 연결이 이루어지면 이전 연결은 종료한다
            loop는 1conn 만 유지 정책
            </summary>
        </member>
        <member name="P:Floware.MQ.IP.Mediator.TotalQueueSize">
            <summary>
            전체 Node의 QueueSize 합계.
            </summary>
        </member>
        <member name="P:Floware.MQ.IP.Message.IsForward">
            <summary>
            Active mode를 통해 받은 메시지임
            </summary>
        </member>
        <member name="T:Floware.MQ.IP.MQServer">
            <summary>
            In-process .NET MQServer
            </summary>
        </member>
        <member name="M:Floware.MQ.IP.MQServer.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.MQ.IP.MQServer.Init(System.Int32)">
            <summary>
            <para>-</para>
            </summary>
        </member>
        <member name="P:Floware.MQ.IP.MQServer.Forward">
            <summary>
            Forward ip
            </summary>
        </member>
        <member name="P:Floware.MQ.IP.MQServer.HttpInfo">
            <summary>
            Service http information
            </summary>
        </member>
        <member name="P:Floware.MQ.IP.MQServer.TotalMsgCount">
            <summary>
            Total Message Count
            </summary>
        </member>
        <member name="P:Floware.MQ.IP.MQServer.TotalQueueSize">
            <summary>
            전체 Node의 QueueSize 합계.
            </summary>
        </member>
        <member name="P:Floware.MQ.IP.MQServer.LostMsgCount">
            <summary>
            전달 실패 Msg Count
            </summary>
        </member>
        <member name="P:Floware.MQ.IP.MQServer.CurrReqMsgCount">
            <summary>
            Current Request Message Count
            </summary>
        </member>
        <member name="P:Floware.MQ.IP.MQServer.NodeCount">
            <summary>
            Connected Node Count
            </summary>
        </member>
        <member name="F:Floware.MQ.IP.E_NODE_TYPE.Withdraw">
            <summary>
            Listener종료
            </summary>
        </member>
        <member name="P:Floware.MQ.IP.Node.WatchComm">
            <summary>OnMQCommChgd Link or not</summary>
        </member>
        <member name="P:Floware.MQ.IP.Node.RemoteEp">
            <summary>Disconnect에서도 해야 하므로 get,set 모두 가짐.</summary>
        </member>
        <member name="T:Floware.MQ.MQClient">
            <summary>
            MQClient
            </summary>
        </member>
        <member name="F:Floware.MQ.MQClient.lock1">
            <summary>
            Send에 대한 Lock 즉 Threadsafe 보장.
            </summary>
        </member>
        <member name="F:Floware.MQ.MQClient.qQ">
            <summary>
            MqMsg receive queue
            </summary>
        </member>
        <member name="F:Floware.MQ.MQClient.qW">
            <summary>
            Write Queue
            Request를 제외하고는 Queue로 분리한다.
            </summary>
        </member>
        <member name="M:Floware.MQ.MQClient.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.MQ.MQClient.Close">
            <summary>
            종료
            </summary>
        </member>
        <member name="M:Floware.MQ.MQClient.Init">
            <summary>
            <para>연결 요청 무한 시도</para>
            </summary>
        </member>
        <member name="M:Floware.MQ.MQClient.Withdraw">
            <summary>
            메시지 수신 종료
            </summary>
        </member>
        <member name="M:Floware.MQ.MQClient.Send(Floware.MQ.MQMessage)">
            <summary>
            send MQMessage
            </summary>
        </member>
        <member name="M:Floware.MQ.MQClient.Request(Floware.MQ.MQMessage,System.Int32)">
            <summary>
            Sync send and receive
            <para>socket에 write까지 함수내에서 처리한다.</para>
            </summary>
            <param name="mqreq"></param>
            <param name="millis">reply 대기 시간 ms</param>
        </member>
        <member name="M:Floware.MQ.MQClient.Reply(Floware.MQ.MQMessage,Floware.MQ.MQMessage)">
            <summary>
            <para> if (mqmsg.IsRequest)</para>
            <para> {</para>
            <para>     MQMessage rep = new MQMessage();</para>
            <para>     rep.SetValue(mqmsg.GetValue() + DateUtils.CurrentTimeMillis);</para>
            <para>     mq.Reply(mqmsg, rep);</para>
            <para>     return;</para>
            <para> }</para>
            </summary>
            <param name="recd">수신 msg</param>
            <param name="reply">reply msg</param>
        </member>
        <member name="M:Floware.MQ.MQClient.Reply(System.String,Floware.MQ.MQMessage)">
            <summary>
            <para>if (mqmsg.IsRequest)</para>
            <para>{</para>
            <para>    MQMessage rep = new MQMessage();</para>
            <para>    rep.SetValue(mqmsg.GetValue() + DateUtils.CurrentTimeMillis);</para>
            <para>    mq.Reply(mqmsg.ReqName, rep);</para>
            <para>    return;</para>
            <para>}</para>
            </summary>
            <param name="reqName">수신 msg's req name</param>
            <param name="reply">reply msg</param>
        </member>
        <member name="M:Floware.MQ.MQClient.ToString">
            <summary>
            MQClient + Config;
            </summary>
        </member>
        <member name="P:Floware.MQ.MQClient.Config">
            <summary>
            MQ connection 정보.
            </summary>
        </member>
        <member name="P:Floware.MQ.MQClient.QueuedCount">
            <summary>
            Recieve queue에 축적된 count
            </summary>
        </member>
        <member name="P:Floware.MQ.MQClient.Connected">
            <summary>
            server와 연결 상태
            </summary>
        </member>
        <member name="E:Floware.MQ.MQClient.OnMQRecd">
            <summary>
            <para>arg: MQMessage</para>
            </summary>
        </member>
        <member name="E:Floware.MQ.MQClient.OnMQTimeout">
            <summary>
            <para>arg: MQMessage</para>
            </summary>
        </member>
        <member name="E:Floware.MQ.MQClient.OnMQSent">
            <summary>
            <para>arg: MQMessage</para>
            </summary>
        </member>
        <member name="E:Floware.MQ.MQClient.OnMQContd">
            <summary>
            <para>arg: MQConfig</para>
            </summary>
        </member>
        <member name="E:Floware.MQ.MQClient.OnMQDiscontd">
            <summary>
            <para>arg: MQConfig</para>
            </summary>
        </member>
        <member name="E:Floware.MQ.MQClient.OnMQCommChgd">
            <summary>
            
            </summary>
        </member>
        <member name="E:Floware.MQ.MQClient.OnMQActiveChgd">
            <summary>
            Active, standby
            </summary>
        </member>
        <member name="T:Floware.MQ.MQConfig">
            <summary>
            MQ connection 정보
            </summary>
        </member>
        <member name="M:Floware.MQ.MQConfig.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Floware.MQ.MQConfig.ToString">
            <summary>
            MyName->ToName [IpAddress/Port]
            </summary>
            <returns></returns>
        </member>
        <member name="P:Floware.MQ.MQConfig.Heartbeat">
            <summary>
            Heartbeat 주기 설정(초)
            <para>Def: 30 sec</para>
            </summary>
        </member>
        <member name="P:Floware.MQ.MQConfig.ToName">
            <summary>
            default toname 으로 MQMessage에 ToName을 setting하지 않을 경우 사용된다.
            </summary>
        </member>
        <member name="P:Floware.MQ.MQConfig.MyName">
            <summary>
            Listen name, subscribe name으로 MQMessage에 From을 넣지 않을 경우 적용된다.
            </summary>
        </member>
        <member name="P:Floware.MQ.MQConfig.IpAddress">
            <summary/>
        </member>
        <member name="P:Floware.MQ.MQConfig.Port">
            <summary>
            TCP port
            </summary>
        </member>
        <member name="P:Floware.MQ.MQConfig.RcvMode">
            <summary>
            메시지 수신 모드 세팅
            </summary>
        </member>
        <member name="T:Floware.MQ.MQConfig.Mode">
            <summary>
            Msg 수신모드
            </summary>
        </member>
        <member name="F:Floware.MQ.MQConfig.Mode.Default">
            <summary>
            일반 subscribe mode
            </summary>
        </member>
        <member name="F:Floware.MQ.MQConfig.Mode.Queue">
            <summary>
            Queue모드
            </summary>
        </member>
        <member name="F:Floware.MQ.MQConfig.Mode.Balance">
            <summary>
            Balance mode: round-robin
            </summary>
        </member>
        <member name="T:Floware.MQ.MQMessage">
            <summary>
            MQMessage : ICloneable
            </summary>
        </member>
        <member name="M:Floware.MQ.MQMessage.#ctor">
            <summary>
            <para>생성자.</para>
            </summary>
        </member>
        <member name="M:Floware.MQ.MQMessage.AddField(System.String,System.Object)">
            <summary>
            Field msg 입력
            </summary>
        </member>
        <member name="M:Floware.MQ.MQMessage.GetFieldV(System.String)">
            <summary>
            Field msg 가져오기
            </summary>
        </member>
        <member name="M:Floware.MQ.MQMessage.HasField(System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.MQ.MQMessage.GetFieldIntV(System.String)">
            <summary>
            Field msg 가져오기
            </summary>
        </member>
        <member name="M:Floware.MQ.MQMessage.GetValue">
            <summary>
            string msg data 추출(utf8 encoding)
            </summary>
        </member>
        <member name="M:Floware.MQ.MQMessage.GetValue(System.Text.Encoding)">
            <summary>
            string encoding 방식으로 추출
            </summary>
        </member>
        <member name="M:Floware.MQ.MQMessage.SetValue(System.String)">
            <summary>
            MQMessage string value setting(utf8)
            </summary>
        </member>
        <member name="M:Floware.MQ.MQMessage.SetValue(System.String,System.Text.Encoding)">
            <summary>
            MQMessage string value setting
            </summary>
            <param name="s"></param>
            <param name="encoding">encoding</param>
        </member>
        <member name="M:Floware.MQ.MQMessage.Clone">
            <summary>
            mq msg clone
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.MQ.MQMessage.Serialize(System.Object)">
            <summary>
            <para>Serialize object msg 구성.</para>
            <para>모든 객체에 [Serialize] attribute가 되어 있어야 하며, 동일 프로그래밍 언어에서만 가능하다.</para>
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:Floware.MQ.MQMessage.ChgValueType(System.Byte)">
            <summary>
            Normal(0:default), SZ(1), FIELD(2)
            </summary>
        </member>
        <member name="M:Floware.MQ.MQMessage.Deserialize">
            <summary>
            수신 msg에서 Serialize 객체 추출
            </summary>
        </member>
        <member name="M:Floware.MQ.MQMessage.ToString">
            <summary>
            MQMessage ToString Override
            </summary>
        </member>
        <member name="P:Floware.MQ.MQMessage.Fields">
            <summary>
            Field 노출
            </summary>
        </member>
        <member name="P:Floware.MQ.MQMessage.IsTimeout">
            <summary>
            Request 방식 Timeout 발생 여부
            </summary>
        </member>
        <member name="P:Floware.MQ.MQMessage.Code">
            <summary>
            <para>Message Category Code</para>
            </summary>
        </member>
        <member name="P:Floware.MQ.MQMessage.ContentString">
            <summary>
            <para>Content Pretty ToString</para>
            </summary>
        </member>
        <member name="P:Floware.MQ.MQMessage.ReqName">
            <summary>
            <para>Request 방식을 사용할 경우 ReqName</para>
            <para>자동 Trim을 수행한다.</para>
            </summary>
        </member>
        <member name="P:Floware.MQ.MQMessage.IsRequest">
            <summary>
            request msg or not
            </summary>
        </member>
        <member name="P:Floware.MQ.MQMessage.ToName">
            <summary>
            ToName(dest subject), setting하지 않을 경우 MQConfig's ToName 자동 setting
            </summary>
        </member>
        <member name="P:Floware.MQ.MQMessage.FromName">
            <summary>
            송신자 sender name, setting하지 않을 경우 MQConfig's MyName 자동 setting
            </summary>
        </member>
        <member name="P:Floware.MQ.MQMessage.CanDeserialize">
            <summary>
            <para>MQMessage가 Deserialize 가능한지 여부</para>
            </summary>
        </member>
        <member name="P:Floware.MQ.MQMessage.CanAccessField">
            <summary>
            MQMessage가 Field Type인지 확인.
            </summary>
        </member>
        <member name="F:Floware.MQ.MQMessage.KIND.WITHDRAW">
            <summary>
            Listener 종료
            </summary>
        </member>
        <member name="T:Floware.NoSQL.MongoBuilder`1">
            <summary>
            Mongo Query Builder
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoBuilder`1.Where(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoBuilder`1.QueryAnd">
            <summary/>
        </member>
        <member name="T:Floware.NoSQL.MongoModel">
            <summary>
            Mongo DB Model
            <para>Property ObjectId를 반드시 만들어야 한다</para>
            </summary>
        </member>
        <member name="T:Floware.NoSQL.MongoIndex">
            <summary>
            Mongo Model Index
            </summary>
        </member>
        <member name="T:Floware.NoSQL.MongoProvider">
            <summary>
            Mongo db provider
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoProvider.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.NoSQL.MongoProvider.Init">
            <summary/>
        </member>
        <member name="M:Floware.NoSQL.MongoProvider.ListM``1(System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32)">
            <summary>
            다양한 Table 조회
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoProvider.ListM``1(System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary/>
        </member>
        <member name="M:Floware.NoSQL.MongoProvider.ListM``1(System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,MongoDB.Driver.IMongoSortBy)">
            <summary>
            다양한 Table 조회
            <para>SortBy.Ascending("A","B").Descending("C");</para>
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoProvider.ListM``1(System.String,MongoDB.Driver.IMongoQuery,System.Int32,System.Int32,MongoDB.Driver.IMongoSortBy)">
            <summary>
            Query.And...
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoProvider.Clean``1(System.String,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            where 조건을 이용한 삭제
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoProvider.DropTable(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.NoSQL.MongoProvider.DropDB(System.String)">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoProvider.IP">
            <summary>
            Server ip
            </summary>
        </member>
        <member name="P:Floware.NoSQL.MongoProvider.PortNo">
            <summary>
            Server port no
            <para>def: 27017</para>
            </summary>
        </member>
        <member name="P:Floware.NoSQL.MongoProvider.Name">
            <summary>
            Database name
            </summary>
        </member>
        <member name="P:Floware.NoSQL.MongoProvider.T5">
            <summary>
            재연결 시간(초)
            </summary>
        </member>
        <member name="P:Floware.NoSQL.MongoProvider.SafeMode">
            <summary>
            connection check 하여 연결시에만 crud 수행 mode
            </summary>
        </member>
        <member name="P:Floware.NoSQL.MongoProvider.Database">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoProvider.DB">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoProvider.Connected">
            <summary>
            check comm without Log
            </summary>
        </member>
        <member name="P:Floware.NoSQL.MongoProvider.DBNames">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoProvider.TableNames">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoProvider.Stats">
            <summary>
            DB 통계
            <para>data count는 *1000</para>
            </summary>
        </member>
        <member name="T:Floware.NoSQL.MongoStats">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoStats.Time">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoStats.Min">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoStats.Max">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoStats.Avg">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoStats.Sum">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoStats.Count">
            <summary/>
        </member>
        <member name="T:Floware.NoSQL.MongoTemplate`1">
            <summary>
            성능
            <para>Insert</para>
            <para>15,000 per second</para>
            <para>-</para>
            <para>Query</para>
            <para>20초 1,000,000</para>
            <para>-</para>
            <para>Delete</para>
            <para>1,000,000 15ms</para>
            <para>바로 지워지지는 않음, 서버가 내부적으로 처리하는것으로 생각됨</para>
            </summary>
        </member>
        <member name="F:Floware.NoSQL.MongoTemplate`1.logger">
            <summary/>
        </member>
        <member name="M:Floware.NoSQL.MongoTemplate`1.AfterPropertiesSet">
            <summary>
            1. Index 만들기
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoTemplate`1.AddM(`0)">
            <summary>
            <para>-</para>
            <para>ObjectId등을 처리하기 위해 virtual로 처리함.</para>
            <para>-</para>
            <para>기존 객체를 재사용하는 경우</para>
            <para>!!!반드시 ObjectId.GenerateNewId() 이용하여 새로운 Id를 부여해야함</para>
            <para>ObjectId가 같으면 Insert되지 않음</para>
            <para>-</para>
            <para>WriteConcern.Unacknowledged option</para>
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoTemplate`1.ChgM(`0)">
            <summary>
            없을 경우 AddM과 동일함(자체 체크하여 add한다)
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoTemplate`1.AddM(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            batch add 성능5-10배 이상
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoTemplate`1.Count(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Count by Lambda
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoTemplate`1.ListM(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Lambda 조건을 이용한 Query
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoTemplate`1.ListM(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32,System.Int32)">
            <summary>
            Lambda + Paging 조건을 이용한 Query
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoTemplate`1.ListM(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},MongoDB.Driver.IMongoSortBy)">
            <summary>
            <para>Query + OrderBy</para>
            <para>SortBy.Ascending("A","B").Descending("C");</para>
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoTemplate`1.ListM(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},MongoDB.Driver.IMongoSortBy,System.Int32,System.Int32)">
            <summary>
            <para>Query + OrderBy + Paging</para>
            <para>SortBy.Ascending("A","B").Descending("C");</para>
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoTemplate`1.Clean(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Lambda 조건을 이용한 삭제
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoTemplate`1.Copy(System.Object)">
            <summary>
            History 저장 용도에서 사용함.
            <para>T instance를 만들어서 src property 값을 복제함.</para>
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoTemplate`1.ListStats(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},Floware.NoSQL.MongoTemplate{`0}.TimeUnit,System.String)">
            <summary>
            <para>column: 실제 값 column</para>
            <para>date는 AddTime고정</para>
            </summary>
        </member>
        <member name="P:Floware.NoSQL.MongoTemplate`1.Provider">
            <summary/>
        </member>
        <member name="P:Floware.NoSQL.MongoTemplate`1.Native">
            <summary>
            Mongo core collection(table) API
            </summary>
        </member>
        <member name="P:Floware.NoSQL.MongoTemplate`1.Contd">
            <summary>
            connect check with log
            </summary>
        </member>
        <member name="P:Floware.NoSQL.MongoTemplate`1.Item(System.String)">
            <summary>
            Get by id
            <para>없으면 null 반환</para>
            </summary>
        </member>
        <member name="P:Floware.NoSQL.MongoTemplate`1.Item(MongoDB.Bson.ObjectId)">
            <summary>
            Get by id
            <para>없으면 null 반환</para>
            </summary>
        </member>
        <member name="T:Floware.NoSQL.MongoTemplate`1.TimeUnit">
            <summary/>
        </member>
        <member name="F:Floware.NoSQL.MongoTemplate`1.TimeUnit.Second">
            <summary/>
        </member>
        <member name="F:Floware.NoSQL.MongoTemplate`1.TimeUnit.Minute">
            <summary/>
        </member>
        <member name="F:Floware.NoSQL.MongoTemplate`1.TimeUnit.Hour">
            <summary/>
        </member>
        <member name="F:Floware.NoSQL.MongoTemplate`1.TimeUnit.Day">
            <summary/>
        </member>
        <member name="F:Floware.NoSQL.MongoTemplate`1.TimeUnit.Month">
            <summary/>
        </member>
        <member name="F:Floware.NoSQL.MongoTemplate`1.TimeUnit.Year">
            <summary/>
        </member>
        <member name="M:Floware.NoSQL.MongoUtils.ListModel(System.String)">
            <summary>
            NssModel List 가져오기
            </summary>
        </member>
        <member name="M:Floware.NoSQL.MongoUtils.Ignore(System.Reflection.PropertyInfo)">
            <summary>
            해당 Property 무시
            </summary>
        </member>
        <member name="T:Floware.OSView.EventLogUtils">
            <summary>
            <para>Event로그를 읽는것이 느려서</para>
            <para>EntryWritten을 활용하는 방법으로 구현한다.</para>
            </summary>
        </member>
        <member name="F:Floware.OSView.EventLogUtils.LOG_TYPE_SYSTEM">
            <summary>
            <para>시스템</para>
            </summary>
        </member>
        <member name="F:Floware.OSView.EventLogUtils.LOG_TYPE_APPLICATION">
            <summary>
            <para>응용프로그램</para>
            </summary>
        </member>
        <member name="F:Floware.OSView.EventLogUtils.LOG_TYPE_SECURITY">
            <summary>
            <para>보안</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.EventLogUtils.CreateInstance(System.String)">
            <summary>
            <para>Event Log 생성</para>
            </summary>
            <param name="log"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.OSView.EventLogUtils.CreateAppLogInstance">
            <summary>
            <para>응용프로그램 로그</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.OSView.EventLogUtils.CreateSysLogInstance">
            <summary>
            <para>시스템 로그</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.OSView.EventLogUtils.WarningOrError(System.Diagnostics.EventLogEntry)">
            <summary>
            <para>Waring 또는 에러인지 검사.</para>
            </summary>
            <param name="entry"></param>
            <returns></returns>
        </member>
        <member name="T:Floware.OSView.Management">
            <summary>
            Management
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.PrinterNames">
            <summary/>
        </member>
        <member name="M:Floware.OSView.Management.CpuUseRate">
            <summary>
            <para>CPU 사용률 % / 100%기준.</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.ProcCpu1UseRate(System.String)">
            <summary>
            <para>Process의 CPU 사용률</para>
            <para>1 cpu 기준이므로 multi cpu일 경우 processor count로 나눠야 한다.</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.ProcCpuUseRate(System.String)">
            <summary>
            <para>Logical CPU 기준으로 나눈값</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.ProcMemUseKB(System.String)">
            <summary>
            <para>메모리 사용량 KB</para>
            <para>PrivateMemorySize</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.ProcMemPeakUseKB(System.String)">
            <summary>
            <para>Peak 메모리 사용량 KB</para>
            <para>PrivateMemorySize</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.MemPhysicalKB">
            <summary>
            <para>Physical Memory Size KB 단위 추출</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.MemVirtualKB">
            <summary>
            <para>Virtual Memory Size KB 단위 추출</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.MemVirtualFreeKB">
            <summary>
            Virtual 기준 Free Kb size
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.MemVirtualUseKB">
            <summary>
            Virtual 기준 Use KB
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.MemPhysicalFreeKB">
            <summary>
            Physical 기준 Free size
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.MemPhysicalUseKB">
            <summary>
            Physical 기준 사용량 KB
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.MemPhysicalUseRate">
            <summary>
            Physical 기준 100분율
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.OsName">
            <summary>
            <para>OS Name 가져오기.</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.CpuCountLogical">
            <summary>
            <para>Retrive Total Logical Cpu Count</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.MemVirtualUseRate">
            <summary>
            <para>메모리 사용률 %</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.HddList">
            <summary>
            <para>Ready상태이고, HDD 드라이브만 추출</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.LocalIpList">
            <summary>
            <para>Local IP Address 가져오기.</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.MacAddressList">
            <summary>
            <para>Local Mac Address 가져오기.</para>
            </summary>
        </member>
        <member name="M:Floware.OSView.Management.WqlSummary(System.String)">
            <summary/>
        </member>
        <member name="T:Floware.PLC.EIP.EipBitBlock">
            <summary/>
        </member>
        <member name="T:Floware.PLC.Model.BitBlock">
            <summary>
            BitBlock : Block
            </summary>
        </member>
        <member name="T:Floware.PLC.Model.Block">
            <summary>
            derived class BitBlock, WordBlock
            </summary>
        </member>
        <member name="T:Floware.PLC.Model.IBlock">
            <summary>
            PLC model 객체 최상위 interface
            </summary>
        </member>
        <member name="M:Floware.PLC.Model.IBlock.Clone``1">
            <summary>
            clone
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="P:Floware.PLC.Model.IBlock.Address">
            <summary>
            address
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.IBlock.IsBit">
            <summary>
            bit or word
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.IBlock.ConfigID">
            <summary>
            connection id
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.IBlock.Name">
            <summary>
            block name
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.IBlock.Value">
            <summary>
            block value
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.IBlock.Format">
            <summary>
            N,SI,A word data type 정의.
            N: unsigned integer
            SI: signed integer
            A: string
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.IBlock.DspAddr">
            <summary>
            Address LogFormat
            </summary>
        </member>
        <member name="M:Floware.PLC.Model.Block.#ctor">
            <summary>
            constructor
            </summary>
        </member>
        <member name="M:Floware.PLC.Model.Block.Clone``1">
            <summary>
            Deep copy
            </summary>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Model.Block.Decode(System.Byte[])">
            <summary>
            Word Decode
            </summary>
            <param name="bs"></param>
        </member>
        <member name="M:Floware.PLC.Model.Block.LogKind">
            <summary/>
        </member>
        <member name="F:Floware.PLC.Model.Block.Owner">
            <summary>
            Block을 가진 PFManager
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.FirstChgd">
            <summary>
            <para>최초 이벤트 여부</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.KeepV">
            <summary>
            Fake(VirtualIO) 값 keeping 여부.
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.KindE">
            <summary>
            Block 종류.
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.CallbackOrder">
            <summary>
            값이 클수록 먼저 Invoke됨.
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.SubNo">
            <summary>
            기타 keeping No.
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.SubText">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Block.SubObject">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Block.Comment">
            <summary>
            Additional info
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.IsBit">
            <summary>
            Bit or Word
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.Encode">
            <summary>
            Word Encode
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.ConfigID">
            <summary>
            PLCConfig ID
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.IsWriteOnly">
            <summary>
            효율적 map 관리를 위한 IsWriteOnly option "-"
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.Format">
            <summary>
            N,SI,A
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.Chgd">
            <summary>
            OnBitChanged, OnWordChanged
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.BitIndex">
            <summary>
            1.0~1.F의 0~F 까지 bit index
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.Device">
            <summary>
            PLC memory device
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.Group">
            <summary>
            BitGroup, WordGroup
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.Point">
            <summary>
            Word Point
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.IsWatch">
            <summary>
            Bit(true), Word changed callback event 여부.
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.OrgValue">
            <summary>
            <para>OriginValue</para>
            <para>Multiple 적용되지 않은 값.</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.Name">
            <summary>
            Block Name
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.IntName">
            <summary>
            NumUtils.IntV Name
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.Value">
            <summary>
            need to override
            throw new NotImplementedException();
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Block.DspAddr">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Block.ChgdCount">
            <summary>
            변경된 회수.
            </summary>
        </member>
        <member name="M:Floware.PLC.Model.BitBlock.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.BitBlock.Clone``1">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.BitBlock.Decode(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.BitBlock.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.BitBlock.BitOnTime">
            <summary>
            BitOn 변경시간.
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.BitBlock.IsAutoOff">
            <summary>
            bit auto off
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.BitBlock.IsBit">
            <summary>
            always bit
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.BitBlock.Value">
            <summary>
            1 or 0 only
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.BitBlock.Byte">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.BitBlock.IsBitOn">
            <summary>
            bit on or off
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.BitBlock.Encode">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.BitBlock.DspAddr">
            <summary/>
        </member>
        <member name="T:Floware.PLC.EIP.EipConfig">
            <summary/>
        </member>
        <member name="T:Floware.PLC.PFConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.PLC.PFConfig.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFConfig.ToString">
            <summary>
            string.Format("[{0}] {1}/{2} {3}ms", Id, IpAddress, Port, MonitorInterval);
            </summary>
            <returns></returns>
        </member>
        <member name="P:Floware.PLC.PFConfig.MonitorInterval">
            <summary>
            PLC scan interval
            </summary>
        </member>
        <member name="P:Floware.PLC.PFConfig.Id">
            <summary>
            connection ID
            </summary>
        </member>
        <member name="P:Floware.PLC.PFConfig.IpAddress">
            <summary>
            TCP ip address
            </summary>
        </member>
        <member name="P:Floware.PLC.PFConfig.Port">
            <summary>
            port
            </summary>
        </member>
        <member name="M:Floware.PLC.EIP.EipConfig.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.EIP.EipConfig.ToString">
            <summary>
            string.Format("{0}", base.ToString());
            </summary>
        </member>
        <member name="T:Floware.PLC.EIP.EipDevice">
            <summary/>
        </member>
        <member name="T:Floware.PLC.Model.Device">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.PLC.Model.Device.code">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.PLC.Model.Device.maxPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Device.IsBit">
            <summary>
            <para>아래의 경우 User code로 세팅되지 않으며, Memory에 따라 결정된다.</para>
            <para>-</para>
            <para>Mitsubishi</para>
            <para>Modbus</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Device.HexAddrType">
            <summary>
            <para>Address 표현 방식</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Device.MaxPoint">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Device.Code">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Device.BitCode">
            <summary>
            OMRON에서만 사용함.
            </summary>
        </member>
        <member name="F:Floware.PLC.EIP.EipDevice.N">
            <summary>
            User define N device
            </summary>
        </member>
        <member name="F:Floware.PLC.EIP.EipDevice.A">
            <summary>
            User define A device
            </summary>
        </member>
        <member name="M:Floware.PLC.EIP.EipDevice.#ctor(System.Byte,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.EIP.EipDevice.ToString">
            <summary/>
        </member>
        <member name="T:Floware.PLC.EIP.EipGroup">
            <summary>
            EipGroup : Group
            </summary>
        </member>
        <member name="T:Floware.PLC.Model.Group">
            <summary>
            PLC Block 묶음.
            </summary>
        </member>
        <member name="F:Floware.PLC.Model.Group.logger">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.ReadDefinedMessages(System.Boolean,Floware.PLC.Model.Device,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.ReadDefinedMessages">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.ArrangeBlock">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.ReadDefinedMessages(System.String,System.Boolean,Floware.PLC.Model.Device,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.ReadBitIniMapFile(Floware.Utils.Win32.Win32IniUtils)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.ReadAutoOffOption(Floware.PLC.Model.BitBlock,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.ReadAddress(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.ReadWatchOption(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.ReadWriteOnlyOption(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.AddBitBlock(Floware.PLC.Model.BitBlock)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.AddWordBlock(System.String,System.Int32,System.Int32,System.String,System.Boolean)">
            <summary/>
            <param name="name"></param>
            <param name="address"></param>
            <param name="point"></param>
            <param name="format">N,A,SI,F</param>
            <param name="watch">Callback or not, true -> Invoke</param>
        </member>
        <member name="M:Floware.PLC.Model.Group.AddWordBlock(Floware.PLC.Model.WordBlock)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.AddBitBlock(Floware.PLC.XLS.XlsBitBlock,System.Enum)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.AddBitBlock(Floware.PLC.XLS.XlsBitBlock)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.AddWordBlock(Floware.PLC.XLS.XlsWordBlock,System.Enum)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.AddWordBlock(Floware.PLC.XLS.XlsWordBlock)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.Clone">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.ClearBlocks">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.Group.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.SwapChar">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.AsciiSpace">
            <summary>
            Ascii space 기본값 0x20이며 외부 세팅용도
            <para>0x00의 경우 0입력</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Group.NewWordInstance">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.NewBitInstance">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.Frequency">
            <summary>
            N 회당 1회 수행
            <para>대용량 group 성능 수행</para>
            <para>1: 매번, 2: 1/2, 3: 1/3</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.Group.Path">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.DbNo">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.IsFirstScanInvoke">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.SplitGapPointSize">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.Name">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.IntName">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.BlockList">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.BlockDictionary">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.IsBit">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.IsWord">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.FromAddress">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.Group.Device">
            <summary/>
        </member>
        <member name="P:Floware.PLC.EIP.EipGroup.NewWordInstance">
            <summary>
            WordFactory
            </summary>
        </member>
        <member name="P:Floware.PLC.EIP.EipGroup.NewBitInstance">
            <summary>
            BitFactory
            </summary>
        </member>
        <member name="T:Floware.PLC.EIP.EipManager">
            <summary>
            EipManager : PFManager
            </summary>
        </member>
        <member name="T:Floware.PLC.PFManager">
            <summary>
            PLC Manager class
            </summary>
        </member>
        <member name="F:Floware.PLC.PFManager.logger">
            <summary/>
        </member>
        <member name="F:Floware.PLC.PFManager.lock1">
            <summary>
            Reload Group Locking을 위해 Polling부분과 연계하여 Lock처리를 한다.
            </summary>
        </member>
        <member name="F:Floware.PLC.PFManager.qq">
            <summary>
            <para>Msg pump queue</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.GetGroup(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.ReloadGroup(Floware.PLC.Model.Group)">
            <summary>
            <para>주의: 반드시 GroupName이 동일해야 한다.</para>
            <para>Group은 Bit 또는 Word가 하나의 Type으로 구성되어야 한다.</para>
            </summary>
            <param name="grp"></param>
        </member>
        <member name="M:Floware.PLC.PFManager.InitValueSetBitsInReload(Floware.PLC.Model.Group,System.Collections.Generic.List{Floware.PLC.Model.Block})">
            <summary>
            이전 Group의 값을 copy하여 OnBitChanged가 발생하지 않게 한다.
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.InitValueSetWordsInReload(Floware.PLC.Model.Group,System.Collections.Generic.List{Floware.PLC.Model.Block})">
            <summary>
            이전 Group의 값을 copy하여 OnWordChanged가 발생하지 않게 한다.
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.AddGroup(Floware.PLC.Model.Group)">
            <summary>
            <para>Group(Block묶음)을 등록.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.GetBitBlock(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.ReadBit(System.String)">
            <summary>
            <para>ReadBit</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.ReadWord(System.String)">
            <summary>
            <para>ReadWord</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.WriteWord(System.String,System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.WriteWord(System.String,System.Single)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.WriteWord(System.String,System.Int32,System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.WriteWord(System.String,System.String,System.Int32)">
            <summary>
            <para>WriteWord를 일정시간 후에 수행.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.WriteWord(System.Int32,System.Int32,Floware.Utils.MemoryBuffer)">
            <summary>
            Write Array
            </summary>
            <param name="dcode">device code</param>
            <param name="addr">word address</param>
            <param name="mb"></param>
        </member>
        <member name="M:Floware.PLC.PFManager.WriteWord(System.String,System.String)">
            <summary>
            <para>WriteWord</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.GetWordBlock(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.HasGroupName(System.String)">
            <summary>
            Group 존재 여부
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.HasBitName(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.HasWordName(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.WriteOff(Floware.PLC.Model.BitBlock)">
            <summary>
            <para>WriteBit("xxx", false)</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager._OnWrited(Floware.PLC.Model.Block)">
            <summary>
            Parent class이므로 하위 구현체에서 delegate link 유무 체크.
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.Connect">
            <summary>
            <para>연결 시도.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.Disconnect">
            <summary>
            <para>Disconnect한 PFManager 재사용 권장.</para>
            <para>-</para>
            <para>1. Disconnect connection.</para>
            <para>2. Kill pump thread</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.RemoveAllBlocks">
            <summary>
            <para>등록된 BitBlocks, WordBlocks를 모두 Clear.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.WaitChgBit(System.String,System.Boolean,System.Int32)">
            <summary>
            Wait current thread until name's value equal exp in timeout.
            <para>Notify:true, timeout:false</para>
            <para>exp와 ReadBit 값이 같을 경우 true 및 정상진행</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.WaitChgBits(System.Boolean,System.Int32,Floware.PLC.Model.BitBlock@,System.String[])">
            <summary>
            Wait current thread until name's value equal exp in timeout.
            <para>Notify:true, timeout:false</para>
            <para>exp와 names 의 상태는 반드시 반대여야 한다.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.WaitAllBits(System.Boolean,System.Int32,System.String[])">
            <summary>
            해당 bits가 모두 조건에 만족할때까지 대기
            <para>기존값이 exp와 같은 경우는 만족하는것에 포함한다.</para>
            <para>Notify:true, timeout:false</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.WaitChgWord(System.String,System.Int32,System.Int32)">
            <summary>
            Wait current thread until name's value equal exp in timeout.
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.WaitChgWord(System.String,System.String,System.Int32)">
            <summary>
            Wait current thread until name's value equal exp in timeout.
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.WriteBit(System.String,System.Boolean,System.Int32)">
            <summary>
            <para>WriteBit를 일정시간후에 수행할 경우.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.WriteBit(System.String,System.Boolean)">
            <summary>
            <para>Write Bit</para>
            </summary>
            <param name="name">reg block name</param>
            <param name="on">true or false</param>
        </member>
        <member name="M:Floware.PLC.PFManager.ChangeBit(System.String,System.Boolean)">
            <summary>
            <para>PLC Manager Bit Memory값만 변경 할 경우.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.ChangeWord(System.String,System.String)">
            <summary>
            <para>PLC Manager Word Memory값만 변경 할 경우.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager._OnTimePoll">
            <summary>
            <para>Tcp or Serial이 연결 완료되면</para>
            <p>한번만 호출한다.</p>
            <p>DoInvokeChangedBlockNow</p>
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager._ThPullQueue">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.LogBlocks(System.String[])">
            <summary>
            <para>여러개의 Block을 동시 Logging할 경우</para>
            <para>예제: logger.I("LOT START {0}", "name1", "name2", ..., "nameN");</para>
            </summary>
            <param name="names">reg block names</param>
        </member>
        <member name="M:Floware.PLC.PFManager.FakeBitChgd(Floware.PLC.Model.BitBlock)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.FakeBitChgd(Floware.PLC.Model.BitBlock,System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.FakeWordChgd(Floware.PLC.Model.WordBlock)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.FakeWordChgd(Floware.PLC.Model.WordBlock,System.Int32)">
            <summary/>
        </member>
        <member name="F:Floware.PLC.PFManager.hbName">
            <summary>
            HeartBeat BitName or WordName
            </summary>
        </member>
        <member name="M:Floware.PLC.PFManager.HeartBeat(System.String,System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PFManager.HeartBeat(System.String,System.Int32,System.Int32,System.Int32)">
            <summary/>
        </member>
        <member name="P:Floware.PLC.PFManager.DelayAutoOff">
            <summary>
            Auto Off 지연시간 mills-second
            </summary>
        </member>
        <member name="P:Floware.PLC.PFManager.Alive">
            <summary/>
        </member>
        <member name="E:Floware.PLC.PFManager.OnWriteComplete">
            <summary>
            Arg1: Writed Block
            </summary>
        </member>
        <member name="E:Floware.PLC.PFManager.OnConnect">
            <summary>
            Arg1: Connected ID
            </summary>
        </member>
        <member name="E:Floware.PLC.PFManager.OnDisconnect">
            <summary>
            Arg1: Disconnected ID
            </summary>
        </member>
        <member name="E:Floware.PLC.PFManager.OnLog">
            <summary>
            Arg1: Log
            </summary>
        </member>
        <member name="E:Floware.PLC.PFManager.OnBitChanged">
            <summary>
            Arg1: BitBlock
            </summary>
        </member>
        <member name="E:Floware.PLC.PFManager.OnWordChanged">
            <summary>
            Arg1: WordBlock
            </summary>
        </member>
        <member name="E:Floware.PLC.PFManager.OnCollected">
            <summary>
            매번 스캔마다 이벤트 발생.
            </summary>
        </member>
        <member name="E:Floware.PLC.PFManager.OnFirstColtd">
            <summary>
            최초 스캔(Collected)할때 
            </summary>
        </member>
        <member name="P:Floware.PLC.PFManager.IsConnected">
            <summary/>
        </member>
        <member name="P:Floware.PLC.PFManager.IpAddr">
            <summary/>
        </member>
        <member name="P:Floware.PLC.PFManager.Item(System.String)">
            <summary/>
        </member>
        <member name="P:Floware.PLC.PFManager.AddedGroups">
            <summary/>
        </member>
        <member name="P:Floware.PLC.PFManager.AddedBits">
            <summary/>
        </member>
        <member name="P:Floware.PLC.PFManager.AddedWords">
            <summary/>
        </member>
        <member name="T:Floware.PLC.PFManager.DelegateID">
            <summary/>
        </member>
        <member name="T:Floware.PLC.PFManager.DelegateLog">
            <summary/>
        </member>
        <member name="T:Floware.PLC.PFManager.DelegateBitChanged">
            <summary/>
        </member>
        <member name="T:Floware.PLC.PFManager.DelegateWordChanged">
            <summary/>
        </member>
        <member name="T:Floware.PLC.PFManager.DelegateWriteComplete">
            <summary/>
        </member>
        <member name="M:Floware.PLC.EIP.EipManager.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.EIP.EipManager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.EIP.EipManager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.EIP.EipManager.Disconnect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.EIP.EipManager.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.EIP.EipManager.Config">
            <summary>
            EIP Config
            </summary>
        </member>
        <member name="P:Floware.PLC.EIP.EipManager.IsConnected">
            <summary/>
        </member>
        <member name="T:Floware.PLC.EIP.EipTcpNet">
            <summary>
            EipComm : PLCNet
            </summary>
        </member>
        <member name="T:Floware.PLC.PLCNet">
            <summary>
            PLCNet
            </summary>
        </member>
        <member name="M:Floware.PLC.PLCNet.CatchSlowIO(System.Int64,Floware.PLC.Model.Group,System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.PLCNet.FillSpace1Word(Floware.Utils.MemoryBuffer,Floware.PLC.Model.Group,Floware.PLC.Model.Peken)">
            <summary>
            <para>All MemoryBuffer에 1Point를 2byte기준으로 space 채움.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.PLCNet.FillSpace1Byte(Floware.Utils.MemoryBuffer,Floware.PLC.Model.Group,Floware.PLC.Model.Peken)">
            <summary>
            <para>1 byte 기준 space 채움.</para>
            </summary>
        </member>
        <member name="T:Floware.PLC.EIP.EipWordBlock">
            <summary>
            EipWordBlock
            </summary>
        </member>
        <member name="T:Floware.PLC.Model.WordBlock">
            <summary>
            WordBlock : Block
            </summary>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.Clone``1">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.Decode(System.Byte[])">
            <summary>
            <para>1. decoding</para>
            <para>2. changed flag check</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.CheckWordChgdPropAndSetValue(System.String)">
            <summary>
            <para>change인지 아닌지 체크하여 IsChanged 값 세팅</para>
            <para>OrgValue를 이용하여 Changed check함</para>
            <para>현재값을 PreValue에 Keeping</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.Encode2Point">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.Encode1Point">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.EncodeAscii">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.AsciiSwapChar(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.DecodeAscii(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.Decode2Float(System.Byte[])">
            <summary>
            <para>Float가 4byte이므로 모두 2point decoding만 지원한다.</para>
            Little endian
            </summary>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.Decode2Int(System.Byte[])">
            <summary>
            Little endian
            </summary>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.Decode1Ushort(System.Byte[])">
            <summary>
            Little endian
            </summary>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.Decode1Short(System.Byte[])">
            <summary>
            Little endian
            </summary>
        </member>
        <member name="M:Floware.PLC.Model.WordBlock.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.BitType">
            <summary>
            Word를 16 bit로 쪼개서 사용할 경우임.
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.PreValue">
            <summary>
            <para>Word Change일 경우 이전 값 가져오기.</para>
            <para>최초 Ascii일 경우 string.Empty, Numeric일 경우 0</para>
            <para>Multiple이 적용된 값</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.PreIntValue">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.MultipleFormatter">
            <summary>
            <para>소수점 Format</para>
            <para>Default: F2</para>
            <para>e.g. F2, G4(지수)</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.Multiple">
            <summary>
            <para>자동 곱하기, 나누기</para>
            <para>Set: 곱하기</para>
            <para>Get: 나누기.</para>
            <para>Default: 1</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.SwapChar">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.OrgArray">
            <summary>
            decoding시에 받은 Array 저장 정보
            <para>가공하지 않는 Original Array</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.IsAscii">
            <summary>
            ascii type
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.IsFloat">
            <summary>
            float
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.IsSigned">
            <summary>
            부호가 있는 정수 여부
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.IsNumeric">
            <summary>
            numeric or ascii
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.IsBit">
            <summary>
            always false
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.FloatValue">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.DoubleValue">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.BitIndex">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.ApplyMultiFormat">
            <summary>
            Format 적용여부
            </summary>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.IntValue">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.TrimValue">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.NumberHexValue">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.Encode">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.Value">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Model.WordBlock.DspAddr">
            <summary/>
        </member>
        <member name="T:Floware.PLC.FAKE.FakeBitBlock">
            <summary/>
        </member>
        <member name="T:Floware.PLC.FAKE.FakeConfig">
            <summary/>
        </member>
        <member name="T:Floware.PLC.FAKE.FakeManager">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FAKE.FakeManager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FAKE.FakeManager.Connect">
            <summary>
            Fake manager init, pump queue만 활성화, FakeBit, FakeWord만 처리함.
            </summary>
        </member>
        <member name="P:Floware.PLC.FAKE.FakeManager.IsConnected">
            <summary/>
        </member>
        <member name="T:Floware.PLC.FAKE.FakeWordBlock">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FAKE.FakeWordBlock.DecodeAscii(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FAKE.FakeWordBlock.Decode2Int(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FAKE.FakeWordBlock.Decode2Float(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FAKE.FakeWordBlock.Decode1Ushort(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FAKE.FakeWordBlock.Decode1Short(System.Byte[])">
            <summary/>
        </member>
        <member name="P:Floware.PLC.FAKE.FakeWordBlock.Encode">
            <summary/>
        </member>
        <member name="T:Floware.PLC.FINS.FinsBitBlock">
            <summary/>
        </member>
        <member name="T:Floware.PLC.FINS.FinsConfig">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsConfig.#ctor">
            <summary/>
        </member>
        <member name="P:Floware.PLC.FINS.FinsConfig.NodeMe">
            <summary>
            <para>PC NODE NO</para>
            <para>PLC NODE와 중복되지 않아야 함.</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.FINS.FinsConfig.NodePLC">
            <summary>PLC NODE NO, DEFAULT(1)</summary>
        </member>
        <member name="T:Floware.PLC.FINS.FinsDevice">
            <summary/>
        </member>
        <member name="F:Floware.PLC.FINS.FinsDevice.E0">
            <summary/>
        </member>
        <member name="F:Floware.PLC.FINS.FinsDevice.D">
            <summary/>
        </member>
        <member name="F:Floware.PLC.FINS.FinsDevice.W">
            <summary/>
        </member>
        <member name="F:Floware.PLC.FINS.FinsDevice.CIO">
            <summary/>
        </member>
        <member name="F:Floware.PLC.FINS.FinsDevice.H">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsDevice.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.FINS.FinsDevice.Code">
            <summary/>
        </member>
        <member name="T:Floware.PLC.FINS.FinsGroup">
            <summary/>
        </member>
        <member name="T:Floware.PLC.Model.GroupV2">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.GroupV2.ArrangeBlock">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Model.GroupV2.ToString">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsGroup.AddBitBlock(Floware.PLC.Model.BitBlock)">
            <summary/>
        </member>
        <member name="P:Floware.PLC.FINS.FinsGroup.NewWordInstance">
            <summary/>
        </member>
        <member name="P:Floware.PLC.FINS.FinsGroup.NewBitInstance">
            <summary/>
        </member>
        <member name="T:Floware.PLC.FINS.FinsManager">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsManager.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsManager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsManager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsManager.Disconnect">
            <summary/>
        </member>
        <member name="P:Floware.PLC.FINS.FinsManager.Config">
            <summary/>
        </member>
        <member name="P:Floware.PLC.FINS.FinsManager.IsConnected">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsTcpNet.ReadArr(Floware.PLC.Model.Device,System.Int32,System.Int32)">
            <summary>
            point 2배를 읽은 byte가 return 된다.
            </summary>
        </member>
        <member name="M:Floware.PLC.FINS.FinsUdpNet.ReadArr(Floware.PLC.Model.Device,System.Int32,System.Int32)">
            <summary>
            point 2배를 읽은 byte가 return 된다.
            </summary>
        </member>
        <member name="T:Floware.PLC.FINS.FinsWordBlock">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsWordBlock.Encode1Point">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsWordBlock.Encode2Point">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsWordBlock.MiddleEndian(System.Byte[])">
            <summary>
            Omron의 경우 2Point는 아래와 같이 2byte reverse가 된다.
            1,2,3,4 -> 4,3,2,1 -> 2byte reverse -> 2,1,4,3
            </summary>
        </member>
        <member name="M:Floware.PLC.FINS.FinsWordBlock.Decode2Int(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsWordBlock.Decode2Float(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsWordBlock.Decode1Ushort(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FINS.FinsWordBlock.Decode1Short(System.Byte[])">
            <summary/>
        </member>
        <member name="T:Floware.PLC.FP2.Fp2Config">
            <summary>
            FP2 Converter
            </summary>
        </member>
        <member name="M:Floware.PLC.FP2.Fp2Config.#ctor">
            <summary>
            port 4097
            </summary>
        </member>
        <member name="M:Floware.PLC.FP2.Fp2Config.ToString">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="P:Floware.PLC.FP2.Fp2Config.PcNode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.PLC.FP2.Fp2Config.PlcNode">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.PLC.FP2.Fp2Manager">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FP2.Fp2Manager.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FP2.Fp2Manager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FP2.Fp2Manager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FP2.Fp2Manager.ToString">
            <summary/>
        </member>
        <member name="M:Floware.PLC.FP2.Fp2Manager.Disconnect">
            <summary/>
        </member>
        <member name="P:Floware.PLC.FP2.Fp2Manager.Config">
            <summary/>
        </member>
        <member name="P:Floware.PLC.FP2.Fp2Manager.IsConnected">
            <summary/>
        </member>
        <member name="F:Floware.PLC.FP2.Fp2TcpNet.qqW">
            <summary>
            Msg send queue
            </summary>
        </member>
        <member name="M:Floware.PLC.FP2.Fp2TcpNet.ReadBitOrWordGroup(Floware.PLC.Model.Group)">
            <summary>
            BIT, WORD를 읽는 방식이 동일
            WORD로 읽어서 쪼갠다.
            </summary>
            <param name="grp"></param>
        </member>
        <member name="P:Floware.PLC.FP2.Fp2TcpNet.IsConnected">
            <summary>
            Ethernet connect or not
            </summary>
        </member>
        <member name="T:Floware.PLC.KNC.KncBitBlock">
            <summary/>
        </member>
        <member name="M:Floware.PLC.KNC.KncBitBlock.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.KNC.KncBitBlock.Encode">
            <summary/>
        </member>
        <member name="P:Floware.PLC.KNC.KncBitBlock.DspAddr">
            <summary/>
        </member>
        <member name="T:Floware.PLC.KNC.KncConfig">
            <summary>
            <para>IP: 192.168.0.10</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.KNC.KncConfig.#ctor">
            <summary>
            <para>def: 5000</para>
            </summary>
        </member>
        <member name="T:Floware.PLC.KNC.KncDevice">
            <summary/>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.B">
            <summary/>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.DM">
            <summary/>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.EM">
            <summary/>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.FM">
            <summary/>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.LR">
            <summary/>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.MR">
            <summary/>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.RX">
            <summary/>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.RY">
            <summary/>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.W">
            <summary/>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.ZF">
            <summary/>
        </member>
        <member name="M:Floware.PLC.KNC.KncDevice.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.KNC.KncDevice.IsBit">
            <summary/>
        </member>
        <member name="P:Floware.PLC.KNC.KncDevice.HexAddrType">
            <summary/>
        </member>
        <member name="P:Floware.PLC.KNC.KncDevice.Code">
            <summary/>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.MemCode.RX">
            <summary>
            X: 0~16000 (0~7999 ?)
            </summary>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.MemCode.RY">
            <summary>
            Y: 0~16000 (8000~15999 ?)
            </summary>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.MemCode.B">
            <summary>
            Link relay (size: 16384)
            </summary>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.MemCode.W">
            <summary>
            Link Register (size: 16384)
            </summary>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.MemCode.MR">
            <summary>
            Internal relay (size: 16000)
            </summary>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.MemCode.LR">
            <summary>
            Latch Relay (size: 16000)
            </summary>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.MemCode.DM">
            <summary>
            Data Memory (size: 65535)
            </summary>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.MemCode.EM">
            <summary>
            Extends Data Memory (size: 65536)
            </summary>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.MemCode.FM">
            <summary>
            File Register 뱅크전환방식 (size: 32768)
            </summary>
        </member>
        <member name="F:Floware.PLC.KNC.KncDevice.MemCode.ZF">
            <summary>
            File Registry 연속번호방식 (size: 131072)
            </summary>
        </member>
        <member name="T:Floware.PLC.KNC.KncGroup">
            <summary/>
        </member>
        <member name="P:Floware.PLC.KNC.KncGroup.NewWordInstance">
            <summary/>
        </member>
        <member name="P:Floware.PLC.KNC.KncGroup.NewBitInstance">
            <summary/>
        </member>
        <member name="P:Floware.PLC.KNC.KncGroup.IsBit">
            <summary/>
        </member>
        <member name="P:Floware.PLC.KNC.KncGroup.SplitGapPointSize">
            <summary>
            bit: 2048
            word: setting value. (480)
            </summary>
        </member>
        <member name="T:Floware.PLC.KNC.KncManager">
            <summary>
            KV-5500
            </summary>
        </member>
        <member name="M:Floware.PLC.KNC.KncManager.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.KNC.KncManager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.KNC.KncManager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.KNC.KncManager.Disconnect">
            <summary/>
        </member>
        <member name="P:Floware.PLC.KNC.KncManager.Config">
            <summary/>
        </member>
        <member name="P:Floware.PLC.KNC.KncManager.IsConnected">
            <summary/>
        </member>
        <member name="F:Floware.PLC.KNC.KncTcpNet.qqW">
            <summary>
            <para>Msg send queue</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.KNC.KncTcpNet.EnlargeInReadBinaryBits(System.Byte[])">
            <summary>
            bit를 읽을 경우 binary mode에서는 받은 byte를 2배 늘임.
            </summary>
        </member>
        <member name="T:Floware.PLC.KNC.KncWordBlock">
            <summary/>
        </member>
        <member name="M:Floware.PLC.KNC.KncWordBlock.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.KNC.KncWordBlock.DspAddr">
            <summary/>
        </member>
        <member name="T:Floware.PLC.LSIS.Command">
            <summary>
            READ WRITE Command
            </summary>
        </member>
        <member name="F:Floware.PLC.LSIS.Command.READ">
            <summary>
            요구 :h’0054 응답 :h’0055, read
            </summary>
        </member>
        <member name="F:Floware.PLC.LSIS.Command.WRITE">
            <summary>
            요구 :h’0058 응답 :h’0059, write
            </summary>
        </member>
        <member name="P:Floware.PLC.LSIS.Command.Codes">
            <summary>
            byte arrays
            </summary>
        </member>
        <member name="T:Floware.PLC.LSIS.CommType">
            <summary>
            XGT or GLOFA
            </summary>
        </member>
        <member name="F:Floware.PLC.LSIS.CommType.GLOFA">
            <summary/>
        </member>
        <member name="F:Floware.PLC.LSIS.CommType.XGT">
            <summary/>
        </member>
        <member name="F:Floware.PLC.LSIS.CommType.XGB">
            <summary/>
        </member>
        <member name="M:Floware.PLC.LSIS.CommType.ToString">
            <summary>
            case 0: return "XGT"; case 1: return "GLOFA"; default: return "UNK";
            </summary>
            <returns></returns>
        </member>
        <member name="F:Floware.PLC.LSIS.FeTcpNet.qqW">
            <summary>
            Msg send queue
            </summary>
        </member>
        <member name="T:Floware.PLC.LSIS.LsBitBlock">
            <summary/>
        </member>
        <member name="P:Floware.PLC.LSIS.LsBitBlock.Encode">
            <summary/>
        </member>
        <member name="T:Floware.PLC.LSIS.LsConfig">
            <summary>
            LsConfig : PFConfig
            </summary>
        </member>
        <member name="M:Floware.PLC.LSIS.LsConfig.#ctor">
            <summary>
            <para>Constructor</para>
            <para>Default Tcp Port: 2004</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.LSIS.LsConfig.ToString">
            <summary>
            LsConfig ToString
            </summary>
            <returns></returns>
        </member>
        <member name="P:Floware.PLC.LSIS.LsConfig.CommType">
            <summary>
            XGT or GLOFA
            </summary>
        </member>
        <member name="T:Floware.PLC.LSIS.LsDevice">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.PLC.LSIS.LsDevice.P">
            <summary/>
        </member>
        <member name="F:Floware.PLC.LSIS.LsDevice.M">
            <summary/>
        </member>
        <member name="F:Floware.PLC.LSIS.LsDevice.L">
            <summary/>
        </member>
        <member name="F:Floware.PLC.LSIS.LsDevice.F">
            <summary/>
        </member>
        <member name="F:Floware.PLC.LSIS.LsDevice.K">
            <summary/>
        </member>
        <member name="F:Floware.PLC.LSIS.LsDevice.C">
            <summary/>
        </member>
        <member name="F:Floware.PLC.LSIS.LsDevice.D">
            <summary/>
        </member>
        <member name="F:Floware.PLC.LSIS.LsDevice.T">
            <summary/>
        </member>
        <member name="F:Floware.PLC.LSIS.LsDevice.N">
            <summary/>
        </member>
        <member name="F:Floware.PLC.LSIS.LsDevice.R">
            <summary/>
        </member>
        <member name="F:Floware.PLC.LSIS.LsDevice.Z">
            <summary/>
        </member>
        <member name="M:Floware.PLC.LSIS.LsDevice.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Floware.PLC.LSIS.LsErrorCode">
            <summary>
            LSIS PLC ErrorCode
            </summary>
        </member>
        <member name="T:Floware.PLC.LSIS.LsGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.PLC.LSIS.LsGroup.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.PLC.LSIS.LsGroup.NewBitInstance">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.PLC.LSIS.LsGroup.NewWordInstance">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.PLC.LSIS.LsManager">
            <summary>
            LsManager : PFManager
            </summary>
        </member>
        <member name="M:Floware.PLC.LSIS.LsManager.#ctor">
            <summary></summary>
        </member>
        <member name="M:Floware.PLC.LSIS.LsManager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.LSIS.LsManager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.LSIS.LsManager.Disconnect">
            <summary>
            1. LSIS disconnect, parent PFManager해서 파생됨.
            2. write-read thrad 종료
            3. socket class 정리.
            </summary>
        </member>
        <member name="M:Floware.PLC.LSIS.LsManager.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.LSIS.LsManager.IsConnected">
            <summary/>
        </member>
        <member name="P:Floware.PLC.LSIS.LsManager.Config">
            <summary/>
        </member>
        <member name="T:Floware.PLC.LSIS.LsWordBlock">
            <summary/>
        </member>
        <member name="T:Floware.PLC.Map.Ini.Fp2IniLoader">
            <summary>
            <para>Fp2IniLoader : MewIniLoader</para>
            <para>FP2 Converter, Ascii Mode -> MaxPoint 512</para>
            </summary>
        </member>
        <member name="T:Floware.PLC.Map.Ini.MewIniLoader">
            <summary>
            MewIniLoader : OmronIniLoader
            </summary>
        </member>
        <member name="T:Floware.PLC.Map.Ini.OmronIniLoader">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.PLC.Map.Ini.IniFileLoader">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.PLC.Map.MapFileLoader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.PLC.Map.MapFileLoader.ReadFile(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.MapFileLoader.GetGroup(System.String)">
            <summary>
            <para>MapFileLoader에서 name으로 Group 추출</para>
            </summary>
            <param name="name">group name</param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.MapFileLoader.AddGroupName(System.String,Floware.PLC.Model.Group)">
            <summary>
            <para>GetGroup을 위해 Group Dictionary에 등록</para>
            </summary>
            <param name="name"></param>
            <param name="group"></param>
        </member>
        <member name="F:Floware.PLC.Map.Ini.IniFileLoader.ini">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.PLC.Map.Ini.IniFileLoader.WordWatchOption(Floware.PLC.Model.WordBlock,System.String)">
            <summary>
            
            </summary>
            <param name="block"></param>
            <param name="v"></param>
        </member>
        <member name="M:Floware.PLC.Map.Ini.IniFileLoader.WordWriteOnlyOption(Floware.PLC.Model.WordBlock,System.String)">
            <summary>
            
            </summary>
            <param name="block"></param>
            <param name="v"></param>
        </member>
        <member name="M:Floware.PLC.Map.Ini.IniFileLoader.DecideFormat(Floware.PLC.Model.WordBlock)">
            <summary>
            <para>A,N,F,SI setting</para>
            <para>Not set default value For Number Format '0' changed</para>
            <para>Numeric type point size check </para>
            </summary>
            <param name="block"></param>
        </member>
        <member name="M:Floware.PLC.Map.Ini.IniFileLoader.GetGroup(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.IniFileLoader.AddGroupName(System.String,Floware.PLC.Model.Group)">
            <summary>
            <para>GetGroup을 위해 Group Dictionary에 등록</para>
            </summary>
            <param name="name"></param>
            <param name="group"></param>
        </member>
        <member name="P:Floware.PLC.Map.Ini.IniFileLoader.MapFile">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.PLC.Map.Ini.OmronIniLoader.WhatDevice(System.String)">
            <summary>
            
            </summary>
            <param name="deviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.OmronIniLoader.ReadFile(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.OmronIniLoader.NewGroup">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.OmronIniLoader.NewBitBlock">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.OmronIniLoader.NewWordBlock">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.MewIniLoader.WhatDevice(System.String)">
            <summary>
            
            </summary>
            <param name="deviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.MewIniLoader.NewBitBlock">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.MewIniLoader.NewWordBlock">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.MewIniLoader.NewGroup">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.Fp2IniLoader.NewGroup">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Floware.PLC.Map.Ini.LsisIniLoader">
            <summary>
            LsisIniLoader : OmronIniLoader
            </summary>
        </member>
        <member name="M:Floware.PLC.Map.Ini.LsisIniLoader.WhatDevice(System.String)">
            <summary>
            
            </summary>
            <param name="deviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.LsisIniLoader.NewBitBlock">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.LsisIniLoader.NewWordBlock">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.LsisIniLoader.NewGroup">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Floware.PLC.Map.Ini.MbIniLoader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.PLC.Map.Ini.MbIniLoader.WhatDevice(System.String)">
            <summary>
            
            </summary>
            <param name="deviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.MbIniLoader.ReadFile(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Floware.PLC.Map.Ini.MizIniLoader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.PLC.Map.Ini.MizIniLoader.WhatDevice(System.String)">
            <summary>
            
            </summary>
            <param name="deviceName"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Map.Ini.MizIniLoader.ReadFile(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Floware.PLC.Map.Ini.X8IniLoader">
            <summary>
            LsisIniLoader : OmronIniLoader
            </summary>
        </member>
        <member name="M:Floware.PLC.Map.Ini.X8IniLoader.ReadFile(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Floware.PLC.MEW.MewBitBlock">
            <summary>
            panasonic(MEW) bit block
            </summary>
        </member>
        <member name="T:Floware.PLC.MEW.MewConfig">
            <summary>
            <para>ET-LAN Configuration</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.MEW.MewConfig.#ctor">
            <summary>
            port 4097
            </summary>
        </member>
        <member name="M:Floware.PLC.MEW.MewConfig.ToString">
            <summary></summary><returns></returns>
        </member>
        <member name="P:Floware.PLC.MEW.MewConfig.SrcStation">
            <summary>PC station number</summary>
        </member>
        <member name="P:Floware.PLC.MEW.MewConfig.DestStation">
            <summary>PLC station number</summary>
        </member>
        <member name="T:Floware.PLC.MEW.MewDevice">
            <summary>
            panasonic memory device
            </summary>
        </member>
        <member name="F:Floware.PLC.MEW.MewDevice.WL">
            <summary>
            Link Relay
            </summary>
        </member>
        <member name="F:Floware.PLC.MEW.MewDevice.WR">
            <summary>
            Internal Relay
            </summary>
        </member>
        <member name="F:Floware.PLC.MEW.MewDevice.WY">
            <summary>
            External Output Relay
            </summary>
        </member>
        <member name="F:Floware.PLC.MEW.MewDevice.WX">
            <summary>
            External Input Relay
            </summary>
        </member>
        <member name="F:Floware.PLC.MEW.MewDevice.SV">
            <summary>
            Timer,Counter Value Area
            </summary>
        </member>
        <member name="F:Floware.PLC.MEW.MewDevice.EV">
            <summary>
            Timer,Counter Elapsed Value Area
            </summary>
        </member>
        <member name="F:Floware.PLC.MEW.MewDevice.LD">
            <summary>
            Link Data Register
            </summary>
        </member>
        <member name="F:Floware.PLC.MEW.MewDevice.SWR">
            <summary>
            Special Internal Relay
            </summary>
        </member>
        <member name="F:Floware.PLC.MEW.MewDevice.SDT">
            <summary>
            Special Data Register
            </summary>
        </member>
        <member name="F:Floware.PLC.MEW.MewDevice.DT">
            <summary>
            Data Register
            </summary>
        </member>
        <member name="F:Floware.PLC.MEW.MewDevice.FL">
            <summary>
            File Register
            </summary>
        </member>
        <member name="M:Floware.PLC.MEW.MewDevice.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Floware.PLC.MEW.MewGroup">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.PLC.MEW.MewGroup.IsAsciiMode">
            <summary>
            AsciiType
            </summary>
        </member>
        <member name="P:Floware.PLC.MEW.MewGroup.NewWordInstance">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.PLC.MEW.MewGroup.NewBitInstance">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.PLC.MEW.MewManager">
            <summary>
            MewManager : PFManager
            </summary>
        </member>
        <member name="M:Floware.PLC.MEW.MewManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.PLC.MEW.MewManager.Connect">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.PLC.MEW.MewManager.Enqueue(System.Object)">
            <summary>
            
            </summary>
            <param name="o"></param>
        </member>
        <member name="M:Floware.PLC.MEW.MewManager.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.MEW.MewManager.Disconnect">
            <summary>
            <para>다시 연결을 위해서는 NxManager를 New를 이용하여 다시 생성해야 함.</para>
            <para>1. ET-NET ethernet disconnect</para>
            <para>2. write-read thrad 종료</para>
            <para>3. socket class 정리.</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.MEW.MewManager.Config">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.PLC.MEW.MewManager.IsConnected">
            <summary/>
        </member>
        <member name="T:Floware.PLC.MEW.MewTcpNet">
            <summary>
            MewNet(ET-LAN) : PLCNet
            </summary>
        </member>
        <member name="M:Floware.PLC.MEW.MewTcpNet._ETLanHeader(System.Int32)">
            <summary>
            ETLan Header
            </summary>
            <param name="data_size"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.MEW.MewTcpNet.ReadBitOrWordGroup(Floware.PLC.Model.Group)">
            <summary>
            BIT, WORD를 읽는 방식이 동일
            WORD로 읽어서 쪼갠다.
            </summary>
            <param name="grp"></param>
        </member>
        <member name="T:Floware.PLC.MEW.MewWordBlock">
            <summary>
            MewWordBlock
            </summary>
        </member>
        <member name="T:Floware.PLC.Mitsubishi.McAsciiNet">
            <summary>
            McAsciiNet : Mcnet
            </summary>
        </member>
        <member name="T:Floware.PLC.Mitsubishi.McTcpNet">
            <summary>
            Mcnet : PLCNet
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.McTcpNet.qqW">
            <summary>
            <para>Msg send queue</para>
            <para>mc ascii net 도 같이 사용함.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McTcpNet.EnlargeInReadBinaryBits(System.Byte[])">
            <summary>
            bit를 읽을 경우 binary mode에서는 받은 byte를 2배 늘임.
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McAsciiNet._ioPollBits(Floware.PLC.Model.Group)">
            <summary>
            
            </summary>
            <param name="grp"></param>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McAsciiNet._ioPollWords(Floware.PLC.Model.Group)">
            <summary>
            
            </summary>
            <param name="grp"></param>
        </member>
        <member name="T:Floware.PLC.Mitsubishi.McCommNet">
            <summary>
            Mcnet : PLCNet
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.McCommNet.qqW">
            <summary>
            <para>Msg send queue</para>
            <para>mc ascii net 도 같이 사용함.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McCommNet.#ctor(Floware.PLC.Mitsubishi.MizManager)">
            <summary>
            
            </summary>
            <param name="miz"></param>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McCommNet.WriteOneBlock(Floware.PLC.Model.Block)">
            <summary>
            
            </summary>
            <param name="block"></param>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McCommNet.WriteOneWord(Floware.PLC.Model.WordBlock)">
            <summary>
            
            </summary>
            <param name="block"></param>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McCommNet.WriteOneBit(Floware.PLC.Model.BitBlock)">
            <summary>
            
            </summary>
            <param name="block"></param>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McCommNet._ioPollBits(Floware.PLC.Model.Group)">
            <summary>
            <para>-</para>
            </summary>
            <param name="grp"></param>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McCommNet.EnlargeInReadBinaryBits(System.Byte[])">
            <summary>
            bit를 읽을 경우 binary mode에서는 받은 byte를 2배 늘임.
            </summary>
            <param name="org"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McCommNet._ioPollWords(Floware.PLC.Model.Group)">
            <summary>
            <para>-</para>
            </summary>
            <param name="grp"></param>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McCommNet._WordReadComp(Floware.PLC.Model.Group,System.Byte[])">
            <summary>
            
            </summary>
            <param name="grp"></param>
            <param name="bs_all"></param>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McCommNet._BitReadComp(Floware.PLC.Model.Group,System.Byte[])">
            <summary>
            
            </summary>
            <param name="grp"></param>
            <param name="bs_all"></param>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McCommNet.ReadArray(Floware.PLC.Mitsubishi.MizDevice,System.Int32,System.Int32)">
            <summary>
            Only support MELSECNET
            </summary>
            <param name="device"></param>
            <param name="address"></param>
            <param name="size">byte size</param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.McCommNet.WriteArray(Floware.PLC.Mitsubishi.MizDevice,System.Int32,System.Byte[])">
            <summary>
            
            </summary>
            <param name="device"></param>
            <param name="address"></param>
            <param name="bs"></param>
        </member>
        <member name="T:Floware.PLC.Mitsubishi.MizBitBlock">
            <summary>
            Mitsubish PLC Bit Block
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizBitBlock.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizBitBlock.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizBitBlock.Channel">
            <summary>
            MelsecNet을 사용할 경우 Channel No
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizBitBlock.Encode">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizBitBlock.DspAddr">
            <summary/>
        </member>
        <member name="T:Floware.PLC.Mitsubishi.MizConfig">
            <summary>
            <para>Mitsubishi 연결 정보</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizConfig.#ctor">
            <summary>
            <para>생성자</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizConfig.HeaderCh(Floware.PLC.Model.Group)">
            <summary>
            Channel 정보를 Station 에 싣는다.
            IOCenter 기능 개발..
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizConfig.ToString">
            <summary>
            <para>ToString override</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizConfig.RollingCount">
            <summary>
            <para>Mitsubishi Port 잠식 문제에 대안</para>
            <para>-</para>
            <para>기본값: 1</para>
            <para>-</para>
            <para>Port=8001, RollingCount=3을 입력할 경우</para>
            <para>8001~8003까지 다양하게 접속 시도하여 통신을 한다.</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizConfig.Channel">
            <summary>
            <para>MelsecNET 이용시 입력되는 Channel No</para>
            <para>기본값은 51</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizConfig.IsMnetBoard">
            <summary>
            <para>MelsecNet board 타입 사용</para>
            <para>기본값 false</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizConfig.IsAsciiComn">
            <summary>
            <para>Binary or Ascii Mode 통신 선택</para>
            <para>기본값 false: BinaryMode</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizConfig.NetworkNumber">
            <summary>
            def: 0
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizConfig.StationNo">
            <summary>
            <para>TCP def: 0x00</para>
            <para>MELSEC def: 0xff</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizConfig.IoNo">
            <summary>
            def: 0x3ff
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizConfig.PcNo">
            <summary>
            def: 0xff
            </summary>
        </member>
        <member name="T:Floware.PLC.Mitsubishi.MizDevice">
            <summary/>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.X">
            <summary>
            16진수 map 표현 방식
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.Y">
            <summary>
            16진수 map 표현 방식
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.M">
            <summary>
            10진수 map 표현 방식
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.B">
            <summary>
            16진수 map 표현 방식
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.SB">
            <summary>
            16진수 map 표현 방식
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.L">
            <summary>
            10진수 map 표현 방식
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.CS">
            <summary>
            10진수 map 표현 방식
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.TS">
            <summary>
            10진수 map 표현 방식
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.D">
            <summary>
            10진수 map 표현 방식
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.W">
            <summary>
            16진수 map 표현 방식
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.SW">
            <summary>
            16진수 map 표현 방식
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.R">
            <summary>
            10진수 map 표현 방식
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MizDevice.ZR">
            <summary>
            10진수 map 표현 방식
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizDevice.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizDevice.AsciiCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizDevice.BinaryCode">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizDevice.IsBit">
            <summary>
            <para>true: X,Y,M,B,L</para>
            <para>false: D,W,R,ZR</para>
            </summary>
        </member>
        <member name="T:Floware.PLC.Mitsubishi.MizErrorCode">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizErrorCode.GetErrorText(System.Int32)">
            <summary>
            User guide 307 page
            </summary>
        </member>
        <member name="T:Floware.PLC.Mitsubishi.MizGroup">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizGroup.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizGroup.ReadAutoOffOption(Floware.PLC.Model.BitBlock,System.String)">
            <summary>
            <para>auto off option(/R) apply</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizGroup.ReadBitIniMapFile(Floware.Utils.Win32.Win32IniUtils)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizGroup.ReadAddress(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizGroup.ReadDefinedMessages(System.String,Floware.PLC.Model.Device,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizGroup.ReadDefinedMessages">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizGroup.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizGroup.ChNo">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizGroup.NetNo">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizGroup.StNo">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizGroup.IsQnA">
            <summary>
            Q series or A series
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizGroup.Device">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizGroup.SplitGapPointSize">
            <summary>
            bit: 2048
            word: setting value. (480)
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizGroup.NewWordInstance">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizGroup.NewBitInstance">
            <summary/>
        </member>
        <member name="T:Floware.PLC.Mitsubishi.MizManager">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.Timeset(Floware.PLC.Mitsubishi.MizDevice,System.Int32)">
            <summary>
            현재 시간을 이용하여 설비로 time set하는 기능
            <para>상위 시스템 동기화 후 함수 호출해야 함.</para>
            <para>yyyyMMddHHmmss</para>
            <para>각각 1 word씩 할당함.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.Disconnect">
            <summary>
            <para>Instance 재사용 권장.</para>
            <para>-</para>
            <para>1. Mitsubish ethernet disconnect</para>
            <para>parent PFManager해서 파생됨</para>
            <para>MELSECNET Board Type일 경우 socket 종료 하지않음</para>
            <para>2. write-read thrad 종료</para>
            <para>3. socket class 정리</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.ReadArray(Floware.PLC.Mitsubishi.MizDevice,System.Int32,System.Int32)">
            <summary>
            MELSECNET read array
            <para>Word일 경우 bytesize</para>
            <para>Bit일 경우 point size(binary mode일 경우 1/2 byte</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.WriteArray(Floware.PLC.Mitsubishi.MizDevice,System.Int32,System.Int32,System.Byte[])">
            <summary>
            bs만큼 write를 수행하는 low-level API + size 보정.
            <para>address는 실제 PLC addr</para>
            <para>size가 bs 보다 적을 경우 0x00으로 나머지를 채운다.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.WriteArray(Floware.PLC.Mitsubishi.MizDevice,System.Int32,System.Byte[])">
            <summary>
            bs만큼 write를 수행하는 low-level API
            <para>address는 실제 PLC addr</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.WriteWord(System.Int32,System.Int32,Floware.Utils.MemoryBuffer)">
            <summary>
            Write Array
            </summary>
            <param name="dcode">device code</param>
            <param name="addr">word address</param>
            <param name="mb"></param>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.WriteWordBit(System.String,System.Int32,System.Boolean)">
            <summary>
            <para>D0.1 or W1.1등 Word type을 bit로 쪼개서 사용할 경우 적용.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.WriteBit(Floware.PLC.Model.BitBlock)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.WriteWord(Floware.PLC.Model.WordBlock)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.ReadLedState">
            <summary>
            MELSECNET LED state
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizManager.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizManager.IsConnected">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizManager.Config">
            <summary>
            <para>Mitsubishi Config</para>
            </summary>
        </member>
        <member name="T:Floware.PLC.Mitsubishi.MizWordBlock">
            <summary>
            Mitsubishi word block
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizWordBlock.#ctor">
            <summary>
            Consturctor
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizWordBlock.GetDiffBitIndex">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizWordBlock.GetBitValue(System.Int32)">
            <summary>
            <para>Number Format일 경우 Word -> Bit로 환산한 bit on 결과</para>
            </summary>
            <param name="bitIndex"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MizWordBlock.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizWordBlock.Channel">
            <summary>
            MelsecNet 사용시 참고 Channel No
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizWordBlock.BitArray">
            <summary>
            <para>Number Format일 경우 IntValue를 32bit로 변환</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MizWordBlock.DspAddr">
            <summary/>
        </member>
        <member name="T:Floware.PLC.Mitsubishi.MnetBoard">
            <summary>
            MnetBoard : Mcnet
            </summary>
        </member>
        <member name="F:Floware.PLC.Mitsubishi.MnetBoard.lock0">
            <summary>
            <para>MELSECNET은 single thread만 지원함.</para>
            <para>ReadArray함수를 위해 전체적으로 lock처리를 넣음.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MnetBoard.#ctor">
            <summary>
            <para>Channel</para>
            <para>MNET-H</para>
            <para>MNET10-1(51), MNET10-1(52), MNET10-1(53), MNET10-1(54)</para>
            <para>MNET-G</para>
            <para>MNETG-1(151), MNETG-1(152), MNETG-1(153), MNETG-1(154)</para>
            <para>-</para>
            <para>Mode</para>
            <para>0:MELSECNET(usual), 1:MELSECNET-II, 2:MELSECNET(mixed), -1:no mode set</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MnetBoard._pollWords(Floware.PLC.Model.Group)">
            <summary>
            mdReceive함수가 short type만을 지원하므로 size가 -가 되어 byte를 할당할 때 음수가 들어가는 경우가 발생하므로 max point size에서 
            short.MaxValue/2를 이용하여 처리하고 나누어서 읽는다.
            </summary>
            <param name="grp"></param>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MnetBoard.ReadArray(Floware.PLC.Mitsubishi.MizDevice,System.Int32,System.Int32)">
            <summary>
            MELSECNET direct read
            </summary>
            <param name="device"></param>
            <param name="address"></param>
            <param name="bsize">Byte size</param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Mitsubishi.MnetBoard.ReadLedState">
            <summary>
            error check를 하면 안되는거 같음 SDI 테스트 (향후 시간되면 테스트 필요)
            </summary>
            <returns></returns>
        </member>
        <member name="P:Floware.PLC.Mitsubishi.MnetBoard.Mode">
            <summary>
            <para>default: 1</para>
            <para>0:MELSECNET, 1:MELSECNET-II, 2:MELSECNET(mixed), -1:no mode set</para>
            <para></para>
            
            </summary>
        </member>
        <member name="T:Floware.PLC.Modbus.MbBitBlock">
            <summary>
            <para>Modbus bit</para>
            <para>Coil, input</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Modbus.MbBitBlock.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Modbus.MbCommNet.WriteOneBlock(Floware.PLC.Model.Block)">
            <summary>
            bit, word 혼용.
            </summary>
            <param name="block"></param>
        </member>
        <member name="T:Floware.PLC.Modbus.MbConfig">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbConfig.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbConfig.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Modbus.MbConfig.ReadEachWord">
            <summary>
            Peken이 아닌 각각 wordblock으로 읽음.
            </summary>
        </member>
        <member name="P:Floware.PLC.Modbus.MbConfig.UnitNo">
            <summary>
            Slave No
            </summary>
        </member>
        <member name="P:Floware.PLC.Modbus.MbConfig.TcpMode">
            <summary>
            TCP or Serail
            </summary>
        </member>
        <member name="P:Floware.PLC.Modbus.MbConfig.SpDetail">
            <summary/>
        </member>
        <member name="T:Floware.PLC.Modbus.MbDevice">
            <summary>
            modbus device
            application에서 사용가능한것은 coil, holding만 존재함.
            </summary>
        </member>
        <member name="F:Floware.PLC.Modbus.MbDevice.B_COIL">
            <summary>
            <para>READ WRITE BIT 출력</para>
            </summary>
        </member>
        <member name="F:Floware.PLC.Modbus.MbDevice.W_HOLD">
            <summary>
            <para>READ WRITE WORD REGISTER</para>
            </summary>
        </member>
        <member name="F:Floware.PLC.Modbus.MbDevice.W_FILE">
            <summary>
            <para>READ WRITE FILE RECORD</para>
            <para>File record access</para>
            </summary>
        </member>
        <member name="F:Floware.PLC.Modbus.MbDevice.B_INPUT">
            <summary>
            <para>READ ONLY BIT 입력, WRITE가 없다.</para>
            </summary>
        </member>
        <member name="F:Floware.PLC.Modbus.MbDevice.W_INPUT">
            <summary>
            <para>READ ONLY WORD 입력, WRITE없음</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Modbus.MbDevice.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Floware.PLC.Modbus.MbGroup">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.PLC.Modbus.MbGroup.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Modbus.MbGroup.UnitNo">
            <summary>
            개별적으로 읽기.
            </summary>
        </member>
        <member name="P:Floware.PLC.Modbus.MbGroup.IsBit">
            <summary>
            auto set bit or word
            </summary>
        </member>
        <member name="P:Floware.PLC.Modbus.MbGroup.MaxPointSize">
            <summary>
            BIT or WORD에 따라 다르다.
            </summary>
        </member>
        <member name="P:Floware.PLC.Modbus.MbGroup.NewWordInstance">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.PLC.Modbus.MbGroup.NewBitInstance">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.PLC.Modbus.MbManager">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbManager.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbManager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbManager.WriteBit(System.String,System.Boolean)">
            <summary>
            Write Input 방지.
            </summary>
        </member>
        <member name="M:Floware.PLC.Modbus.MbManager.WriteWord(System.String,System.String)">
            <summary>
            Write Input 방지.
            </summary>
        </member>
        <member name="M:Floware.PLC.Modbus.MbManager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbManager.Disconnect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbManager.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Modbus.MbManager.Config">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Modbus.MbManager.IsConnected">
            <summary/>
        </member>
        <member name="T:Floware.PLC.Modbus.MbTcpNet">
            <summary>
            Modbus Tcp
            </summary>
        </member>
        <member name="M:Floware.PLC.Modbus.MbTcpNet.WriteOneBlock(Floware.PLC.Model.Block)">
            <summary>
            bit, word 혼용.
            </summary>
            <param name="block"></param>
        </member>
        <member name="T:Floware.PLC.Modbus.MbWordBlock">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbWordBlock.Encode1Point">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbWordBlock.Encode2Point">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbWordBlock.SwapMidEndian(System.Byte[])">
            <summary>
            Middle-endian 처리
            </summary>
        </member>
        <member name="M:Floware.PLC.Modbus.MbWordBlock.Decode2Int(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbWordBlock.Decode2Float(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbWordBlock.Decode1Ushort(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Modbus.MbWordBlock.Decode1Short(System.Byte[])">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Modbus.MbWordBlock.MiddleEndian">
            <summary>
            <para>2바이트 단위로는 빅 엔디언이고 그 안에서 1바이트 단위로는 리틀 엔디언</para>
            2 point 경우 Word swap 해야하는 경우.
            12345678 변환후 56781234
            </summary>
        </member>
        <member name="T:Floware.PLC.Model.Peken">
            <summary>
            <para>PLC Effective Token</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Model.Peken.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Model.Peken.ToString">
            <summary>
            <para>Addr=0000~0099 Point=100</para>
            </summary>
            <returns></returns>
        </member>
        <member name="F:Floware.PLC.Omron.CxNet.qqW">
            <summary>
            Msg send queue
            </summary>
        </member>
        <member name="M:Floware.PLC.Omron.CxCommNet.TryToCommOpen">
            <summary>
            <para>연결 후 SorceNodeNo를 이용하여 session을 맺는다.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Omron.CxCommNet.ReqChgOpMode(System.Int32)">
            <summary>
            0: Program
            2: Monitor
            3: Run
            </summary>
            <param name="mode"></param>
        </member>
        <member name="M:Floware.PLC.Omron.CxTcpNet.ReadBitOrWordGroup(Floware.PLC.Model.Group)">
            <summary>
            <para>Bit, Word 모두 Word로 읽어서 분기함</para>
            </summary>
            <param name="grp"></param>
        </member>
        <member name="M:Floware.PLC.Omron.CxTcpNet.ReadGroup(Floware.PLC.Model.Group)">
            <summary>
            <para>Read할 경우에는 bitCode를 적용하지 않는다. 그냥 word point처럼 읽어서 enlarge를 한다.</para>
            </summary>
            <param name="grp">전체 Group, split group이 아님.</param>
        </member>
        <member name="M:Floware.PLC.Omron.CxTcpNet.TryToConnect">
            <summary>
            <para>연결 후 SorceNodeNo를 이용하여 session을 맺는다.</para>
            </summary>
        </member>
        <member name="T:Floware.PLC.Omron.OmBitBlock">
            <summary>
            omron plc bitblock
            </summary>
        </member>
        <member name="T:Floware.PLC.Omron.OmConfig">
            <summary>
            OMRON FINS Config
            </summary>
        </member>
        <member name="M:Floware.PLC.Omron.OmConfig.#ctor">
            <summary>
            <para>Constructor</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.Omron.OmConfig.ToString">
            <summary></summary>
            <returns></returns>
        </member>
        <member name="P:Floware.PLC.Omron.OmConfig.SrcNodeNo">
            <summary>
            <para>PC NODE NO</para>
            <para>PLC NODE와 중복되지 않아야 함.</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.Omron.OmConfig.DestNodeNo">
            <summary>PLC NODE NO, DEFAULT(1)</summary>
        </member>
        <member name="P:Floware.PLC.Omron.OmConfig.UnitNo">
            <summary>PLC UNIT NO, DEFAULT(0)</summary>
        </member>
        <member name="P:Floware.PLC.Omron.OmConfig.TcpMode">
            <summary>
            TCP or Serail
            </summary>
        </member>
        <member name="P:Floware.PLC.Omron.OmConfig.SpDetail">
            <summary>
            <para>SerialPort Detail Config</para>
            <para>HostLink Mode</para>
            <para>9600, 7, Even, 2</para>
            </summary>
        </member>
        <member name="T:Floware.PLC.Omron.OmDevice">
            <summary>
            OmDevice : Device
            </summary>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.IR">
            <summary>
            Index Register 0~15
            </summary>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.TK">
            <summary>
            Task Flag 0~30
            </summary>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.DR">
            <summary>
            Data Register 0~15
            </summary>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.T">
            <summary>
            Timer 0~4095
            </summary>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.C">
            <summary>
            Counter 0~4095
            </summary>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.D">
            <summary>
            DataMemory 0~32767
            </summary>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.W">
            <summary>
            Aux Rely 0~511
            </summary>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.CIO">
            <summary>
            0~6143, R
            </summary>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.H">
            <summary>
            0~1535
            </summary>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.A">
            <summary>
            0~959
            </summary>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.E0">
            <summary>
            0~32767
            </summary>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.E1">
            <summary/>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.E2">
            <summary/>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.E3">
            <summary/>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.E4">
            <summary/>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.E5">
            <summary/>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.E6">
            <summary/>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.E7">
            <summary/>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.E8">
            <summary/>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.E9">
            <summary/>
        </member>
        <member name="F:Floware.PLC.Omron.OmDevice.E10">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Omron.OmDevice.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Floware.PLC.Omron.OmGroup">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Omron.OmGroup.#ctor">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Omron.OmGroup.NewWordInstance">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.PLC.Omron.OmGroup.NewBitInstance">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.PLC.Omron.OmManager">
            <summary>
            OMRON TCP Communication.
            </summary>
        </member>
        <member name="M:Floware.PLC.Omron.OmManager.#ctor">
            <summary>
            thread start
            </summary>
        </member>
        <member name="M:Floware.PLC.Omron.OmManager.AddGroup(Floware.PLC.Model.Group)">
            <summary>
            RS232 패킷사이즈 처리 위해 override
            </summary>
            <param name="grp"></param>
        </member>
        <member name="M:Floware.PLC.Omron.OmManager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Omron.OmManager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Omron.OmManager.ChgOpMode(System.Int32)">
            <summary>
            0: Program
            2: Monitor
            3: Run
            </summary>
            <param name="mode"></param>
        </member>
        <member name="M:Floware.PLC.Omron.OmManager.Disconnect">
            <summary>
            TcpThread Stop
            PFManager Thread Stop
            </summary>
        </member>
        <member name="M:Floware.PLC.Omron.OmManager.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Omron.OmManager.Config">
            <summary>
            OMRON Config
            </summary>
        </member>
        <member name="P:Floware.PLC.Omron.OmManager.IsConnected">
            <summary/>
        </member>
        <member name="T:Floware.PLC.Omron.OmWordBlock">
            <summary>
            omron word block
            </summary>
        </member>
        <member name="M:Floware.PLC.Omron.OmWordBlock.Encode1Point">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Omron.OmWordBlock.Encode2Point">
            <summary/>
        </member>
        <member name="M:Floware.PLC.Omron.OmWordBlock.Reverse2PointNumeric(System.Byte[])">
            <summary>
            Omron의 경우 2Point는 아래와 같이 2byte reverse가 된다.
            1,2,3,4 -> 4,3,2,1 -> 2byte reverse -> 2,1,4,3
            </summary>
            <param name="bs"></param>
        </member>
        <member name="M:Floware.PLC.Omron.OmWordBlock.Decode2Int(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bs"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Omron.OmWordBlock.Decode2Float(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bs"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Omron.OmWordBlock.Decode1Ushort(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bs"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.PLC.Omron.OmWordBlock.Decode1Short(System.Byte[])">
            <summary>
            
            </summary>
            <param name="bs"></param>
            <returns></returns>
        </member>
        <member name="T:Floware.PLC.S7.S7BitBlock">
            <summary>
            Mitsubish PLC Bit Block
            </summary>
        </member>
        <member name="M:Floware.PLC.S7.S7BitBlock.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Floware.PLC.S7.S7BitBlock.DspAddr">
            <summary/>
        </member>
        <member name="T:Floware.PLC.S7.S7Config">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7Config.#ctor">
            <summary/>
        </member>
        <member name="P:Floware.PLC.S7.S7Config.RefPLC">
            <summary/>
        </member>
        <member name="P:Floware.PLC.S7.S7Config.RefMe">
            <summary/>
        </member>
        <member name="P:Floware.PLC.S7.S7Config.TsapMe">
            <summary/>
        </member>
        <member name="P:Floware.PLC.S7.S7Config.TsapPLC">
            <summary>
            <para>Rack,Slot</para>
            <para>S300: 0x102</para>
            <para>S400: H/W setting</para>
            <para>S1200,1500: 0x100</para>
            </summary>
        </member>
        <member name="F:Floware.PLC.S7.S7Device.DB">
            <summary>
            Data block
            </summary>
        </member>
        <member name="M:Floware.PLC.S7.S7Device.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.S7.S7Device.Code">
            <summary/>
        </member>
        <member name="T:Floware.PLC.S7.S7Group">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7Group.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7Group.AddBitBlock(Floware.PLC.Model.BitBlock)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7Group.ArrangeBlock">
            <summary>
            Word point를 byte기준 *2 이므로 override 수행함.
            </summary>
        </member>
        <member name="P:Floware.PLC.S7.S7Group.NewWordInstance">
            <summary/>
        </member>
        <member name="P:Floware.PLC.S7.S7Group.NewBitInstance">
            <summary/>
        </member>
        <member name="T:Floware.PLC.S7.S7Manager">
            <summary>
            SIEMENS S7 통신
            </summary>
        </member>
        <member name="M:Floware.PLC.S7.S7Manager.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7Manager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7Manager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7Manager.Disconnect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7Manager.ReadArray(System.Int32,System.Int32,System.Int32)">
            <summary>
            <para>Byte Read Array</para>
            size는 byte size 임을 유의.
            </summary>
        </member>
        <member name="M:Floware.PLC.S7.S7Manager.WriteArray(System.Int32,System.Int32,System.Byte[])">
            <summary>
            Byte Array Write
            </summary>
        </member>
        <member name="M:Floware.PLC.S7.S7Manager.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.S7.S7Manager.Config">
            <summary/>
        </member>
        <member name="P:Floware.PLC.S7.S7Manager.IsConnected">
            <summary/>
        </member>
        <member name="T:Floware.PLC.S7.S7TcpNet">
            <summary>
            Mcnet : PLCNet
            </summary>
        </member>
        <member name="F:Floware.PLC.S7.S7TcpNet.lock0">
            <summary>
            lock은 public 함수와 Queue의 method에서만 잡는다.
            </summary>
        </member>
        <member name="F:Floware.PLC.S7.S7TcpNet.qqW">
            <summary>
            <para>Msg send queue</para>
            <para>mc ascii net 도 같이 사용함.</para>
            </summary>
        </member>
        <member name="T:Floware.PLC.S7.S7WordBlock">
            <summary>
            Mitsubishi word block
            </summary>
        </member>
        <member name="M:Floware.PLC.S7.S7WordBlock.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7WordBlock.EncodeAscii">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7WordBlock.DecodeAscii(System.Byte[])">
            <summary>
            size관련 2byte 처리
            </summary>
        </member>
        <member name="M:Floware.PLC.S7.S7WordBlock.Encode1Point">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7WordBlock.Encode2Point">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7WordBlock.Decode1Short(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7WordBlock.Decode2Int(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7WordBlock.Decode1Ushort(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.PLC.S7.S7WordBlock.Decode2Float(System.Byte[])">
            <summary/>
        </member>
        <member name="P:Floware.PLC.S7.S7WordBlock.DspAddr">
            <summary/>
        </member>
        <member name="T:Floware.PLC.SLMP.MxManager">
            <summary>
            mx component
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.MxManager.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.SLMP.MxManager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.SLMP.MxManager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.SLMP.MxManager.WriteBit(System.String,System.Boolean)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.SLMP.MxManager.WriteWord(System.String,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.SLMP.MxManager.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.MxManager.Config">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.MxManager.IsConnected">
            <summary/>
        </member>
        <member name="T:Floware.PLC.SLMP.SlmpBitBlock">
            <summary>
            Mitsubish PLC Bit Block
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpBitBlock.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpBitBlock.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpBitBlock.DspAddr">
            <summary/>
        </member>
        <member name="T:Floware.PLC.SLMP.SlmpConfig">
            <summary>
            <para>SLMP config</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpConfig.#ctor">
            <summary>
            <para>생성자</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpConfig.ToString">
            <summary>
            <para>ToString override</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpConfig.RollingCount">
            <summary>
            <para>Port 잠식 문제에 대안</para>
            <para>-</para>
            <para>기본값: 1</para>
            <para>-</para>
            <para>Port=8001, RollingCount=3을 입력할 경우</para>
            <para>8001~8003까지 다양하게 접속 시도하여 통신을 한다.</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpConfig.NetNo">
            <summary>
            def: 0
            </summary>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpConfig.AliveTime">
            <summary>
            MC protocol Monitor Time 초단위
            <para>def: 10 second</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpConfig.StNo">
            <summary>
            <para>Station def: 0x00</para>
            </summary>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpConfig.IoNo">
            <summary>
            def: 0x3ff
            </summary>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpConfig.PcNo">
            <summary>
            def: 0xff
            </summary>
        </member>
        <member name="T:Floware.PLC.SLMP.SlmpDevice">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpDevice.X">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpDevice.Y">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpDevice.B">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpDevice.M">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpDevice.L">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpDevice.W">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpDevice.D">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpDevice.R">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpDevice.ZR">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpDevice.Z">
            <summary>
            Index register
            </summary>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpDevice.MR">
            <summary>
            Motion Register
            </summary>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpDevice.SD">
            <summary>
            <para>special register</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpDevice.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpDevice.IsBit">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpDevice.HexAddrType">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpDevice.Code">
            <summary/>
        </member>
        <member name="T:Floware.PLC.SLMP.SlmpGroup">
            <summary/>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpGroup.#ctor">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpGroup.NetNo">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpGroup.StNo">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpGroup.Device">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpGroup.SplitGapPointSize">
            <summary>
            bit: 2048
            word: setting value. (480)
            </summary>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpGroup.NewWordInstance">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpGroup.NewBitInstance">
            <summary/>
        </member>
        <member name="T:Floware.PLC.SLMP.SlmpManager">
            <summary>
            Seamless Message Protocol(SLMP)
            <para>CC-Link IE field bus access protocol</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpManager.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpManager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpManager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpManager.Control(Floware.PLC.SLMP.SlmpManager.Mode)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpManager.Disconnect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpManager.Timeset(Floware.PLC.SLMP.SlmpDevice,System.Int32)">
            <summary>
            현재 시간을 이용하여 설비로 time set하는 기능
            <para>상위 시스템 동기화 후 함수 호출해야 함.</para>
            <para>yyyyMMddHHmmss</para>
            <para>각각 1 word씩 할당함.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpManager.ReadArrW(Floware.PLC.Model.Device,System.Int32,System.Int32)">
            <summary>
            <para>Word Read Array</para>
            size는 byte size 임.
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpManager.WriteArrW(Floware.PLC.Model.Device,System.Int32,Floware.Utils.MemoryBuffer)">
            <summary>
            Word Array Write
            <para>Terminal msg를 할경우 MemoryBuffer.AppendAscii 함수를 이용한다.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpManager.WriteWord(System.Int32,System.Int32,Floware.Utils.MemoryBuffer)">
            <summary>
            Write Array
            </summary>
            <param name="dcode">device code</param>
            <param name="addr">word address</param>
            <param name="mb"></param>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpManager.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpManager.Config">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpManager.IsConnected">
            <summary/>
        </member>
        <member name="T:Floware.PLC.SLMP.SlmpManager.Mode">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpManager.Mode.ModelName">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpManager.Mode.LedOffCommErr">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpManager.Mode.RUN">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpManager.Mode.STOP">
            <summary/>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpManager.Mode.RESET">
            <summary/>
        </member>
        <member name="T:Floware.PLC.SLMP.SlmpTcpNet">
            <summary>
            Mcnet : PLCNet
            </summary>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpTcpNet.lock0">
            <summary>
            lock은 public 함수와 Queue의 method에서만 잡는다.
            </summary>
        </member>
        <member name="F:Floware.PLC.SLMP.SlmpTcpNet.qqW">
            <summary>
            <para>Msg send queue</para>
            <para>mc ascii net 도 같이 사용함.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpTcpNet.DeComp(Floware.Utils.MemoryBuffer)">
            <summary>
            bit를 읽을 경우 binary mode에서는 받은 byte를 2배 늘임.
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpTcpNet.ReadArr1B(Floware.PLC.Model.Device,System.Int32,System.Int32)">
            <summary>
            psize의 1/2 byte를 반환한다.
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpTcpNet.ReadArrW(Floware.PLC.Model.Device,System.Int32,System.Int32)">
            <summary>
            byte 단위.
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpTcpNet.ReadArr1W(Floware.PLC.Model.Device,System.Int32,System.Int32)">
            <summary>
            psize의 2배 byte를 반환한다.
            </summary>
        </member>
        <member name="T:Floware.PLC.SLMP.SlmpWordBlock">
            <summary>
            Mitsubishi word block
            </summary>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpWordBlock.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.SLMP.SlmpWordBlock.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.SLMP.SlmpWordBlock.DspAddr">
            <summary/>
        </member>
        <member name="T:Floware.PLC.Support.DoInvokeChgdBlockNow">
            <summary>
            bit, word 읽기가 끝나면 이벤트 발생해야할 때 쓰는 object, queue에 넣는 객체로 구별을 해야한다.
            </summary>
        </member>
        <member name="T:Floware.PLC.Support.EthSession">
            <summary>
            Omron TCP, EIP session 적용시 TryToConnect에서 에러 발생하여 EthSession을 Queue에 넣어 IOException logic 처리
            </summary>
        </member>
        <member name="T:Floware.PLC.Support.MapScan">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Support.MapScan.CollectNo">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Support.MapScan.FirstCollect">
            <summary/>
        </member>
        <member name="P:Floware.PLC.Support.MapScan.CollectTime">
            <summary/>
        </member>
        <member name="T:Floware.PLC.VPF.VPFServer">
            <summary/>
        </member>
        <member name="M:Floware.PLC.VPF.VPFServer._ThDump">
            <summary>
            Lock처리는 하지 않는다.
            </summary>
        </member>
        <member name="M:Floware.PLC.VPF.VPFServer.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.VPF.VPFServer.Init">
            <summary/>
        </member>
        <member name="P:Floware.PLC.VPF.VPFServer.PortNo">
            <summary/>
        </member>
        <member name="T:Floware.PLC.VPF.VpConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.PLC.VPF.VpConfig.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.PLC.VPF.VpManager">
            <summary>
            VpManager : LsManager
            </summary>
        </member>
        <member name="M:Floware.PLC.VPF.VpManager.AddGroup(Floware.PLC.Model.Group)">
            <summary>
            
            </summary>
            <param name="group"></param>
        </member>
        <member name="M:Floware.PLC.VPF.VpManager.LoadMapFile(System.String)">
            <summary>
            ReadDefinedMessage에서 SplitGapPointSize, MaxPointSize를 setting하므로 
            AddGroup을 Override하면 안된다.
            </summary>
            <param name="path"></param>
        </member>
        <member name="P:Floware.PLC.VPF.VpManager.ActiveClientCount">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.PLC.X8.X8BitBlock">
            <summary/>
        </member>
        <member name="M:Floware.PLC.X8.X8BitBlock.ToString">
            <summary/>
        </member>
        <member name="T:Floware.PLC.X8.X8Config">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.PLC.X8.X8Config.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.X8.X8Config.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.X8.X8Config.SrcNodeNo">
            <summary/>
        </member>
        <member name="P:Floware.PLC.X8.X8Config.DestNodeNo">
            <summary/>
        </member>
        <member name="T:Floware.PLC.X8.X8Device">
            <summary>
            <para>N,L,F 는 데이터 영역이며, 파일 레지스터임.</para>
            </summary>
        </member>
        <member name="F:Floware.PLC.X8.X8Device.X">
            <summary/>
        </member>
        <member name="F:Floware.PLC.X8.X8Device.Y">
            <summary/>
        </member>
        <member name="F:Floware.PLC.X8.X8Device.B">
            <summary>
            Binary
            </summary>
        </member>
        <member name="F:Floware.PLC.X8.X8Device.N">
            <summary>
            Integer
            </summary>
        </member>
        <member name="F:Floware.PLC.X8.X8Device.F">
            <summary>
            Floating Point
            </summary>
        </member>
        <member name="F:Floware.PLC.X8.X8Device.L">
            <summary>
            Long
            </summary>
        </member>
        <member name="F:Floware.PLC.X8.X8Device.A">
            <summary>
            1 word Ascii
            </summary>
        </member>
        <member name="F:Floware.PLC.X8.X8Device.ST">
            <summary>
            String
            </summary>
        </member>
        <member name="M:Floware.PLC.X8.X8Device.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Floware.PLC.X8.X8Group">
            <summary/>
        </member>
        <member name="M:Floware.PLC.X8.X8Group.#ctor">
            <summary/>
        </member>
        <member name="P:Floware.PLC.X8.X8Group.DataTable">
            <summary>
            e.g N200
            </summary>
        </member>
        <member name="P:Floware.PLC.X8.X8Group.DataTableNo">
            <summary>
            DataTable No
            </summary>
        </member>
        <member name="P:Floware.PLC.X8.X8Group.NewWordInstance">
            <summary/>
        </member>
        <member name="P:Floware.PLC.X8.X8Group.NewBitInstance">
            <summary/>
        </member>
        <member name="T:Floware.PLC.X8.X8Manager">
            <summary/>
        </member>
        <member name="M:Floware.PLC.X8.X8Manager.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.X8.X8Manager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.X8.X8Manager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.X8.X8Manager.ToString">
            <summary/>
        </member>
        <member name="M:Floware.PLC.X8.X8Manager.Disconnect">
            <summary/>
        </member>
        <member name="P:Floware.PLC.X8.X8Manager.Config">
            <summary/>
        </member>
        <member name="P:Floware.PLC.X8.X8Manager.IsConnected">
            <summary/>
        </member>
        <member name="T:Floware.PLC.X8.X8TcpNet">
            <summary>
            Little endian
            </summary>
        </member>
        <member name="T:Floware.PLC.X8.X8WordBlock">
            <summary/>
        </member>
        <member name="M:Floware.PLC.X8.X8WordBlock.ToString">
            <summary/>
            <returns></returns>
        </member>
        <member name="T:Floware.PLC.XGT.XgtBitBlock">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XGT.XgtBitBlock.Encode">
            <summary/>
        </member>
        <member name="T:Floware.PLC.XGT.XgtConfig">
            <summary/>
        </member>
        <member name="M:Floware.PLC.XGT.XgtConfig.#ctor">
            <summary/>
        </member>
        <member name="T:Floware.PLC.XGT.XgtDevice">
            <summary/>
        </member>
        <member name="F:Floware.PLC.XGT.XgtDevice.D">
            <summary/>
        </member>
        <member name="F:Floware.PLC.XGT.XgtDevice.L">
            <summary/>
        </member>
        <member name="F:Floware.PLC.XGT.XgtDevice.M">
            <summary/>
        </member>
        <member name="M:Floware.PLC.XGT.XgtDevice.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XGT.XgtDevice.Code">
            <summary/>
        </member>
        <member name="T:Floware.PLC.XGT.XgtGroup">
            <summary/>
        </member>
        <member name="M:Floware.PLC.XGT.XgtGroup.AddBitBlock(Floware.PLC.Model.BitBlock)">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XGT.XgtGroup.NewWordInstance">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XGT.XgtGroup.NewBitInstance">
            <summary/>
        </member>
        <member name="T:Floware.PLC.XGT.XgtManager">
            <summary/>
        </member>
        <member name="M:Floware.PLC.XGT.XgtManager.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.XGT.XgtManager.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.XGT.XgtManager.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.XGT.XgtManager.Disconnect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.XGT.XgtManager.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XGT.XgtManager.Config">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XGT.XgtManager.IsConnected">
            <summary/>
        </member>
        <member name="M:Floware.PLC.XGT.XgtTcpNet.ReadArr(Floware.PLC.Model.Device,System.Int32,System.Int32)">
            <summary>
            point 2배를 읽은 byte가 return 된다.
            </summary>
        </member>
        <member name="T:Floware.PLC.XGT.XgtWordBlock">
            <summary/>
        </member>
        <member name="T:Floware.PLC.XLS.XlsBitBlock">
            <summary/>
        </member>
        <member name="T:Floware.PLC.XLS.XlsBlock">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsBlock.Addr">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsBlock.TagName">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsBlock.SubNo">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsBlock.SubText">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsBlock.CallbackOrder">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsBlock.SubObject">
            <summary/>
        </member>
        <member name="M:Floware.PLC.XLS.XlsBitBlock.Copy">
            <summary>
            deep copy
            </summary>
        </member>
        <member name="P:Floware.PLC.XLS.XlsBitBlock.BitIndex">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsBitBlock.AutoOff">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsBitBlock.MccBitOn">
            <summary/>
        </member>
        <member name="T:Floware.PLC.XLS.XlsWordBlock">
            <summary/>
        </member>
        <member name="M:Floware.PLC.XLS.XlsWordBlock.Copy">
            <summary>
            deep copy
            </summary>
        </member>
        <member name="P:Floware.PLC.XLS.XlsWordBlock.Point">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsWordBlock.Format">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsWordBlock.MultipleV">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsWordBlock.MultipleFormat">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsWordBlock.Watch">
            <summary/>
        </member>
        <member name="P:Floware.PLC.XLS.XlsWordBlock.BitType">
            <summary/>
        </member>
        <member name="P:Floware.PLC.FpcUtils.CurrTime">
            <summary>
            현재 시간을 이용하여 설비로 time set하는 기능
            <para>상위 시스템 동기화 후 함수 호출해야 함.</para>
            <para>yyyyMMddHHmmss</para>
            <para>각각 1 word씩 할당함.</para>
            <para>-</para>
            <para>WriteArray를 이용한다.</para>
            </summary>
        </member>
        <member name="T:Floware.PLC.MultiFpc">
            <summary/>
        </member>
        <member name="M:Floware.PLC.MultiFpc.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.PLC.MultiFpc.FakeBitChgd(Floware.PLC.Model.BitBlock)">
            <summary>
            Name이 기존 등록맵과 같을 경우 아래 값을 자동 등록한다.
            <para>Owner</para>
            <para>ConfigID</para>
            <para>KindE</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.MultiFpc.FakeWordChgd(Floware.PLC.Model.WordBlock)">
            <summary>
            Name이 기존 등록맵과 같을 경우 아래 값을 자동 등록한다.
            <para>Owner</para>
            <para>ConfigID</para>
            <para>KindE</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.MultiFpc.WriteBit(System.String,System.Boolean)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.MultiFpc.WriteWord(System.String,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.MultiFpc.WaitChgBit(System.String,System.Boolean,System.Int32)">
            <summary>
            Wait current thread until name's value equal exp in timeout.
            <para>Notify:true, timeout:false</para>
            <para>exp와 ReadBit 값이 같을 경우 true 및 정상진행</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.MultiFpc.WaitChgBits(System.Boolean,System.Int32,Floware.PLC.Model.BitBlock@,System.String[])">
            <summary>
            Wait current thread until name's value equal exp in timeout.
            <para>Notify:true, timeout:false</para>
            <para>exp와 names 의 상태는 반드시 반대여야 한다.</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.MultiFpc.WaitAllBits(System.Boolean,System.Int32,System.String[])">
            <summary>
            해당 bits가 모두 조건에 만족할때까지 대기
            <para>기존값이 exp와 같은 경우는 만족하는것에 포함한다.</para>
            <para>Notify:true, timeout:false</para>
            </summary>
        </member>
        <member name="M:Floware.PLC.MultiFpc.WaitChgWord(System.String,System.String,System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.MultiFpc.Add(Floware.PLC.PFManager)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.MultiFpc.Connect">
            <summary/>
        </member>
        <member name="M:Floware.PLC.MultiFpc.GetBitBlock(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.MultiFpc.GetWordBlock(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.MultiFpc.HasBitName(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.MultiFpc.HasWordName(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.MultiFpc.Enqueue(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.PLC.MultiFpc.ToString">
            <summary/>
        </member>
        <member name="P:Floware.PLC.MultiFpc.AddedBits">
            <summary/>
        </member>
        <member name="P:Floware.PLC.MultiFpc.AddedWords">
            <summary/>
        </member>
        <member name="P:Floware.PLC.MultiFpc.IsConnected">
            <summary>
            All connected
            </summary>
        </member>
        <member name="P:Floware.PLC.MultiFpc.Item(System.Int32)">
            <summary>
            PF Manager indexer
            </summary>
        </member>
        <member name="P:Floware.PLC.MultiFpc.AddedList">
            <summary>
            Added PFManager List
            </summary>
        </member>
        <member name="T:Floware.QO.QoChgdBit">
            <summary>
            <para>PLC, OPC BitChanged</para>
            <para>-</para>
            </summary>
        </member>
        <member name="T:Floware.QO.QueueObject">
            <summary>
            <para>-</para>
            </summary>
        </member>
        <member name="P:Floware.QO.QueueObject.Arg1">
            <summary>
            <para>-</para>
            </summary>
        </member>
        <member name="P:Floware.QO.QueueObject.Arg2">
            <summary>
            <para>-</para>
            </summary>
        </member>
        <member name="T:Floware.QO.QoChgdWord">
            <summary>
            <para>PLC, OPC WordChanged</para>
            <para>-</para>
            </summary>
        </member>
        <member name="T:Floware.QO.QoComm">
            <summary>
            <para>TCP, OPC Connected</para>
            <para>-</para>
            </summary>
        </member>
        <member name="T:Floware.QO.QoError">
            <summary>
            <para>SFManager OnErrorMessage</para>
            <para>OPC Exception</para>
            <para>-</para>
            </summary>
        </member>
        <member name="T:Floware.QO.QoLog">
            <summary>
            <para>Logging</para>
            <para>-</para>
            </summary>
        </member>
        <member name="T:Floware.QO.QoNotComm">
            <summary>
            <para>Disconnected</para>
            <para>-</para>
            </summary>
        </member>
        <member name="T:Floware.QO.QoRecd">
            <summary>
            <para>Msg 수신</para>
            <para>-</para>
            </summary>
        </member>
        <member name="T:Floware.QO.QoRecdUnk">
            <summary>
            <para>HSMS 전용, Unknown Msg 수신.</para>
            <para>-</para>
            </summary>
        </member>
        <member name="T:Floware.QO.QoTimeout">
            <summary>
            <para>SECSFlow, HSMS Timeout</para>
            <para>-</para>
            </summary>
        </member>
        <member name="T:Floware.QO.QoWrote">
            <summary>
            <para>PLC, HSMS, SECS, OPC Sent</para>
            <para>-</para>
            </summary>
        </member>
        <member name="T:Floware.Quartz.Simple.SimpleTimerTemplate">
            <summary>
            TimerTemplate가 어려우므로 쉽게 사용할 수 있는 Timer
            </summary>
        </member>
        <member name="M:Floware.Quartz.Simple.SimpleTimerTemplate.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Quartz.Simple.SimpleTimerTemplate.StartRepeat(System.Int32)">
            <summary>
            <para>주기적 반복 Timer</para>
            </summary>
            <param name="ms">milli-second</param>
        </member>
        <member name="M:Floware.Quartz.Simple.SimpleTimerTemplate.StartOnce(System.Int32)">
            <summary>
            
            </summary>
            <param name="ms"></param>
        </member>
        <member name="M:Floware.Quartz.Simple.SimpleTimerTemplate.Stop">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Quartz.Simple.SimpleTimerTemplate.StopAll">
            <summary>
            
            </summary>
        </member>
        <member name="E:Floware.Quartz.Simple.SimpleTimerTemplate.OnTimeout">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.Quartz.CbTimer">
            <summary>
            Method callback timer
            </summary>
        </member>
        <member name="M:Floware.Quartz.CbTimer.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.Quartz.CbTimer.Once(Floware.TAction,System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.Quartz.CbTimer.Repeat(Floware.TAction,System.Int32)">
            <summary>
            이전 Timer가 동작중이면 Stop로직이 이미 포함되어 있음.
            </summary>
        </member>
        <member name="M:Floware.Quartz.CbTimer.Stop">
            <summary/>
        </member>
        <member name="T:Floware.Quartz.QuartzUtils">
            <summary>
            <para>Quartz Lib 구현 class</para>
            <para>CronJob 특성때문에 화면 Thread로 변경하지 않는다.</para>
            <para>호출 메서드에서 에러가 발생하면 내부적으로 로깅하여 Exception이 발생하지 않는다.</para>
            <para>-</para>
            <para>초단위</para>
            <para>매초: * * * * * ?</para>
            <para>5초: 0/5 * * * * ?</para>
            <para>-</para>
            <para>분단위</para>
            <para>매분: 0 * * * * ?</para>
            <para>5분: 0 0/5 * * * ?</para>
            <para>-</para>
            <para>시간단위</para>
            <para>매시간: 0 0 * * * ?</para>
            <para>2시간: 0 0 0/2 * * ?</para>
            <para>-</para>
            <para>일단위</para>
            <para>매일 0시: 0 0 0 * * ?</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.Quartz.QuartzUtils.Init(System.Int32)">
            <summary>
            <para>Quartz Factoy 생성</para>
            </summary>
            <param name="threadcount"></param>
        </member>
        <member name="M:Floware.Quartz.QuartzUtils.GetExpnSecond(System.Int32)">
            <summary>
            <para>N 초마다 실행되는 expression</para>
            <para>예제: 5초주기 실행 GetExpnSecond(5)</para>
            <para>예제: 10초주기 실행 GetExpnSecond(10)</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.Quartz.QuartzUtils.GetExpnMinute(System.Int32)">
            <summary>
            <para>N 분마다 실행되는 expression: GetExpnMinute(10)</para>
            <para>예제: 5분주기 실행 GetExpnMinute(5)</para>
            <para>예제: 10분주기 실행 GetExpnMinute(10)</para>
            </summary>
            <param name="minute"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Quartz.QuartzUtils.GetExpnHour(System.Int32)">
            <summary>
            <para>N 시간마다 실행되는 expression</para>
            <para>예제: 1시간 실행 GetExpnHour(1)</para>
            <para>예제: 2시간 실행 GetExpnHour(2)</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.Quartz.QuartzUtils.GetExpnDay(System.Int32,System.Int32,System.Int32)">
            <summary>
            <para>매일 특정시간</para>
            <para>예제: 매일 1시 2분 3초에 실행 GetExpnDay(1,2,3)</para>
            <para>예제: 매일 밤 12시 실행 GetExpnDay(0,0,0)</para>
            </summary>
            <param name="hour"></param>
            <param name="minute"></param>
            <param name="second"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Quartz.QuartzUtils.Invoke(System.String,System.String,Floware.TAction)">
            <summary>
            <para>void 0 argement method를 수행한다.</para>
            <para>CronExpression을 변경하고 싶을 경우 jobName 동일하게 expression만 변경하면 된다.</para>
            </summary>
            <param name="jobName"></param>
            <param name="expression"></param>
            <param name="method"></param>
        </member>
        <member name="M:Floware.Quartz.QuartzUtils.Invoke(System.String,Quartz.Trigger,Floware.TAction)">
            <summary>
            <para>TriggerUtils를 이용하면 Trigger를 쉽게 만들수 있다.</para>
            <para>-</para>
            <para>예제: QuartzUtils.Invoke("2", TriggerUtils.MakeSecondlyTrigger(10), BBB);</para>
            </summary>
            <param name="jobName"></param>
            <param name="trigger"></param>
            <param name="method"></param>
        </member>
        <member name="M:Floware.Quartz.QuartzUtils.StopSchedule(System.String)">
            <summary>
            <para>Stop Schedule</para>
            </summary>
            <param name="jobName"></param>
            <returns></returns>
        </member>
        <member name="T:Floware.Quartz.TimeInvokeUtils">
            <summary>
            <para>Timer를 함수로 바로 mapping하여 사용할 경우</para>
            </summary>
        </member>
        <member name="M:Floware.Quartz.TimeInvokeUtils.InvokeOnce(System.Int32,Floware.TAction)">
            <summary>
            <para>한번만 호출됨</para>
            <para>두번째 delegate는 argument가 없는 void 함수명 입력</para>
            <para>e.g. TimerUtils.InvokeOnce(3000, InitHsms);</para>
            </summary>
            <param name="ms">milli-second</param>
            <param name="method">void () target</param>
        </member>
        <member name="M:Floware.Quartz.TimeInvokeUtils.InvokeRepeat(System.Int32,Floware.TAction)">
            <summary>
            <para>지속적인 호출, stop기능은 없다</para>
            <para>stop을 사용하려면 SimpleTimerTemplate, TimerTemplate를 사용함</para>
            <para>두번째 delegate는 argument가 없는 void 함수명 입력</para>
            <para>e.g. TimerUtils.InvokeRepeat(3000, InitHsms);</para>
            </summary>
            <param name="ms">milli-second</param>
            <param name="method"></param>
        </member>
        <member name="T:Floware.Quartz.TimerTemplate`2">
            <summary>
            
            </summary>
            <typeparam name="I"></typeparam>
            <typeparam name="A"></typeparam>
        </member>
        <member name="M:Floware.Quartz.TimerTemplate`2.HasId(`0)">
            <summary>
            Check prev timer has or not
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Quartz.TimerTemplate`2.StartOnce(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="interval"></param>
            <param name="id"></param>
        </member>
        <member name="M:Floware.Quartz.TimerTemplate`2.StartOnce(System.Int32,`0,`1)">
            <summary>
            
            </summary>
            <param name="interval"></param>
            <param name="id"></param>
            <param name="attachment"></param>
        </member>
        <member name="M:Floware.Quartz.TimerTemplate`2.StartRepeat(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="interval"></param>
            <param name="id"></param>
        </member>
        <member name="M:Floware.Quartz.TimerTemplate`2.StartRepeat(System.Int32,`0,`1)">
            <summary>
            
            </summary>
            <param name="interval"></param>
            <param name="id"></param>
            <param name="attachment"></param>
        </member>
        <member name="M:Floware.Quartz.TimerTemplate`2.GetAttachment(`0)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Quartz.TimerTemplate`2.Stop(`0)">
            <summary>
            
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Quartz.TimerTemplate`2.StopAll">
            <summary>
            Stop method가 map을 지우므로 사용하지 않고 dispose, clear처리.
            </summary>
        </member>
        <member name="M:Floware.Quartz.TimerTemplate`2.Dispose">
            <summary/>
        </member>
        <member name="E:Floware.Quartz.TimerTemplate`2.OnTimeout">
            <summary/>
        </member>
        <member name="T:Floware.Quartz.TimerTemplate`2.TimeoutDelegate">
            <summary/>
            <param name="id"></param>
            <param name="attachment"></param>
        </member>
        <member name="T:Floware.Quartz.TimerUtils">
            <summary/>
        </member>
        <member name="M:Floware.Quartz.TimerUtils.Repeat(System.Int32,Floware.TAction)">
            <summary/>
        </member>
        <member name="M:Floware.Quartz.TimerUtils.Once(System.Int32,Floware.TAction)">
            <summary/>
        </member>
        <member name="M:Floware.Quartz.TimerUtils.Once``1(System.Int32,Floware.TAction{``0},``0)">
            <summary/>
        </member>
        <member name="M:Floware.Quartz.TimerUtils.Once``2(System.Int32,Floware.TAction{``0,``1},``0,``1)">
            <summary/>
        </member>
        <member name="T:Floware.RFID.Ceyon.CeyonCommReader">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.RFID.Ceyon.CeyonReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.RFID.Ceyon.CeyonReader.GetErrorText(System.Byte)">
            <summary>
            <para>ack or nak를 이용하여 error msg를 추출한다.</para>
            </summary>
            <param name="code"></param>
            <returns>error string</returns>
        </member>
        <member name="M:Floware.RFID.Ceyon.CeyonCommReader.ChangeBinaryMode(System.Int32)">
            <summary>
            CAP1.3 -> CAP1.3S
            </summary>
            <param name="portNo"></param>
        </member>
        <member name="M:Floware.RFID.Ceyon.CeyonCommReader.Read(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            <para>온양, TSLED start:0, size:112</para>
            <para>연결 시도는 conn_timeout millisecond</para>
            <para>읽기 성공시 size만큼 data, 읽기 실패시 string.empty</para>
            <para>완료 후 자동 socket close</para>
            </summary>
            <param name="port">Tcp port(default:1470)</param>
            <param name="read_timeout">연결후 receive timeout 시간 millis-second</param>
            <param name="cmd">0x80 or 0x81, 0x82, 0x83 1번 channel read 0x80</param>
            <param name="start">start address</param>
            <param name="size">byte size</param>
            <param name="retry">retry 회수</param>
            <returns></returns>
        </member>
        <member name="T:Floware.RFID.Ceyon.CeyonTcpReader">
            <summary>
            CEYON RFID READ, WRITE class
            </summary>
        </member>
        <member name="M:Floware.RFID.Ceyon.CeyonTcpReader.ChangeBinaryMode(System.String,System.Int32)">
            <summary>
            CAP1.3 -> CAP1.3S
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
        </member>
        <member name="M:Floware.RFID.Ceyon.CeyonTcpReader.Read(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            <para>온양, TSLED start:0, size:112</para>
            <para>연결 시도는 conn_timeout millisecond</para>
            <para>읽기 성공시 size만큼 data, 읽기 실패시 string.empty</para>
            <para>완료 후 자동 socket close</para>
            </summary>
            <param name="ip">Tcp ip address</param>
            <param name="port">Tcp port(default:1470)</param>
            <param name="conn_timeout">connecting 시간 millis-second</param>
            <param name="read_timeout">연결후 receive timeout 시간 millis-second</param>
            <param name="cmd">0x80 or 0x81, 0x82, 0x83 1번 channel read 0x80</param>
            <param name="start">start address</param>
            <param name="size">byte size</param>
            <param name="retry">retry 회수</param>
            <returns></returns>
        </member>
        <member name="M:Floware.RFID.Ceyon.CeyonTcpReader.Write(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            <para>RFID Write</para>
            <para>완료 후 자동 socket close</para>
            </summary>
            <param name="ip"></param>
            <param name="port"></param>
            <param name="conn_timeout"></param>
            <param name="read_timeout"></param>
            <param name="cmd">0x90,0x91,0x92,0x93</param>
            <param name="w_start">Write start pos</param>
            <param name="w_data">Write data</param>
            <param name="retry"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.RFID.Ceyon.CeyonTcpReader.ReadAfterWrite(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            <para>Write를 하고 Read하는 함수</para>
            <para>완료 후 자동 socket close</para>
            </summary>
            <param name="ip">Tcp ipaddress</param>
            <param name="port">Tcp port(default:1470)</param>
            <param name="conn_timeout">연결시도 timeout ms</param>
            <param name="read_timeout">data 읽는 timeout ms</param>
            <param name="cmd">read channel 0x80, 0x81, 0x82, 0x83</param>
            <param name="w_start">write start address</param>
            <param name="w_data">write data:byte 단위, space padright해서 넣어야 함</param>
            <param name="r_start">read start address</param>
            <param name="r_size">read data size:byte 단위.</param>
            <param name="retry">retry count</param>
            <returns></returns>
        </member>
        <member name="M:Floware.RFID.Ceyon.CeyonTcpReader._writeReq(System.Int32,System.Int32,System.String)">
            <summary>
            <para>주어진 data를 RFID에 write한다.</para>
            <para>size만큼 padright를 해주는게 좋음.</para>
            </summary>
            <param name="cmd">0x90(1번 channel write), 0x91(2번 channel write)</param>
            <param name="start"></param>
            <param name="data"></param>
        </member>
        <member name="M:Floware.RFID.Ceyon.CeyonTcpReader._writeRep">
            <summary>
            <para>Write Response</para>
            <para>Ack: 06 01 90 03</para>
            <para>Nak: 15 01 90 xx 03</para>
            </summary>
        </member>
        <member name="T:Floware.RFID.LSIS.XCodeIsoReader">
             <summary>
            <para>Host control mode --> OpMode:1 (default)</para>
            <para>Hexa commType --> CommType:1 (only setting 필요)</para>
            <para></para>
            <para>CommDev --> RS232 경우 점퍼로만 세팅 가능</para>
            <para></para>
            <para>console 모드로 들어갈 경우 전원을 2-3초 후에 꼽아야 함.</para>
            <para>Config change --> reboot</para>
            <para></para>
             </summary>
        </member>
        <member name="T:Floware.SECSFlow.Compare.NameComparer">
            <summary>
            SECS editor name sorting compare
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Compare.NameComparer.Compare(Floware.SECSFlow.Core.Object.SFMessage,Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Floware.SECSFlow.Compare.SxFyComparer">
            <summary>
            SECS editor compare
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Compare.SxFyComparer.Compare(Floware.SECSFlow.Core.Object.SFMessage,Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            stream 기준 sort, function 기준 sort
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.AsciiFormat">
            <summary>
            <para>AsciiFormat</para>
            <para>FixedLength가 중요 인자이며 기본값은 false</para>
            <para>Length는 FixedLength가 true일때 유효함</para>
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.Format">
            <summary/>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.IFormat">
            <summary>
            IFormat
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.ISF">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ISF.Add(Floware.SECSFlow.Core.Object.IFormat)">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.ISF.Children">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.IFormat.Clone(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.IFormat.LogFormat">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.IFormat.IsWellKnown(Floware.SECSFlow.Core.Object.IFormat)">
            <summary>
            FindWellKnown에 대한 판별 여부
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.IFormat.Add(System.Int32,System.Int32,System.String,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.IFormat.Duplicate">
            <summary>
            복제
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.IFormat.DuplicateChildren(System.Int32)">
            <summary>
            Child node 전체를 duplicate
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.IFormat.GetByIndex(System.Int32[])">
            <summary>
            same as IFormat this[params int[] index] { get; }
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.IFormat.Insert(System.Int32,Floware.SECSFlow.Core.Object.IFormat)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.IFormat.RemoveChildren">
            <summary>
            RemoveChildren
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.IFormat.Replace(Floware.SECSFlow.Core.Object.IFormat,Floware.SECSFlow.Core.Object.IFormat)">
            <summary>
            Replace
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.IFormat.ReadNode(System.Xml.XmlNode)">
            <summary>
            SFM 파일의 xmlnode 읽기
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.Level">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.Length">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.IntValue">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.OriginIntValue">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.EnumValue">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.HasName">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.IsListFormat">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.IsAsciiFormat">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.IsFixedLength">
            <summary>
            <para>Def: true</para>
            <para>Def Ascii : false</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.Name">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.OrgName">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.OriginValue">
            <summary>
            Alias value 변환 이전값
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.TrimV">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.Value">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.StrictValue">
            <summary>
            FindWellKnown시 값 check로 추가 판단함.
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.Message">
            <summary>
            Format's owner SFMessage
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.FirstChild">
            <summary>
            First child
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.FirstList">
            <summary>
            First ListFormat
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.Parent">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.Item(System.Int32[])">
            <summary>
            Children index
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.Arrays">
            <summary>
            binary format을 위함으로 byte array를 바로 입출력
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.LogType">
            <summary>
            <para>A</para>
            <para>B</para>
            <para>BOOLEAN</para>
            <para>F4</para>
            <para>F8</para>
            <para>I1</para>
            <para>I2</para>
            <para>I4</para>
            <para>I8</para>
            <para>U1</para>
            <para>U2</para>
            <para>U4</para>
            <para>U8</para>
            <para>F4</para>
            <para>F8</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.IFormat.Comment">
            <summary/>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Format.LENGTH">
            <summary/>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Format.NAME">
            <summary/>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Format.FIXED">
            <summary/>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Format.VALUES">
            <summary/>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Format.ALIAS_VALUE">
            <summary/>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Format.STRICT_VALUE">
            <summary/>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Format.TAB">
            <summary/>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Format.NEWLINE">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.RemoveChildren">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.DuplicateChildren(System.Int32)">
            <summary>
            <para>List Variable Only</para>
            </summary>
            <param name="count"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.GetByIndex(System.Int32[])">
            <summary>
            index 로 Format 추출
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.getLowerLoopCountBetweenLengthAndSplits(System.String[])">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.Add(System.Int32,System.Int32,System.String,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.IsWellKnown(Floware.SECSFlow.Core.Object.IFormat)">
            <summary>
            well-known or not
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.CheckStrictValue(Floware.SECSFlow.Core.Object.IFormat)">
            <summary>
            값을 비교하여 WellKnown을 찾는다.
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.Add(Floware.SECSFlow.Core.Object.IFormat)">
            <summary>
            add Format
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.Insert(System.Int32,Floware.SECSFlow.Core.Object.IFormat)">
            <summary>
            insert Format
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.Duplicate">
            <summary>
            Format 복제 후 parent에 붙이기
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.Clone(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            deep copy and detatch
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.Detach(Floware.SECSFlow.Core.Object.IFormat)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.Replace(Floware.SECSFlow.Core.Object.IFormat,Floware.SECSFlow.Core.Object.IFormat)">
            <summary>
            replace origin을 newA로 
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.TreeString">
            <summary>
            <para>Format Logging String</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.Tab(System.Int32)">
            <summary>
            <para>Logging Level적용 Tab</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.LogFormat">
            <summary>
            Logging을 위한 함수
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.MakeXml(System.Xml.XmlDocument)">
            <summary>
            Editor를 이용하여 xml(SFM)저장을 위함.
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.MakeXml(System.Xml.XmlDocument,System.Boolean)">
            <summary>
            alias를 포함하여...
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Format.ReadNode(System.Xml.XmlNode)">
            <summary>
            xml node -> IFormat
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.Type">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.LogType">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.OrgName">
            <summary>
            duplicate children에 변형되지 않는 Name
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.StrictValue">
            <summary>
            FindWellKnown시 값 check로 추가 판단함.
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.Comment">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.Length">
            <summary>
            <para>data length</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.Arrays">
            <summary>
            <para>byte array</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.AliasValues">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.Message">
            <summary>
            <para>Owner Message</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.IsFixedLength">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.IntValue">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.EnumValue">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.IsListFormat">
            <summary>
            list or not
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.IsAsciiFormat">
            <summary>
            ascii or not
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.IsXFormat">
            <summary>
            any type or not
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.HasName">
            <summary>
            name exist or not
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.EncodingLength123">
            <summary>
            encoding length를 1 or 2 or 3 byte selection
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.EncodeAddedLengthType">
            <summary>
            <para>request byte length</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.EncodeFormatLength">
            <summary>
            <para>request length byte array</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.FirstChild">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.FirstList">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.Item(System.Int32[])">
            <summary>
            GetByIndex indexer
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.Children">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.Name">
            <summary>
            <para>Format Name</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.OriginIntValue">
            <summary>
            <para>OriginValue int convert</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.TrimV">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.OriginValue">
            <summary>
            Value Property Set을 이용한 입력값.
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.HasAlias">
            <summary>
            has alias or not
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.Value">
            <summary>
            <para>값은 string으로 입력</para>
            <para>여러개의 값은 space를 구분자로 "0 0 0" 같이 입력한다.</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.Parent">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Format.Level">
            <summary>
            <para>Tree Level</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.AsciiFormat.TYPE">
            <summary/>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.AsciiFormat.CharSet">
            <summary>
            <para>Ascii 타입의 다국어 처리할 경우.</para>
            <para>Def: Encoding.Default</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.AsciiFormat.#ctor">
            <summary>
            <para>length가 입력되지 않으므로 IsFixedLength가 false로 설정된다.</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.AsciiFormat.#ctor(System.String)">
            <summary>
            <para>length가 입력되지 않으므로 IsFixedLength가 false로 설정된다.</para>
            </summary>
            <param name="value">입력값</param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.AsciiFormat.#ctor(System.String,System.Int32)">
            <summary>
            <para>FixedLength:false</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.AsciiFormat.#ctor(System.String,System.String)">
            <summary>
            <para>length가 입력되지 않으므로 IsFixedLength가 false로 설정된다.</para>
            <para>FixedLength:false</para>
            </summary>
            <param name="name"></param>
            <param name="value">입력값</param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.AsciiFormat.#ctor(System.Int32,System.String,System.String)">
            <summary>
            <para>length 인자를 입력하므로 IsFixedLength가 true로 설정된다.</para>
            </summary>
            <param name="length"></param>
            <param name="name"></param>
            <param name="value">입력값</param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.AsciiFormat.#ctor(System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            <para>length 인자를 입력하므로 IsFixedLength가 true로 설정된다.</para>
            </summary>
            <param name="length"></param>
            <param name="name"></param>
            <param name="value">입력값</param>
            <param name="padLeft"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.AsciiFormat.CheckStrictValue(Floware.SECSFlow.Core.Object.IFormat)">
            <summary>
            Ascii는 Trim값을 비교한다.
            </summary>
            <param name="recd"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.AsciiFormat.IsWellKnown(Floware.SECSFlow.Core.Object.IFormat)">
            <summary/>
            <param name="recdF"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.AsciiFormat.TreeString">
            <summary/>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.AsciiFormat.Encode(Floware.Utils.MemoryBuffer)">
            <summary>
            alias 보존을 위해 Value = Value.pad... 이런 코드는 안됨
            </summary>
            <param name="mb"></param>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.AsciiFormat.Type">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.AsciiFormat.IsAsciiFormat">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.AsciiFormat.IntValue">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.AsciiFormat.Value">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.AsciiFormat.LogType">
            <summary/>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.BinaryFormat">
            <summary>
            <para>BinaryFormat</para>
            <para>FixedLength는 항상 true</para>
            <para>Length가 값보다 중요함.</para>
            <para>-</para>
            <para>Arrays를 활용하면 한번에 값을 넣을 수 있으며</para>
            <para>Arrays에 값을 입력할때 Length는 자동으로 변경된다.</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.BinaryFormat.TYPE">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.BinaryFormat.#ctor">
            <summary>
            <para>Length=1</para>
            <para>Default value=0</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.BinaryFormat.#ctor(System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value">BinaryFormat 값</param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.BinaryFormat.#ctor(System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.BinaryFormat.#ctor(System.String,System.Enum)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.BinaryFormat.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.BinaryFormat.BIG_LENGTH_KB">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.BinaryFormat.Decoding(System.Byte[],System.Int32)">
            <summary>
            stream to msg
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.BinaryFormat.TreeString">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.BinaryFormat.Type">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.BinaryFormat.LogType">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.BinaryFormat.Arrays">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.BinaryFormat.IsBigLength">
            <summary/>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.BooleanFormat">
            <summary>
            <para>BooleanFormat</para>
            <para>FixedLength는 항상 true</para>
            <para>Length가 Value보다 중요함.</para>
            <para>-</para>
            <para>true, false, -127~127까지 허용함</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.BooleanFormat.TYPE">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.BooleanFormat.#ctor">
            <summary>
            <para>Length=1</para>
            <para>Value=0, false</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.BooleanFormat.#ctor(System.Boolean)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.BooleanFormat.#ctor(System.String,System.Boolean)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.BooleanFormat.#ctor(System.Int32,System.String,System.Boolean)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="length"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.BooleanFormat.Type">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.BooleanFormat.LogType">
            <summary/>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.Float4Format">
            <summary>
            <para>FixedLength는 항상 true</para>
            <para>Length가 Value보다 중요함.</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Float4Format.TYPE">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float4Format.#ctor">
            <summary>
            <para>Length=1</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float4Format.#ctor(System.Single)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float4Format.#ctor(System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float4Format.#ctor(System.String)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float4Format.#ctor(System.String,System.Single)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float4Format.#ctor(System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float4Format.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Float4Format.Type">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Float4Format.LogType">
            <summary/>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.Float8Format">
            <summary>
            <para>FixedLength는 항상 true</para>
            <para>Length가 Value보다 중요함.</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Float8Format.TYPE">
            <summary>
            0x80
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float8Format.#ctor">
            <summary>
            <para>Length=1</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float8Format.#ctor(System.Double)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float8Format.#ctor(System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float8Format.#ctor(System.String)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float8Format.#ctor(System.String,System.Double)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float8Format.#ctor(System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Float8Format.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Float8Format.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Float8Format.LogType">
            <summary>
            F8
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.Int1Format">
            <summary>
            <para>FixedLength는 항상 true</para>
            <para>Length가 Value보다 중요함.</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Int1Format.TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int1Format.#ctor">
            <summary>
            <para>Length=1</para>
            <para>Value=0</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int1Format.#ctor(System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int1Format.#ctor(System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int1Format.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="length"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Int1Format.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Int1Format.LogType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.Int2Format">
            <summary>
            <para>FixedLength는 항상 true</para>
            <para>Length가 Value보다 중요함.</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Int2Format.TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int2Format.#ctor">
            <summary>
            <para>Length=1</para>
            <para>Value=0</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int2Format.#ctor(System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int2Format.#ctor(System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value">BinaryFormat 값</param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int2Format.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="length"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Int2Format.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Int2Format.LogType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.Int4Format">
            <summary>
            <para>FixedLength는 항상 true</para>
            <para>Length가 Value보다 중요함.</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Int4Format.TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int4Format.#ctor">
            <summary>
            <para>Length=1</para>
            <para>Value=0</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int4Format.#ctor(System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int4Format.#ctor(System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int4Format.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="length"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Int4Format.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Int4Format.LogType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.Int8Format">
            <summary>
            <para>FixedLength는 항상 true</para>
            <para>Length가 값보다 중요함.</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Int8Format.TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int8Format.#ctor">
            <summary>
            <para>Length=1</para>
            <para>Value=0</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int8Format.#ctor(System.Int64)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int8Format.#ctor(System.String,System.Int64)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Int8Format.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="length"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Int8Format.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Int8Format.LogType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.JisFormat">
            <summary/>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.JisFormat.TYPE">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.JisFormat.IsAsciiFormat">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.JisFormat.LogType">
            <summary/>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.ListFormat">
            <summary>
            <para>ListFormat</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.ListFormat.TYPE">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.#ctor(System.Int32)">
            <summary>
            <para>Name:Empty</para>
            <para>Fixed:True</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.#ctor(System.Int32,System.String)">
            <summary>
            <para>Fixed:True</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.#ctor(System.Int32,System.String,System.Boolean)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.MakeXml(System.Xml.XmlDocument)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.GetByIndex(System.Int32[])">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.MakeXml(System.Xml.XmlDocument,System.Boolean)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.Duplicate">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.Clone(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.Add(Floware.SECSFlow.Core.Object.IFormat)">
            <summary>
            <para>Length기준으로 Child 추가하며,</para>
            <para>1. Length만큼 추가되면 Parent로 위임.</para>
            <para>2. Child가 ListFormat이면 추가된 Child로 위임</para>
            </summary>
            <param name="format"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.CalcRecvLength(System.Byte[],System.Int32)">
            <summary>
            대량 List에 대해 Children memory size 최적화를 위해서 재정의 구현, 성능향상,
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.TreeString">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.IsWellKnown(Floware.SECSFlow.Core.Object.IFormat)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.CheckStrictValue(Floware.SECSFlow.Core.Object.IFormat)">
            <summary>
            List는 비교하지 않는다.
            </summary>
            <param name="recd"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.DuplicateChildren(System.Int32)">
            <summary>
            Count > 0 List variable child duplicate 후 List에 붙임.
            Count == 0 Children clear.
            </summary>
            <param name="count"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.LogFormat">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.ListFormat.ReadNode(System.Xml.XmlNode)">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.ListFormat.IsListFormat">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.ListFormat.Type">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.ListFormat.LogType">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.ListFormat.Value">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.ListFormat.IntValue">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.ListFormat.Level">
            <summary/>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.SFMessage">
            <summary>
            SECS msg library
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.SFMessage.TYPE">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.#ctor(System.Int32,System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.MakeXml(System.Xml.XmlDocument)">
            <summary>
            
            </summary>
            <param name="doc"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.GetByName(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.GetByIndex(System.Int32[])">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.MakeXml(System.Xml.XmlDocument,System.Boolean)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.Clone">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.IsWellKnown(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.CopyHeader">
            <summary>
            Array.Copy(this.Header, 0, bs, 0, 10);
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.LogFormat">
            <summary>
            SECS2 Logging Format
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.LogFormatSx1">
            <summary>
            LogFormat ByteArray
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.LogFormatAll">
            <summary>
            SECS2Logging + Binary Log Format
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.Add(System.Int32,System.Int32,System.String,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.CopyNames(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.CopyLinkedFormatName(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            SFMessage Copy Name or Alias Name
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.Add(Floware.SECSFlow.Core.Object.IFormat)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.ReadNode(System.Xml.XmlNode)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.Decoding">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.Encoding">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.SFMessage.ToString">
            <summary>
            SECS2
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Sx1SentBlockNo">
            <summary>
            <para>Interleaving을 위해 keep함</para>
            <para>송신중 master entity메시지 수신을 위함.</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.MsgKind">
            <summary>
            SFMessage 종류, Log 및 종류별로 다르게 행위를 해야 할 경우 사용가능.
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.UnkCode">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.ReqTimeout">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.LogLevel">
            <summary>
            0: Logging
            <para>1: Header Only</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.UseLongIdx">
            <summary>
            Duplicate children 시 Index 중복 문제 보완위해
            _를 추가하여 Name을 변경함.
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Body">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Header">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Correlation">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.TempList">
            <summary>
            <para>일시적으로 데이터 유지</para>
            <para>SendComplete에서 로그 및 기타 값을 이용하여 처리할 경우 대비.</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Id">
            <summary>
            SFConfig id
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.IsAutoReply">
            <summary>
            AutoReply or not
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.AliasNames">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Names">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Children">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.LinkFormatName">
            <summary>
            CEID값에 따라서 msg name을 변경하는 경우 link하는 format name을 정의
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Item(System.Int32[])">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Item(System.String,System.Int32[])">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Item(System.String)">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.NameIt">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.ChildIt">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.IsHsms">
            <summary>
            SECS-I or HSMS
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Length">
            <summary>
            byte 전체 length: Header.Length + Body.Length
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.DeviceId">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.IsAbortMessage">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Stream">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Function">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Systembyte">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.SType">
            <summary>
            SType을 setting하는 순간 Head0,1은 FF FF 로 변경된다.
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.IsSecondary">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.IsPrimary">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.IsControlMessage">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.IsLinkMessage">
            <summary>
            hsms linktest msg
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.IsWbit">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.CorrelationIntValue">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.CorrelationStringValue">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.HasCorrelation">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Correlation2">
            <summary>
            string type correlation
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.SxFx">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.Name">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.LogFormatHeader">
            <summary>
            Use LogHeader property
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.LogHeader">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.SxF0">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.SFMessage.S9Fy">
            <summary>
            S9F1,F3,F5,F7,F11,F13
            <para>S9F7의 경우 UnkCode를 먼저 세팅하고 S9Fy를 호출한다.</para>
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.SFTimeout">
            <summary>
            SFTimeout T1 = -1, T2 = -2, T3 = -3, T4 = -4, T5 = -5, T6 = -6, T7 = -7, T8 = -8, LINK = -100, UNKNOWN = 0
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.SFTimeout.T1">
            <summary>
            -1
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.SFTimeout.T2">
            <summary>
            -2
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.SFTimeout.T3">
            <summary>
            -3
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.SFTimeout.T4">
            <summary>
            -4
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.SFTimeout.T5">
            <summary>
            -5
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.SFTimeout.T6">
            <summary>
            -6
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.SFTimeout.T7">
            <summary>
            -7
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.SFTimeout.T8">
            <summary>
            -8
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.SFTimeout.LINK">
            <summary>
            -100
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.SFTimeout.UNKNOWN">
            <summary>
            0
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.Uint1Format">
            <summary>
            <para>FixedLength는 항상 true</para>
            <para>Length가 Value보다 중요함.</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Uint1Format.TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint1Format.#ctor">
            <summary>
            <para>Length=1</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint1Format.#ctor(System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint1Format.#ctor(System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint1Format.#ctor(System.String,System.Enum)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint1Format.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="length"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Uint1Format.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Uint1Format.LogType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.Uint2Format">
            <summary>
            <para>FixedLength는 항상 true</para>
            <para>Length가 Value보다 중요함.</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Uint2Format.TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint2Format.#ctor">
            <summary>
            <para>Length=1</para>
            <para>Value=0</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint2Format.#ctor(System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint2Format.#ctor(System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint2Format.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="length"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint2Format.#ctor(System.Int32,System.String,System.String)">
            <summary>
            <para>Length=n</para>
            </summary>
            <param name="length"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint2Format.#ctor(System.String,System.Enum)">
            <summary/>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Uint2Format.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Uint2Format.LogType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.Uint4Format">
            <summary>
            <para>FixedLength는 항상 true</para>
            <para>Length가 Value보다 중요함.</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Uint4Format.TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint4Format.#ctor">
            <summary>
            <para>Length=1</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint4Format.#ctor(System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint4Format.#ctor(System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint4Format.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="length"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Uint4Format.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Uint4Format.LogType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.Uint8Format">
            <summary>
            <para>FixedLength는 항상 true</para>
            <para>Length가 Value보다 중요함.</para>
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.Uint8Format.TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint8Format.#ctor">
            <summary>
            <para>Length=1</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint8Format.#ctor(System.Int64)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint8Format.#ctor(System.String,System.Int64)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.Uint8Format.#ctor(System.Int32,System.String,System.Int32)">
            <summary>
            <para>Length=1</para>
            </summary>
            <param name="length"></param>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Uint8Format.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.Uint8Format.LogType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Object.XFormat">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.Object.XFormat.TYPE">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Object.XFormat.IsWellKnown(Floware.SECSFlow.Core.Object.IFormat)">
            <summary>
            always true
            </summary>
            <param name="require"></param>
            <returns></returns>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.XFormat.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.XFormat.IsXFormat">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.Object.XFormat.LogType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Utils.Util">
            <summary>
            SECSFlow Util
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.Utils.FormatFactory">
            <summary>
            SECSFlow Format factory
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.Utils.FormatFactory.NewInstance(System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Utils.FormatFactory.NewInstance(System.String)">
            <summary>
            U1,U2,U4,U8...
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="T:Floware.SECSFlow.Core.Utils.MessageSupport">
            <summary/>
        </member>
        <member name="M:Floware.SECSFlow.Core.Utils.MessageSupport.MakeS9FX(System.Int32,Floware.SECSFlow.Core.Object.SFMessage)">
            <summary/>
        </member>
        <member name="T:Floware.SECSFlow.Core.SFManager">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.SECSFlow.Core.SFManager.lock1">
            <summary>
            <para>Lock 처리</para>
            <para>-</para>
            <para>GetDefinedMessage</para>
            <para>FindWellKnownMessage</para>
            <para>ReloadMessages</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.GetDefinedMessage(System.String)">
            <summary>
            <para>ReadMessages에서 SFMessage를 MsgName을 이용하여 추출</para>
            <para>Clone 값을 반환한다.</para>
            </summary>
            <param name="msgName"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.ReloadMessages(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.ClearReadMessages">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.ReadDefinedMessages(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.AddDefinedMessage(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.RemoveDefinedMessage(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.FindWellKnownMessage(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            
            </summary>
            <param name="msg"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.ComparedMessagesLogFormat(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            
            </summary>
            <param name="recd"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.Request(Floware.SECSFlow.Core.Object.SFMessage,System.Int32)">
            <summary>
            Request함수와 기능은 동일
            <para>aftermillis후에 상대편으로 송신한.</para>
            </summary>
            <param name="msg"></param>
            <param name="afterMillis"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.Request(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            systembyte가 0일 경우 자동 증가.
            <para>systembyte > 0 일 경우 systembyte를 이용한 송신</para>
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.ReqReply(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            <para>Sync방식, Primary and Wbit only</para>
            </summary>
            <param name="req"></param>
            <returns>NotConnected or Timeout일 경우 null</returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.ReqReply(Floware.SECSFlow.Core.Object.SFMessage,System.Int32)">
            <summary>
            
            </summary>
            <param name="req"></param>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.Reply(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.Open">
            <summary>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.Connect">
            <summary>
            Connect SECS or HSMS
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.Close">
            <summary>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.Disconnect">
            <summary>
            <para>객체 재사용 가능함, new 로 새로 생성하면 안됨</para>
            <para>기존 Thread를 pause해놓은 상태이므로 new로 생성하면 leak발생 가능함.</para>
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.S9F9(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            only equipment에서만 사용함.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager._OnErrorMessage(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            OnError로 queue push를 해서 app에서는 OnError event에서 send 여부 처리.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager.AssemblyVersion">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFManager._OnReadComplete(Floware.SECSFlow.Core.Object.SFMessage)">
            <summary>
            Factory class와 같이 존재하는 곳이 좋은것 같음.
            </summary>
            <param name="recd"></param>
        </member>
        <member name="E:Floware.SECSFlow.Core.SFManager.OnConnect">
            <summary>
            <para>arg1: ID</para>
            </summary>
        </member>
        <member name="E:Floware.SECSFlow.Core.SFManager.OnDisconnect">
            <summary>
            <para>arg1: ID</para>
            <para>arg2: Exception</para>
            </summary>
        </member>
        <member name="E:Floware.SECSFlow.Core.SFManager.OnLog">
            <summary>
            
            </summary>
        </member>
        <member name="E:Floware.SECSFlow.Core.SFManager.OnTimeout">
            <summary>
            <para>Arg1: SFTimeout</para>
            <para>Arg2: SFMessage</para>
            </summary>
        </member>
        <member name="E:Floware.SECSFlow.Core.SFManager.OnSendComplete">
            <summary>
            arg1: SFMessage
            </summary>
        </member>
        <member name="E:Floware.SECSFlow.Core.SFManager.OnReceive">
            <summary>
            arg1: SFMessage
            </summary>
        </member>
        <member name="E:Floware.SECSFlow.Core.SFManager.OnErrorMessage">
            <summary>
            arg1: SFMessage
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFManager.InvokeOrgThread">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFManager.GetReadStreamNumbers">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFManager.AutoReplies">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFManager.ComparedMessages">
            <summary>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFManager.IsConnected">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFManager.IsSpoolActiveState">
            <summary>
            
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFManager.LastCompare">
            <summary>
            LastCompare deplicated, Use ComparedMessages
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFManager.ReadMessages">
            <summary>
            <para>Key: MsgName</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFManager.Item(System.String)">
            <summary>
            
            </summary>
            <param name="msgName"></param>
            <returns></returns>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFManager.Config">
            <summary>
            SECS connection configutation
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFManager.IsOpened">
            <summary>
            SFManager open or not
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.SFManager.DelegateOnConnect">
            <summary>
            
            </summary>
            <param name="id"></param>
        </member>
        <member name="T:Floware.SECSFlow.Core.SFManager.DelegateOnDisconnect">
            <summary>
            
            </summary>
            <param name="id"></param>
            <param name="e"></param>
        </member>
        <member name="T:Floware.SECSFlow.Core.SFManager.DelegateOnLog">
            <summary>
            
            </summary>
            <param name="log"></param>
        </member>
        <member name="T:Floware.SECSFlow.Core.SFManager.DelegateOnTimeout">
            <summary>
            
            </summary>
            <param name="timeout"></param>
            <param name="msg"></param>
        </member>
        <member name="T:Floware.SECSFlow.Core.SFManager.DelegateOnMessage">
            <summary>
            
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:Floware.SECSFlow.Core.SECS">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core.SFConfig">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFConfig.#ctor">
            <summary>
            SECS, HSMS Config
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core.SFConfig.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.IsHideLogLink">
            <summary>
            OnLog event에 linktest logging을 없애기 위한 option
            default false;
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.IsAutoS9FX">
            <summary>
            Use SFManager OnErrorMessage
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.IpAddress">
            <summary>
            HSMS IP
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.Port">
            <summary>
            HSMS Port
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.DeviceId">
            <summary>
            <para>SECS-I, HSMS Device ID</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.BaudRate">
            <summary>
            <para>SECS-I BaudRate</para>
            <para>-</para>
            <para>2400</para>
            <para>4800</para>
            <para>7200</para>
            <para>9600</para>
            <para>14400</para>
            <para>19200</para>
            <para>38400</para>
            <para>57600</para>
            <para>115200</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.Id">
            <summary>
            connection id
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.IsHsms">
            <summary>
            HSMS or Not
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.IsSecsHost">
            <summary>
            SECS-I Master or Slave Mode
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.IsMaster">
            <summary>
            <para>SECS-I, Collision발생시 우선 송신 순위</para>
            <para>Default(false)</para>
            <para>설비 Master</para>
            <para>Host Slave(false)</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.RetryCount">
            <summary>
            SECS-I Retry Count
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.CommPort">
            <summary>
            <para>SECS-I Comm Port Name</para>
            <para>Default: COM1</para>
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.IsActive">
            <summary>
            HSMS Active or Passive
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.Timeout1">
            <summary>
            0-240
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.Timeout2">
            <summary>
            0-240
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.Timeout3">
            <summary>
            0-240
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.Timeout4">
            <summary>
            0-240
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.Timeout5">
            <summary>
            0-240
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.Timeout6">
            <summary>
            0-240
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.Timeout7">
            <summary>
            0-240
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.Timeout8">
            <summary>
            0-240
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.TimeoutLink">
            <summary>
            0-480
            </summary>
        </member>
        <member name="P:Floware.SECSFlow.Core.SFConfig.MaxTimeOutMillis">
            <summary>
            <para>Link + T6</para>
            <para>Link 0일 경우 -1</para>
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core._Hsms">
            <summary>
            Timer를 빼고 Thread로 바꿨음 2013.04
            나머지는 HsmsMaxTimeout으로 처리가 된다.
            </summary>
        </member>
        <member name="M:Floware.SECSFlow.Core._Hsms.HsmsTryConnect">
            <summary>
            <para>한번 연결 시도</para>
            </summary>
        </member>
        <member name="T:Floware.SECSFlow.Core._Secs1">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.Spring.Context.AppContextXmlFile">
            <summary>
            <para>XmlApplicationContext wrapper class</para>
            </summary>
        </member>
        <member name="M:Floware.Spring.Context.AppContextXmlFile.#ctor">
            <summary>
            <para>StaticApplicationContext를 만든다.</para>
            </summary>
        </member>
        <member name="M:Floware.Spring.Context.AppContextXmlFile.#ctor(System.String[])">
            <summary>
            <para>spring config파일들 목록</para>
            </summary>
        </member>
        <member name="M:Floware.Spring.Context.AppContextXmlFile.MakeDbProvider(System.String,System.String,System.String)">
            <summary>
            <para>DB연결을 spring config에서 독립하기 위함.</para>
            <para>objName으로 자동 등록된다.</para>
            <para>DbProvider를 만들고 AppendConfig를 이용하여 추가 config파일을 로딩한다.</para>
            </summary>
        </member>
        <member name="M:Floware.Spring.Context.AppContextXmlFile.AppendConfig(System.String[])">
            <summary>
            <para>추가적인 config를 ObjectFactory에 loading</para>
            </summary>
        </member>
        <member name="M:Floware.Spring.Context.AppContextXmlFile.GetObject``1(System.String)">
            <summary>
            GetObject
            </summary>
        </member>
        <member name="M:Floware.Spring.Context.AppContextXmlFile.GetObjectNamesForType(System.Type)">
            <summary>
            GetObjectNamesForType
            </summary>
        </member>
        <member name="M:Floware.Spring.Context.AppContextXmlFile.GetObjectsOfType(System.Type)">
            <summary>
            <para>Type으로 instance dictionary 가져옴</para>
            <para>foreach (DictionaryEntry iter in objList)</para>
            <para>object oneObj = iter.Value;</para>
            </summary>
        </member>
        <member name="M:Floware.Spring.Context.AppContextXmlFile.RegisterSingleton(System.String,System.Object)">
            <summary>
            Register Singleton Object
            </summary>
        </member>
        <member name="P:Floware.Spring.Context.AppContextXmlFile.ApplicationContext">
            <summary>
            <para>spring ApplicationContext</para>
            </summary>
        </member>
        <member name="P:Floware.Spring.Context.AppContextXmlFile.Item(System.String)">
            <summary>
            GetObject Indexer
            </summary>
        </member>
        <member name="T:Floware.Spring.DbCtxV2">
            <summary>
            Spring config with Easy DB Access
            </summary>
        </member>
        <member name="M:Floware.Spring.DbCtxV2.Nothing(System.String)">
            <summary>
            DB를 Config파일에 정의한 경우
            </summary>
        </member>
        <member name="M:Floware.Spring.DbCtxV2.SQLite(System.String,Floware.SQL.SQLiteComm)">
            <summary>
            <para>spring config, SQLite path</para>
            </summary>
        </member>
        <member name="M:Floware.Spring.DbCtxV2.MySql(System.String,Floware.SQL.MySqlComm)">
            <summary>
            <para>spring config, MySql 연결정보.</para>
            </summary>
        </member>
        <member name="P:Floware.Spring.DbCtxV2.Item(System.String)">
            <summary/>
        </member>
        <member name="T:Floware.Spring.SpringUtils">
            <summary>
            Spring framework utils
            </summary>
        </member>
        <member name="M:Floware.Spring.SpringUtils.AddDbProviderResource">
            <summary>
            <para>DbProviderFactory.DBPROVIDER_ADDITIONAL_RESOURCE_NAME = "assembly://Floware4/Floware/db-provider.xml";</para>
            </summary>
        </member>
        <member name="M:Floware.Spring.SpringUtils.MakeDp(System.String,System.String)">
            <summary>
            코드를 이용한 DbProvider 생성.
            </summary>
        </member>
        <member name="M:Floware.Spring.SpringUtils.MakeTM(Spring.Data.Common.IDbProvider)">
            <summary>
            코드를 이용한 TransactionManager 생성.
            </summary>
        </member>
        <member name="M:Floware.Spring.SpringUtils.MakeDpDevart(System.String)">
            <summary>
            Oracle Devart db provider 생성
            </summary>
        </member>
        <member name="M:Floware.Spring.SpringUtils.HibSQLite(Floware.Spring.Context.AppContextXmlFile,System.String,System.String[])">
            <summary>
            <para>SQLite hibernate config 생성.</para>
            <para>-</para>
            <para>object id</para>
            <para>DbProvider: dp0</para>
            <para>SessionFactory: sf0</para>
            <para>HibernateTemplate: ht0</para>
            <para>NativeSqlSupport: nss0</para>
            </summary>
        </member>
        <member name="M:Floware.Spring.SpringUtils.HibDevart10g(Floware.Spring.Context.AppContextXmlFile,System.String,System.String[])">
            <summary>
            <para>Oracle devart hibernate config 생성.</para>
            <para>-</para>
            <para>object id</para>
            <para>DbProvider: dp0</para>
            <para>SessionFactory: sf0</para>
            <para>HibernateTemplate: ht0</para>
            <para>NativeSqlSupport: nss0</para>
            </summary>
        </member>
        <member name="M:Floware.Spring.SpringUtils.HibMySQL5(Floware.Spring.Context.AppContextXmlFile,System.String,System.String[])">
            <summary>
            <para>MySQL5 hibernate config 생성.</para>
            <para>-</para>
            <para>object id</para>
            <para>DbProvider: dp0</para>
            <para>SessionFactory: sf0</para>
            <para>HibernateTemplate: ht0</para>
            <para>NativeSqlSupport: nss0</para>
            </summary>
        </member>
        <member name="M:Floware.Spring.SpringUtils.HibMsSql2005(Floware.Spring.Context.AppContextXmlFile,System.String,System.String[])">
            <summary>
            <para>MySQL5 hibernate config 생성.</para>
            <para>-</para>
            <para>object id</para>
            <para>DbProvider: dp0</para>
            <para>SessionFactory: sf0</para>
            <para>HibernateTemplate: ht0</para>
            <para>NativeSqlSupport: nss0</para>
            </summary>
        </member>
        <member name="M:Floware.Spring.SpringUtils.GetObject``1(System.String)">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="objID"></param>
            <returns></returns>
        </member>
        <member name="P:Floware.Spring.SpringUtils.RebuildDB">
            <summary>
            Hibernate DB 생성 Option.
            </summary>
        </member>
        <member name="T:Floware.SQL.NssComm">
            <summary/>
        </member>
        <member name="M:Floware.SQL.NssComm.#ctor">
            <summary/>
        </member>
        <member name="P:Floware.SQL.NssComm.Charset">
            <summary/>
        </member>
        <member name="P:Floware.SQL.NssComm.ObjName">
            <summary/>
        </member>
        <member name="T:Floware.SQL.SQLiteComm">
            <summary>
            SQLite 연결
            </summary>
        </member>
        <member name="M:Floware.SQL.SQLiteComm.#ctor">
            <summary/>
        </member>
        <member name="P:Floware.SQL.SQLiteComm.Path">
            <summary>
            DB 파일 경로
            </summary>
        </member>
        <member name="P:Floware.SQL.SQLiteComm.JournalMode">
            <summary>
            def: off
            </summary>
        </member>
        <member name="P:Floware.SQL.SQLiteComm.Pooling">
            <summary>
            def: 1 (true)
            </summary>
        </member>
        <member name="P:Floware.SQL.SQLiteComm.Synchronous">
            <summary>
            def: 0 (off);
            </summary>
        </member>
        <member name="T:Floware.SQL.MySqlComm">
            <summary>
            MySql 연결정보.
            <para>Server=localhost;Port=3306;Database=xxx;Uid=x xx;Pwd=xxxx;CHARSET=utf8;</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.MySqlComm.#ctor">
            <summary/>
        </member>
        <member name="P:Floware.SQL.MySqlComm.Ip">
            <summary/>
        </member>
        <member name="P:Floware.SQL.MySqlComm.PortNo">
            <summary>
            def: 3306
            </summary>
        </member>
        <member name="P:Floware.SQL.MySqlComm.DbName">
            <summary/>
        </member>
        <member name="P:Floware.SQL.MySqlComm.User">
            <summary/>
        </member>
        <member name="P:Floware.SQL.MySqlComm.Pwd">
            <summary/>
        </member>
        <member name="T:Floware.SQL.DbType">
            <summary/>
        </member>
        <member name="F:Floware.SQL.DbType.SQLite">
            <summary/>
        </member>
        <member name="F:Floware.SQL.DbType.MySQL">
            <summary/>
        </member>
        <member name="F:Floware.SQL.DbType.SqlServer">
            <summary/>
        </member>
        <member name="F:Floware.SQL.DbType.Oracle">
            <summary/>
        </member>
        <member name="F:Floware.SQL.DbType.DB2">
            <summary>
            Date는 Timestamp를 사용한다
            <para>boolean type이 존재하지 않는다</para>
            </summary>
        </member>
        <member name="T:Floware.SQL.NativeSqlSupport">
            <summary>
            <para>native sql query 지원.</para>
            <para>-</para>
            <para>DoTrx</para>
            <para>-</para>
            <para>parameter prefix</para>
            <para>MySQL  -> @p0, @p1 / ?지원</para>
            <para>SQLite -> :p0, :p1 / ?지원</para>
            <para>Oracle -> :p0, :p1</para>
            <para>Mssql  -> @p0, @p1</para>
            <para>DB2    -> @p0, @p1</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.#ctor">
            <summary>
            <para>Constructor</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.BeginTrx">
            <summary>
            함수 호출후 반드시 Commit or Rollback을 호출해야 한다.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.Commit(Floware.SQL.NssTrx)">
            <summary/>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.Rollback(Floware.SQL.NssTrx)">
            <summary>
            Rollback의 경우 코드 감소하기 위해 nt가 null일 경우 수행하지 않음.
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.DoTrx(Floware.TAction)">
            <summary>
            Transaction Method
            <para>Method를 Transacton화 하여 처리한다.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.DoTrx``1(Floware.TAction{``0},``0)">
            <summary>
            Transaction Method
            <para>Method를 Transacton화 하여 처리한다.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.DoTrx``2(Floware.TAction{``0,``1},``0,``1)">
            <summary>
            Transaction Method
            <para>Method를 Transacton화 하여 처리한다.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.DoTrx``3(Floware.TAction{``0,``1,``2},``0,``1,``2)">
            <summary>
            Transaction Method
            <para>Method를 Transacton화 하여 처리한다.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.DoTrx``4(Floware.TAction{``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            Transaction Method
            <para>Method를 Transacton화 하여 처리한다.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.TableChk(System.String)">
            <summary>
            NssModel과 Table column 누락 비교.
            <para>Assembly Name을 이용하여 Assembly 전체를 검사한다.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.TableAdd(System.Type)">
            <summary>
            Table 생성
            <para>TableIndex 설정</para>
            <para>MySQL의 경우 Paritition 생성</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.TableAlter(System.Type)">
            <summary>
            Alter add column
            <para>TableIndex 설정</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.BulkUpdate(System.String,System.Object[])">
            <summary>
            AdoTemplate sql update, delete
            </summary>
            <returns>update count</returns>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.GetT``1(System.String,System.Object[])">
            <summary>
            Get by sql
            <para>QueryForObject V2</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.QueryForObject``1(System.String,System.Object[])">
            <summary>
            <para>-</para>
            <para>Internal ObjPropRowMapper를 이용함.</para>
            <para>데이터가 없거나, 1개 이상이면 Exception 발생함.</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.QueryForObject``1(System.String,Spring.Data.Generic.IRowMapper{``0},System.Object[])">
            <summary>
            <para>-</para>
            <para>1개의 데이터 읽어와서 mapping</para>
            <para>데이터가 없거나, 1개 이상이면 Exception 발생함.</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.QueryForList``1(System.String,System.Object[])">
            <summary>
            <para>-</para>
            <para>Table join 및 native sql query를 이용하여 data mapping시 사용함.</para>
            <para>Internal ObjPropRowMapper를 이용하므로 별도의 MappingClass 만들 필요 없음.</para>
            <para>e.g) IList&lt;T&gt; list = QueryForList&lt;T&gt;(sql, args)</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.ListT``1(System.String,System.Object[])">
            <summary>
            Linq 활용도를 높이기 위함 List return 함수.
            <para>QueryForList 신규버전</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.ListT``1">
            <summary>
            <para>!! NssModel만 사용가능.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.QueryForList``1(System.String,Spring.Data.Generic.IRowMapper{``0},System.Object[])">
            <summary>
            <para>-</para>
            <para>Table join 및 native sql query를 이용하여 data mapping시 사용함.</para>
            <para>e.g) IList&lt;T&gt; list = QueryForList(sql, new XxxRowMapper(), args)</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.QueryForInt(System.String,System.Object[])">
            <summary>
            <para>-</para>
            <para>Count 정보 가져오기 등에 사용함.</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.QueryForNestedKvList``1(System.String,System.Object[])">
            <summary>
            <para>Query for key value list</para>
            <para>Column이 너무 많아서 RowMapper를 사용하기 힘든 경우.</para>
            <para>Column name, value를 가진 Dictinary List 추출.</para>
            <para>-</para>
            <para>Key:column name</para>
            <para>Value: object type column value</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.QueryForNestedList``1(System.String,System.Object[])">
            <summary>
            <para>-</para>
            <para>Column이 너무 많아서 RowMapper를 사용하기 힘든 경우.</para>
            <para>Value만을 가진 List List 추출.</para>
            <para>-</para>
            <para>DataType은 object.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.QueryFor1Column``1(System.String,System.Object[])">
            <summary>
            1개 column만 가져오기.
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.BulkSave(System.Object)">
            <summary>
            <para>class name과 property를 이용하여 sql insert를 수행함.</para>
            <para>PrefixDialect값을 DB에 다르게 세팅해야함, default ':'</para>
            <para>insert into table (field1, field2,...) values (:p0,:p1,...)</para>
            </summary>
            <returns>update count</returns>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.BulkSave(System.Object,System.String)">
            <summary>
            <para>property를 이용하여 sql insert를 수행함.</para>
            <para>public property만 실행됨.</para>
            <para>virtual property, Interface를 상속받은 Property는 제외된다.</para>
            </summary>
            <returns>update count</returns>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.ChgT(System.Object)">
            <summary>
            <para>!! NssModel만 사용가능.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.ChgK(System.Type,System.Object,System.Object,System.String)">
            <summary>
            Only 1개 column 값 변경.
            <para>!! NssModel만 사용가능.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.GetK``1(System.Object)">
            <summary>
            NssModel
            <para>Get by Key</para>
            <para>!! NssModel만 사용가능.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.DelK(System.Type,System.Object)">
            <summary>
            NssModel
            <para>Del by Key</para>
            <para>!! NssModel만 사용가능.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.HasK(System.Type,System.Object)">
            <summary>
            NssModel
            <para>Has by Key</para>
            <para>!! NssModel만 사용가능.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NativeSqlSupport.AddT(System.Object)">
            <summary>
            <para>!! NssModel만 사용가능.</para>
            </summary>
        </member>
        <member name="P:Floware.SQL.NativeSqlSupport.DefValue">
            <summary>
            <para>DB not null시 default value</para>
            <para>string type에만 적용된다.</para>
            <para>BulkSave에서만 동작한다.</para>
            </summary>
        </member>
        <member name="P:Floware.SQL.NativeSqlSupport.TM">
            <summary>
            Transaction Manager
            </summary>
        </member>
        <member name="P:Floware.SQL.NativeSqlSupport.Dialect">
            <summary>
            <para>parameter prefix</para>
            <para>SQLite -> :p0, :p1 / ?지원</para>
            <para>Oracle -> :p0, :p1</para>
            <para>MySQL  -> @p0, @p1 / ?지원</para>
            <para>Mssql  -> @p0, @p1</para>
            <para>DB2    -> @p0, @p1</para>
            </summary>
        </member>
        <member name="P:Floware.SQL.NativeSqlSupport.Timeout">
            <summary>
            <para>Query, Update timeout</para>
            <para>Unit:Seconds</para>
            </summary>
        </member>
        <member name="T:Floware.SQL.NssModel">
            <summary>
            Nss Model
            </summary>
        </member>
        <member name="P:Floware.SQL.NssModel.Table">
            <summary/>
        </member>
        <member name="P:Floware.SQL.NssModel.Key">
            <summary>
            PK
            <para>Case-sensitive</para>
            </summary>
        </member>
        <member name="P:Floware.SQL.NssModel.Partition">
            <summary>
            <para>MySQL</para>
            <para>PK가 없어야 한다</para>
            <para>Case-sensitive</para>
            <para>-</para>
            <para>Query: SQL_SELECT + string.Format("WHERE PID IN({0})", NssUtils.InMonth(from, to))</para>
            <para>-</para>
            <para>Truncate</para>
            <para>ALTER TABLE Table TRUNCATE PARTITION p1~12</para>
            </summary>
        </member>
        <member name="P:Floware.SQL.NssModel.SeqNo">
            <summary>
            <para>Row sequence 자동 적용</para>
            <para>Case-sensitive</para>
            <para>Table 생성, Alter에서 적용됨</para>
            <para>-</para>
            <para>MySQL</para>
            <para>AutoIncrement</para>
            <para>MySQL의 PK가 존재할 경우 기본 select는 pk 기준이 되어 이를 보정하기 위한 order by 조건</para>
            <para>-</para>
            <para>Oracle</para>
            <para>sequence 자동 생성: SEQ_TableName_SeqNo</para>
            <para>BulkSave의 NEXTVAL에 의한 자동증가</para>
            <para>-</para>
            <para>SqlServer</para>
            <para>IDENTITY에 의한 자동증가</para>
            </summary>
        </member>
        <member name="T:Floware.SQL.NssIndex">
            <summary>
            Nss Model Index
            </summary>
        </member>
        <member name="T:Floware.SQL.NssTemplate`1">
            <summary>
            <para>Nss Dao V2</para>
            <para>AddN: INSERT</para>
            <para>ChgN: UPDATE</para>
            <para>DelN: DELETE</para>
            <para>ListN: SELECT</para>
            <para>HasN</para>
            <para>-</para>
            <para>All</para>
            <para>SqlN (Insert, Update, Delete, Count)</para>
            </summary>
        </member>
        <member name="F:Floware.SQL.NssTemplate`1.logger">
            <summary/>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.HasN(System.Object)">
            <summary>
            Key를 이용한 Row 존재 여부 체크.
            <para>SELECT COUNT를 이용하므로 DB full scan을 함.</para>
            <para>-</para>
            <para>Exception 발생할 가능성이 많은 경우 HasN이 성능상 좋으며</para>
            <para>Exception 가능성이 적으며 row가 많을 경우 GetN의 null 체크가 더 나을수 있음.</para>
            </summary>
            <param name="key">Where조건</param>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.HasN(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Lambda 조건을 이용한 Query
            </summary>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.CntN(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Count
            <para>where null: all count</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.GetN(System.Object)">
            <summary>
            <para>PK를 이용한 Get, Indexer 함수 사용 권장.</para>
            <para>-</para>
            <para>PK get을 Join등의 custom code를 위해 virtual로 선언함.</para>
            </summary>
            <param name="key">Where조건</param>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.GetSqlN(System.String,System.Object[])">
            <summary>
            <para>Query 문을 이용하여 1개 객체 가져오기.</para>
            <para>Exception이 발생할 경우 null 반환.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.ChgN(`0)">
            <summary>
            Object Property 전체 Update
            <para>Nss,Key가 세팅되어 있어야함</para>
            </summary>
            <returns>변경된 row 수</returns>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.ChgN(System.Object,System.Object,System.String)">
            <summary>
            <para>해당 column의 값 변경함.</para>
            <para>1. pk를 이용한 Column 값 변경.</para>
            <para>2. pk가 null일 경우, key field가 없어도 되며 전체 column의 값을 변경한다.</para>
            </summary>
            <returns>변경된 row 수</returns>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.ChgAllValue(System.String,System.Object)">
            <summary>
            <para>해당 column의 값을 전체 변경함.</para>
            <para>Where조건이 없음</para>
            </summary>
            <returns>변경된 row 수</returns>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.ChgN(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.String,System.Object)">
            <summary>
            <para>column(name) update value</para>
            <para>where null 경우 전체 update</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.ChgN(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{System.Object}}[])">
            <summary>
            xx.ChgN(where condition, ()=> obj.Prop, ()=> obj.Prop2);
            <para>pk없어도 가능함, condition 조건으로 수행</para>
            <para>where조건으로 null입력하여 무시할 수 있음.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.AddN(`0)">
            <summary>
            <para>vitual property를 제외한 public property 값을 이용하여 row add</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.AddN(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            1 Trx Add All
            </summary>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.ListN(System.String,System.Object[])">
            <summary>
            ListT와 다른점 T 입력이 필요없음.
            <para>NssModel일 경우만 사용가능.</para>
            <para>string, int List는 Nss.ListT를 사용해야 함.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.GetN(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Lambda 조건을 이용한 Query
            </summary>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.ListN(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Lambda 조건을 이용한 Query
            </summary>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.DelN(System.Object)">
            <summary>
            Delete by key
            </summary>
            <param name="key">Where조건</param>
            <returns>삭제된 row 수</returns>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.DelN(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Lambda 조건을 이용한 Query
            <para>where가 null일 경우 전체 삭제</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.SqlN(System.String,System.Object[])">
            <summary>
            <para>Insert, Update, Delete 구문 수행.</para>
            <para>Select는 Count만 처리가능함.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NssTemplate`1.Copy(System.Object)">
            <summary>
            History 저장 용도에서 사용함.
            <para>T instance를 만들어서 src property 값을 복제함.</para>
            </summary>
        </member>
        <member name="P:Floware.SQL.NssTemplate`1.Nss">
            <summary/>
        </member>
        <member name="P:Floware.SQL.NssTemplate`1.ModelN">
            <summary>
            NssModel Attribute 정보
            </summary>
        </member>
        <member name="P:Floware.SQL.NssTemplate`1.NewT">
            <summary>
            New Instance
            </summary>
        </member>
        <member name="P:Floware.SQL.NssTemplate`1.Dialect">
            <summary>
            DB 별 다른 dialect
            </summary>
        </member>
        <member name="P:Floware.SQL.NssTemplate`1.SQL_SELECT">
            <summary>
            SELECT * FROM table_name
            </summary>
        </member>
        <member name="P:Floware.SQL.NssTemplate`1.SQL_COUNT">
            <summary>
            SELECT COUNT(*) FROM table_name
            </summary>
        </member>
        <member name="P:Floware.SQL.NssTemplate`1.SQL_UPDATE">
            <summary>
            UPDATE table_name SET 
            </summary>
        </member>
        <member name="P:Floware.SQL.NssTemplate`1.SQL_DELETE">
            <summary>
            DELETE FROM table_name
            </summary>
        </member>
        <member name="P:Floware.SQL.NssTemplate`1.Item(System.Object)">
            <summary>
            <para>Key를 이용한 GetN 함수 Indexer</para>
            <para>-</para>
            <para>virtual을 사용하기 위해서는 GetN 함수를 override 해야 함.</para>
            </summary>
            <param name="key">Where조건</param>
        </member>
        <member name="P:Floware.SQL.NssTemplate`1.All">
            <summary>
            <para>Table 전체 List 가져옴, Row 갯수 1000개 미만 권장.</para>
            <para>-</para>
            <para>SQLite: DB에 생성된 순서로 row를 추출한다.</para>
            <para>-</para>
            <para>MySQL</para>
            <para>Non-PK: DB에 생성된 순서대로 추출됨</para>
            <para>-</para>
            <para>PK존재</para>
            <para>PK의 order로 추출됨, Linq OrderBy, ThenBy를 사용해야 함.</para>
            <para>1. NssSeqNo column을 만들어 사용</para>
            </summary>
        </member>
        <member name="T:Floware.SQL.NssTrx">
            <summary>
            <para>NativeSqlSupport의 DB transaction status object</para>
            </summary>
        </member>
        <member name="P:Floware.SQL.NssTrx.ITS">
            <summary>
            <para>Spring's ITransactionStatus</para>
            </summary>
        </member>
        <member name="T:Floware.SQL.NssUtils">
            <summary/>
        </member>
        <member name="M:Floware.SQL.NssUtils.TableUsage(Floware.SQL.NativeSqlSupport)">
            <summary>
            MySQL support
            </summary>
        </member>
        <member name="M:Floware.SQL.NssUtils.XlsSheetNames(Floware.SQL.NativeSqlSupport)">
            <summary>
            Excel Sheet Name 추출.
            </summary>
        </member>
        <member name="M:Floware.SQL.NssUtils.ListNssModel(System.String)">
            <summary>
            NssModel List 가져오기
            </summary>
        </member>
        <member name="M:Floware.SQL.NssUtils.InMonth(System.DateTime,System.DateTime)">
            <summary>
            <para>Partition Month In 구문 추출.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.NssUtils.Ignore(System.Reflection.PropertyInfo)">
            <summary>
            해당 Property 무시
            </summary>
        </member>
        <member name="M:Floware.SQL.NssUtils.NamesColumn(Floware.SQL.NativeSqlSupport,Floware.SQL.DbType,System.String)">
            <summary>
            Column Names
            </summary>
        </member>
        <member name="M:Floware.SQL.NssUtils.NamesTable(Floware.SQL.NativeSqlSupport,Floware.SQL.DbType)">
            <summary>
            Table Names
            </summary>
        </member>
        <member name="T:Floware.SQL.NssUtils.Usage">
            <summary/>
        </member>
        <member name="M:Floware.SQL.NssUtils.Usage.ToString">
            <summary/>
        </member>
        <member name="P:Floware.SQL.NssUtils.Usage.Name">
            <summary/>
        </member>
        <member name="P:Floware.SQL.NssUtils.Usage.DataSize">
            <summary/>
        </member>
        <member name="P:Floware.SQL.NssUtils.Usage.IndexSize">
            <summary/>
        </member>
        <member name="P:Floware.SQL.NssUtils.Usage.RowCount">
            <summary/>
        </member>
        <member name="M:Floware.SQL.RowMapper`1.MapRow(System.Data.IDataReader,System.Int32)">
            <summary>
            reflection mapper
            </summary>
        </member>
        <member name="T:Floware.SQL.SqlUtils">
            <summary>
            <para>Native Sql Utils</para>
            <para>-</para>
            <para>FAC에서 사용함.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.SqlUtils.GetConnectionStringSQLite(System.String)">
            <summary>
            <para>Make ConnectionString SQLite</para>
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.SQL.SqlUtils.GetConnectionStringMySQL(System.String,System.String,System.String,System.String)">
            <summary>
            <para>Make ConnectionString MySQL</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.SqlUtils.Open(System.Data.Common.DbConnection)">
            <summary>
            <para>-</para>
            <para>SQLite</para>
            <para>new SQLiteConnection("data source=C:\XXX.db3;)"</para>
            <para>-</para>
            <para>MySQL(default port 3306)</para>
            <para>new MySqlConnection("server=127.0.0.1;database=xxx;uid=xxx;pwd=xxx;")</para>
            <para>-</para>
            <para>MSSQL(default port 1433)</para>
            <para>using System.Data.SqlClient</para>
            <para>new SqlConnection("server=127.0.0.1;database=xxx;uid=xxx;pwd=xxx")</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.SqlUtils.BulkUpdate(System.Data.Common.DbConnection,System.String)">
            <summary>
            <para>Non-Query</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.SqlUtils.Close(System.Data.Common.DbConnection)">
            <summary>
            <para>Close DB Connection.</para>
            <para>No Exception.</para>
            </summary>
        </member>
        <member name="T:Floware.SQL.StandAloneNss">
            <summary>
            StandAloneNativeSqlSupport
            </summary>
        </member>
        <member name="M:Floware.SQL.StandAloneNss.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.SQL.StandAloneNss.Init(System.String,System.String)">
            <summary>
            <para></para>
            <para>privider,connstring example</para>
            <para>Oracle devart의 경우에는 InitOracleDevart 사용 권장.</para>
            <para>-</para>
            <para>sql.Init("Floware.MySql", "server=1.1.1.1;database=xxx;uid=xxx;pwd=xxx");</para>
            <para>sql.Init("Floware.SQLite", "data source=c:\xxx.db3;encoding=UTF-8;journal mode=off;pooling=1;synchronous=0;");</para>
            <para>sql.Init("System.Data.SqlClient", "server=1.1.1.1;database=xxx;user=xxx;pwd=xxx;");</para>
            <para>-</para>
            <para>sql.Init("System.Data.OleDb", "Provider=Microsoft.ACE.OLEDB.12.0;data source=C:/xxx.xlsx;Extended Properties=Excel 12.0");</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.StandAloneNss.InitOracleDevart(System.String)">
            <summary>
            <para>Oracle devart</para>
            <para>-</para>
            <para>sql.InitOracleDevart("server=1.1.1.1;uid=xxx;pwd=xxx;sid=xxx;port=1521;direct=true;");</para>
            <para>sql.InitOracleDevart("server=1.1.1.1;uid=xxx;pwd=xxx;service name=xxx;port=1521;direct=true;");</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.StandAloneNss.InitXls(System.String,System.Boolean)">
            <summary>
            <para>xls 파일을 Temp folder에 카피 후 loading</para>
            <para>Excel로 열고 있어도 동작한다.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.StandAloneNss.InitXls(System.String)">
            <summary>
            <para>Excel파일을 열고 있을 경우 에러 발생하며 InitXls(path, true) 사용 권장.</para>
            </summary>
        </member>
        <member name="M:Floware.SQL.StandAloneNss.InitSQLite(Floware.SQL.SQLiteComm)">
            <summary/>
        </member>
        <member name="M:Floware.SQL.StandAloneNss.InitMySql(Floware.SQL.MySqlComm)">
            <summary>
            <para>1. 연결</para>
            <para>2. Transaction 적용</para>
            <para>-</para>
            <para>Server=localhost;Port=3306;Database=xxx;Uid=x xx;Pwd=xxxx;CHARSET=utf8;</para>
            </summary>
        </member>
        <member name="P:Floware.SQL.StandAloneNss.Nss">
            <summary>
            <para>Native sql 지원</para>
            <para>ReadOnly</para>
            </summary>
        </member>
        <member name="T:Floware.TCP.SocketTimeoutException">
            <summary>
            Socket timeout 발생시 
            </summary>
        </member>
        <member name="M:Floware.TCP.SocketTimeoutException.#ctor(System.String)">
            <summary/>
        </member>
        <member name="T:Floware.TCP.TcpComm">
            <summary>
            <para>T2: 30</para>
            <para>T6: 10</para>
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpComm.#ctor">
            <summary/>
        </member>
        <member name="P:Floware.TCP.TcpComm.Active">
            <summary>
            def: true, client mode
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpComm.Ip">
            <summary/>
        </member>
        <member name="P:Floware.TCP.TcpComm.PortNo">
            <summary/>
        </member>
        <member name="P:Floware.TCP.TcpComm.RollCnt">
            <summary>
            <para>def: 1, not rolling</para>
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpComm.RetryCnt">
            <summary>
            def: int.MaxValue
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpComm.T2">
            <summary>
            연결 요청 시간
            <para>second</para>
            <para>def: 30</para>
            <para>-</para>
            <para>Lan2개 무선 AP의 경우 10초 이상 경우를 보정하기위해 30초 기본값</para>
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpComm.T5">
            <summary>
            second
            <para>연결시도 후 다음 연결시 까지 쉬는 시간</para>
            <para>def: 5</para>
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpComm.T6">
            <summary>
            socket timeout
            <para>연결후 socket read timeout 설정 시간</para>
            <para>second</para>
            <para>def: 10</para>
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpComm.Ipe">
            <summary>
            ip, port를 기준으로 IPEndPoint 가져옴.
            </summary>
        </member>
        <member name="T:Floware.TCP.TcpConnector">
            <summary>
            <para>Tcp 연결</para>
            <para>Tcp Access</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.Connect(Floware.TCP.TcpComm)">
            <summary>
            TcpComm 객체를 이용한 연결.
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.WriteBeInt(System.Int32)">
            <summary>
            <para>Write Big Endian Int32</para>
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.WriteAscii(System.String)">
            <summary>
            <para>Write string data</para>
            <para>Encoding.ASCII</para>
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.WriteAscii(System.String,System.Text.Encoding)">
            <summary>
            <para>write string data</para>
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.WriteFlush(System.Byte[])">
            <summary>
            <para>write and flush one time</para>
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.WriteFlush(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <para>write and flush one time</para>
            </summary>
            <param name="bs"></param>
            <param name="offset">시작점</param>
            <param name="size"></param>
        </member>
        <member name="M:Floware.TCP.TcpConnector.CleanIn">
            <summary>
            In buffer clear
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.Read1Byte">
            <summary>
            1 바이트를 읽는다. int로 받는다.
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadByte">
            <summary>
            1 바이트를 읽는다. byte로 받는다.
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadBytes(System.Int32)">
            <summary>
            blocking read
            </summary>
            <param name="size">byte size</param>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadBuf(System.Int32)">
            <summary>
            ReadBytes+MemoryBuffer + PosChange(0)
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadUntil(System.Byte)">
            <summary>
            <para>NewLine, ETX까지 읽는 경우.</para>
            <para>b는 포함되지 않음</para>
            <para>in stream에서 b 까지 읽음</para>
            <para>-</para>
            <para>ReadLine의 경우 0x0d(\r), 0x0a(\n)</para>
            <para>Encoding.ASCII</para>
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadUntilAscii(System.Byte)">
            <summary>
            <para>NewLine, ETX까지 읽는 경우.</para>
            <para>b는 포함되지 않음</para>
            <para>1. in stream에서 b 까지 읽음</para>
            <para>2. 0x00 -> 0x20</para>
            <para>3. Encoding.ASCII string으로 추출함</para>
            <para>-</para>
            <para>ReadLine의 경우 0x0d(\r), 0x0a(\n)</para>
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadAscii(System.Int32)">
            <summary>
            <para>blocking read</para>
            <para>0x00 -> 0x20</para>
            <para>byte array를 Encoding.ASCII을 통해 string 변환</para>
            </summary>
            <param name="size">byte size</param>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadAscii(System.Int32,System.Text.Encoding)">
            <summary>
            <para>blocking read</para>
            <para>0x00 -> 0x20</para>
            <para>byte array를 Encoding.GetString을 통해 string 변환</para>
            </summary>
            <param name="size">byte size</param>
            <param name="encoding">ascii encoding</param>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadLeUshort">
            <summary>
            <para>little endian read 2 byte ushort</para>
            <para>1 0</para>
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadLeShort">
            <summary>
            little endian read 2 byte short
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadLeInt">
            <summary>
            little endian read 4 byte int
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadBeShort">
            <summary>
            big endian read 2 byte short
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadBeUshort">
            <summary>
            big endian read 2 byte ushort
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ReadBeInt">
            <summary>
            Read 0 0 0 1 Big endian 4 byte integer
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.StopListen">
            <summary>
            <para>연결이 완료되면 자동 stop listen을 하므로</para>
            <para>이 메소드는 listening중에 listen을 멈추게 하는 동작이다.</para>
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.TryToListen">
            <summary>
            <para>server socket listen</para>
            <para>OnTcpStateChanged로 state 추적 가능</para>
            <para>TcpConnector는 연결하나에 대해 read, write를 하기 때문에</para>
            <para>연결이 되면 Listen 동작을 stop한다.</para>
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.TryToConnect(System.Int32)">
            <summary>
            Tcp connect
            </summary>
            <param name="sleep_ms">connect fail sleep milli-second interval</param>
        </member>
        <member name="M:Floware.TCP.TcpConnector.TryToConnect(System.Int32,System.Int32)">
            <summary>
            sync connect
            </summary>
            <param name="retryCount">connect retry count</param>
            <param name="sleep_ms">connect fail sleep milli-second interval</param>
        </member>
        <member name="M:Floware.TCP.TcpConnector.SetTcpClient(System.Net.Sockets.TcpClient)">
            <summary>
            NoDelayBinaryStream를 호출한 다음에 연결여부 Connected를 체크할수 있다.
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.TryOneConnect">
            <summary>
            <para>HsmsManager의 T5처리 connection logging처리를 위해 추가됨.</para>
            <para>한번만 Try하며 OnTcpStateChanged를 통해 수행 동작을 Logging이 가능하다.</para>
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.TryOnceConnectUntilTimeout(System.Int32)">
            <summary>
            <para>Timeout 시간만 연결 한번 시도.</para>
            <para>-</para>
            <para>연결 여부는 Connected로 체크한다.</para>
            <para>-</para>
            <para>연결 성공: 50ms이내로 연결이 완료된다.</para>
            <para>-</para>
            <para>연결실패</para>
            <para>Case1</para>
            <para>IpAddress 찾기 성공했지만 Listen을 하고있지 않는 경우</para>
            <para>1초 정도 시간이 걸리며 conn_timeout을 10초로 세팅한 경우에도 1-2초 후에 연결실패처리를 한다.</para>
            <para>-</para>
            <para>Case2</para>
            <para>IpAddress 찾기 실패</para>
            <para>conn_timeout만큼 시도를 하고 연결실패 처리를 한다.</para>
            </summary>
            <param name="timeout">millisecond</param>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ChangeRecvTimeout(System.Int32)">
            <summary>
            <para>change socket receive timeout</para>
            </summary>
            <param name="ms">milli-second</param>
        </member>
        <member name="M:Floware.TCP.TcpConnector.ChangeTimeout(System.Int32)">
            <summary>
            Change send, recd timeout both
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpConnector.CloseSocket">
            <summary>
            <para>close socket</para>
            <para>Exception이 없다, 내부적으로 모두 처리함.</para>
            </summary>
        </member>
        <member name="E:Floware.TCP.TcpConnector.OnTcpStateChanged">
            <summary>
            <para>Tcp 수행 Log</para>
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpConnector.Port">
            <summary>
            tcp port
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpConnector.IpAddress">
            <summary>
            tcp ip
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpConnector.IPClient">
            <summary>
            ip, port를 기준으로 IPEndPoint 가져옴.
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpConnector.EpRemote">
            <summary>
            <para>TryListen일 경우 접속정보.</para>
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpConnector.Connected">
            <summary>
            tcp connect or not
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpConnector.Socket">
            <summary>
            Connected Socket object
            </summary>
        </member>
        <member name="P:Floware.TCP.TcpConnector.Available">
            <summary/>
        </member>
        <member name="T:Floware.TCP.TcpUtils">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.TCP.TcpUtils.GetTcpErrMsg(System.Exception)">
            <summary>
            <para>IOException: Message</para>
            <para>SocketException: WSAE and InnerException Message</para>
            </summary>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.TCP.TcpUtils.GetTcpErrMsg(System.Net.EndPoint,System.Exception)">
            <summary>
            <para>IOException: Message</para>
            <para>SocketException: WSAE and InnerException Message</para>
            </summary>
            <param name="ep"></param>
            <param name="e"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.TCP.TcpUtils.MakeWsaeMsg(System.String,System.Net.Sockets.SocketException)">
            <summary>
            WSAE: Windows Socket Application Exception
            </summary>
            <param name="ep"></param>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="T:Floware.UDP.UdpClient">
            <summary/>
        </member>
        <member name="M:Floware.UDP.UdpClient.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.UDP.UdpClient.Open">
            <summary>
            socket.connect(xxx)
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpClient.Send(System.String)">
            <summary>
            string blocking send
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpClient.Send(System.Byte[])">
            <summary>
            byte array blocking send
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpClient.Receive(System.Int32)">
            <summary>
            blocking read
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpClient.ToString">
            <summary>
            "UDP Client {0}", Config
            </summary>
        </member>
        <member name="E:Floware.UDP.UdpClient.OnSendComplete">
            <summary>
            <para>arg: string msg</para>
            </summary>
        </member>
        <member name="P:Floware.UDP.UdpClient.Config">
            <summary>
            UDP conn info
            </summary>
        </member>
        <member name="P:Floware.UDP.UdpClient.Socket">
            <summary>
            Low level socket
            </summary>
        </member>
        <member name="T:Floware.UDP.UdpConfig">
            <summary>
            UdpConfig "127.0.0.1"/4096
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpConfig.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpConfig.ToString">
            <summary>
            string.Format("UDP IpAddress:{0} Port:{1}", IpAddress, Port);
            </summary>
            <returns></returns>
        </member>
        <member name="P:Floware.UDP.UdpConfig.SocketFlags">
            <summary>
            default: SocketFlags.None;
            </summary>
        </member>
        <member name="P:Floware.UDP.UdpConfig.IpAddress">
            <summary>
            "127.0.0.1"
            </summary>
        </member>
        <member name="P:Floware.UDP.UdpConfig.Port">
            <summary>
            4096
            </summary>
        </member>
        <member name="T:Floware.UDP.UdpNet">
            <summary>
            <para>UDP Socket</para>
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpNet.Connect(System.Int32)">
            <summary>
            <para>DontFragment = true</para>
            <para>Client.ReceiveTimeout = timeout</para>
            <para>timeout catch SocketException</para>
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpNet.Listen(System.Int32)">
            <summary>
            UDP Server
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpNet.ListenIP(System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.UDP.UdpNet.QuietClose">
            <summary>
            <para>Quiet: Not throw Exception</para>
            <para>Exception Logging</para>
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpNet.Send(System.String)">
            <summary>
            string blocking send
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpNet.Send(System.Byte[])">
            <summary>
            byte array blocking send
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpNet.Reply(System.Byte[])">
            <summary>
            <para>Reply By Receive EndPoint</para>
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpNet.Receive(System.Int32)">
            <summary>
            blocking read
            </summary>
        </member>
        <member name="M:Floware.UDP.UdpNet.ReceiveAll">
            <summary>
            <para>UDP Available Packet을 모두 읽어줌</para>
            </summary>
        </member>
        <member name="P:Floware.UDP.UdpNet.IpAddress">
            <summary/>
        </member>
        <member name="P:Floware.UDP.UdpNet.Port">
            <summary/>
        </member>
        <member name="T:Floware.UDP.UdpServer">
            <summary/>
        </member>
        <member name="M:Floware.UDP.UdpServer.Listen(System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.UDP.UdpServer.Listen(System.Int32,System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.UDP.UdpServer.Listen(System.String,System.Int32,System.Int32)">
            <summary/>
        </member>
        <member name="E:Floware.UDP.UdpServer.OnUdpReceived">
            <summary>
            <para>arg: string msg</para>
            </summary>
        </member>
        <member name="T:Floware.Utils.Win32.Win32IniUtils">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.Utils.Win32.Win32IniUtils.MAX_SECTION_SIZE">
            <summary>
            The maximum size of a section in an ini file.
            </summary>
            <remarks>
            This property defines the maximum size of the buffers 
            used to retreive data from an ini file.  This value is 
            the maximum allowed by the win32 functions 
            GetPrivateProfileSectionNames() or 
            GetPrivateProfileString().
            </remarks>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.GetString(System.String,System.String,System.String)">
            <summary>
            Gets the value of a setting in an ini file as a <see cref="T:System.String"/>.
            </summary>
            <param name="sectionName">The name of the section to read from.</param>
            <param name="keyName">The name of the key in section to read.</param>
            <param name="defaultValue">The default value to return if the key
            cannot be found.</param>
            <returns>The value of the key, if found.  Otherwise, returns 
            <paramref name="defaultValue"/></returns>
            <remarks>
            The retreived value must be less than 512KB in length.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> or <paramref name="keyName"/> are 
            a null reference  (Nothing in VB)
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.GetInt16(System.String,System.String,System.Int16)">
            <summary>
            Gets the value of a setting in an ini file as a <see cref="T:System.Int16"/>.
            </summary>
            <param name="sectionName">The name of the section to read from.</param>
            <param name="keyName">The name of the key in section to read.</param>
            <param name="defaultValue">The default value to return if the key
            cannot be found.</param>
            <returns>The value of the key, if found.  Otherwise, returns 
            <paramref name="defaultValue"/>.</returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> or <paramref name="keyName"/> are 
            a null reference  (Nothing in VB)
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.GetInt32(System.String,System.String,System.Int32)">
            <summary>
            Gets the value of a setting in an ini file as a <see cref="T:System.Int32"/>.
            </summary>
            <param name="sectionName">The name of the section to read from.</param>
            <param name="keyName">The name of the key in section to read.</param>
            <param name="defaultValue">The default value to return if the key
            cannot be found.</param>
            <returns>The value of the key, if found.  Otherwise, returns 
            <paramref name="defaultValue"/></returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> or <paramref name="keyName"/> are 
            a null reference  (Nothing in VB)
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.GetDouble(System.String,System.String,System.Double)">
            <summary>
            Gets the value of a setting in an ini file as a <see cref="T:System.Double"/>.
            </summary>
            <param name="sectionName">The name of the section to read from.</param>
            <param name="keyName">The name of the key in section to read.</param>
            <param name="defaultValue">The default value to return if the key
            cannot be found.</param>
            <returns>The value of the key, if found.  Otherwise, returns 
            <paramref name="defaultValue"/></returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> or <paramref name="keyName"/> are 
            a null reference  (Nothing in VB)
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.GetSectionValuesAsList(System.String)">
            <summary>
            Gets all of the values in a section as a list.
            </summary>
            <param name="sectionName">
            Name of the section to retrieve values from.
            </param>
            <returns>
            A <see cref="T:System.Collections.Generic.List`1"/> containing <see cref="T:System.Collections.Generic.KeyValuePair`2"/> objects 
            that describe this section.  Use this verison if a section may contain
            multiple items with the same key value.  If you know that a section 
            cannot contain multiple values with the same key name or you don't 
            care about the duplicates, use the more convenient 
            <see cref="M:Floware.Utils.Win32.Win32IniUtils.GetSectionValues(System.String)"/> function.
            </returns>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> is a null reference  (Nothing in VB)
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.GetSectionValues(System.String)">
            <summary>
            Gets all of the values in a section as a dictionary.
            </summary>
            <param name="sectionName">
            Name of the section to retrieve values from.
            </param>
            <returns>
            A <see cref="T:System.Collections.Generic.Dictionary`2"/> containing the key/value 
            pairs found in this section.  
            </returns>
            <remarks>
            If a section contains more than one key with the same name, 
            this function only returns the first instance.  If you need to 
            get all key/value pairs within a section even when keys have the 
            same name, use <see cref="M:Floware.Utils.Win32.Win32IniUtils.GetSectionValuesAsList(System.String)"/>.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> is a null reference  (Nothing in VB)
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.GetKeyNames(System.String)">
            <summary>
            Gets the names of all keys under a specific section in the ini file.
            </summary>
            <param name="sectionName">
            The name of the section to read key names from.
            </param>
            <returns>An array of key names.</returns>
            <remarks>
            The total length of all key names in the section must be 
            less than 512KB in length.
            </remarks>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> is a null reference  (Nothing in VB)
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.GetSectionNames">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.ConvertNullSeperatedStringToStringArray(System.IntPtr,System.Int32)">
            <summary>
            Converts the null seperated pointer to a string into a string array.
            </summary>
            <param name="ptr">A pointer to string data.</param>
            <param name="valLength">
            Length of the data pointed to by <paramref name="ptr"/>.
            </param>
            <returns>
            An array of strings; one for each null found in the array of characters pointed
            at by <paramref name="ptr"/>.
            </returns>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.WriteValueInternal(System.String,System.String,System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value to the ini file.
            </summary>
            <param name="sectionName">The name of the section to write to .</param>
            <param name="keyName">The name of the key to write to.</param>
            <param name="value">The string value to write</param>
            <exception cref="T:System.ComponentModel.Win32Exception">
            The write failed.
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.WriteValue(System.String,System.String,System.String)">
            <summary>
            Writes a <see cref="T:System.String"/> value to the ini file.
            </summary>
            <param name="sectionName">The name of the section to write to .</param>
            <param name="keyName">The name of the key to write to.</param>
            <param name="value">The string value to write</param>
            <exception cref="T:System.ComponentModel.Win32Exception">
            The write failed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> or <paramref name="keyName"/> or 
            <paramref name="value"/>  are a null reference  (Nothing in VB)
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.WriteValue(System.String,System.String,System.Int16)">
            <summary>
            Writes an <see cref="T:System.Int16"/> value to the ini file.
            </summary>
            <param name="sectionName">The name of the section to write to .</param>
            <param name="keyName">The name of the key to write to.</param>
            <param name="value">The value to write</param>
            <exception cref="T:System.ComponentModel.Win32Exception">
            The write failed.
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.WriteValue(System.String,System.String,System.Int32)">
            <summary>
            Writes an <see cref="T:System.Int32"/> value to the ini file.
            </summary>
            <param name="sectionName">The name of the section to write to .</param>
            <param name="keyName">The name of the key to write to.</param>
            <param name="value">The value to write</param>
            <exception cref="T:System.ComponentModel.Win32Exception">
            The write failed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> or <paramref name="keyName"/> are 
            a null reference  (Nothing in VB)
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.WriteValue(System.String,System.String,System.Single)">
            <summary>
            Writes an <see cref="T:System.Single"/> value to the ini file.
            </summary>
            <param name="sectionName">The name of the section to write to .</param>
            <param name="keyName">The name of the key to write to.</param>
            <param name="value">The value to write</param>
            <exception cref="T:System.ComponentModel.Win32Exception">
            The write failed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> or <paramref name="keyName"/> are 
            a null reference  (Nothing in VB)
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.WriteValue(System.String,System.String,System.Double)">
            <summary>
            Writes an <see cref="T:System.Double"/> value to the ini file.
            </summary>
            <param name="sectionName">The name of the section to write to .</param>
            <param name="keyName">The name of the key to write to.</param>
            <param name="value">The value to write</param>
            <exception cref="T:System.ComponentModel.Win32Exception">
            The write failed.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> or <paramref name="keyName"/> are 
            a null reference  (Nothing in VB)
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.DeleteKey(System.String,System.String)">
            <summary>
            Deletes the specified key from the specified section.
            </summary>
            <param name="sectionName">
            Name of the section to remove the key from.
            </param>
            <param name="keyName">
            Name of the key to remove.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> or <paramref name="keyName"/> are 
            a null reference  (Nothing in VB)
            </exception>
        </member>
        <member name="M:Floware.Utils.Win32.Win32IniUtils.DeleteSection(System.String)">
            <summary>
            Deletes a section from the ini file.
            </summary>
            <param name="sectionName">
            Name of the section to delete.
            </param>
            <exception cref="T:System.ArgumentNullException">
            <paramref name="sectionName"/> is a null reference (Nothing in VB)
            </exception>
        </member>
        <member name="P:Floware.Utils.Win32.Win32IniUtils.FileName">
            <summary>
            <para>없으면 파일을 만드므로 File Exist Check하지 않는다.</para>
            </summary>
        </member>
        <member name="P:Floware.Utils.Win32.Win32IniUtils.AllSectionNames">
            <summary>
            Gets the names of all sections in the ini file.
            </summary>
            <returns>An array of section names.</returns>
            <remarks>
            The total length of all section names in the section must be 
            less than 512KB in length.
            </remarks>
        </member>
        <member name="T:Floware.Utils.Win32.Win32IniUtils.NativeMethods">
            <summary>
            A static class that provides the win32 P/Invoke signatures 
            used by this class.
            </summary>
            <remarks>
            Note:  In each of the declarations below, we explicitly set CharSet to 
            Auto.  By default in C#, CharSet is set to Ansi, which reduces 
            performance on windows 2000 and above due to needing to convert strings
            from Unicode (the native format for all .Net strings) to Ansi before 
            marshalling.  Using Auto lets the marshaller select the Unicode version of 
            these functions when available.
            </remarks>
        </member>
        <member name="T:Floware.Utils.Win32.WindowsUtils">
            <summary/>
        </member>
        <member name="T:Floware.Utils.AppUtils">
            <summary/>
        </member>
        <member name="M:Floware.Utils.AppUtils.LogGlobalException">
            <summary>
            Logging UI, UnhandledException.
            </summary>
        </member>
        <member name="M:Floware.Utils.AppUtils.IsFindWindow(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.AppUtils.ShowWindow(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.AppUtils.HideWindow(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.AppUtils.SendCloseMessageByTitle(System.String)">
            <summary>
            <para>Title을 이용한 종료.</para>
            </summary>
            <param name="windowTitle"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AppUtils.SendCloseMessage(System.IntPtr)">
            <summary>
            <para>Handle을 이용한 종료.</para>
            </summary>
            <param name="handle"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AppUtils.SendCloseMessage(System.String)">
            <summary>
            <para>ProcessName을 이용한 종료 .exe는 생략해야함.</para>
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AppUtils.DisableCloseButton(System.Windows.Forms.Form)">
            <summary/>
        </member>
        <member name="T:Floware.Utils.AssemblyUtils">
            <summary>
            Assembly reflection utils class
            </summary>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.ReadEmbedded(System.Reflection.Assembly,System.String,System.Text.Encoding)">
            <summary>
            Assembly의 Embedded resource읽어오기
            </summary>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.BuildDate(System.Reflection.Assembly)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.BuildDate(System.Type)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.IsNullableType(System.Type)">
            <summary>
            Nullable or not
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.IsPublicProperty(System.Type,System.String)">
            <summary>
            public property or not
            </summary>
            <param name="type"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.IsPublicMethod(System.Type,System.String)">
            <summary>
            public method or not
            </summary>
            <param name="type"></param>
            <param name="methodName"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.GetVersion">
            <summary>
            <para>호출자의 Version 정보 display</para>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.GetVersion(System.Object)">
            <summary>
            get version some assembly or class
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.GetDescription(System.Object)">
            <summary>
            get description assembly
            </summary>
            <param name="o"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.ToString(System.Object,System.String[])">
            <summary>
            <para>SPACE ToString utils.</para>
            <para>ClassName, Propertys</para>
            </summary>
            <param name="me">this</param>
            <param name="ignores">case sensitive, asterix(*) support</param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.ToNewLineString(System.Object,System.String[])">
            <summary>
            <para>NEWLINE ToString utils.</para>
            <para>ClassName, Propertys</para>
            </summary>
            <param name="me">this</param>
            <param name="ignores">case sensitive, asterix(*) support</param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.PropValue(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="obj"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.GetPropsPublic(System.Type)">
            <summary>
            <para>public property array</para>
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.GetProps(System.Type)">
            <summary>
            <para>Public, NonPublic property array</para>
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.GetChgdProp(System.Object,System.Object)">
            <summary>
            src, dest의 값이 변한 값들 추출하는 함수.
            </summary>
            <param name="src"></param>
            <param name="dest"></param>
            <returns>PropName, DestValue dictionary</returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.GetClsName(System.Object)">
            <summary/>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.GetClsFullName(System.Object)">
            <summary/>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.GetConstName(System.Type,System.Object)">
            <summary>
            <para>const value를 이용하여 const name을 추출함.</para>
            <para>읽기 쉬운 name을 추출함.</para>
            <para>Public const만 추출 가능함.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.AssemblyUtils.Invoke(System.Object,System.String,System.Object[])">
            <summary>
            <para>public method reflection invoke</para>
            </summary>
        </member>
        <member name="P:Floware.Utils.AssemblyUtils.FlowareVersion">
            <summary>
            get Floware version info.
            </summary>
        </member>
        <member name="T:Floware.Utils.Assert">
            <summary>
            <para>Assert Class</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.Assert.AreEqual(System.Object,System.Object,System.String,System.Object[])">
            <summary>
            <para>objA와 objB는 Equals로 비교할 경우 True이어야 함.</para>
            </summary>
            <param name="objA"></param>
            <param name="objB"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Floware.Utils.Assert.AreNotEqual(System.Object,System.Object,System.String,System.Object[])">
            <summary>
            <para>objA와 objB는 Equals로 비교할 경우 False이어야 함.</para>
            </summary>
            <param name="objA"></param>
            <param name="objB"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Floware.Utils.Assert.NotNull(System.Object,System.String,System.Object[])">
            <summary>
            <para>null이면 안됨</para>
            </summary>
            <param name="obj"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Floware.Utils.Assert.IsNull(System.Object,System.String,System.Object[])">
            <summary>
            <para>반드시 null 이어야 함.</para>
            </summary>
            <param name="obj"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Floware.Utils.Assert.IsFalse(System.Boolean,System.String,System.Object[])">
            <summary>
            <para>반드시 false이어야 함</para>
            </summary>
            <param name="expression"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Floware.Utils.Assert.IsTrue(System.Boolean,System.String,System.Object[])">
            <summary>
            <para>반드시 true이어야 함.</para>
            </summary>
            <param name="expression"></param>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="M:Floware.Utils.Assert.Fail(System.String,System.Object[])">
            <summary>
            <para>fail처리</para>
            </summary>
            <param name="format"></param>
            <param name="args"></param>
        </member>
        <member name="T:Floware.Utils.AssertException">
            <summary>
            Floware Assert처리를 위한 AssertException
            </summary>
        </member>
        <member name="M:Floware.Utils.AssertException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.AssertException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Floware.Utils.BitUtils">
            <summary>
            <para>ReplaceNullToSpace(byte[] bs)</para>
            <para>ReplaceNonAsciiToSpace(byte[] bs)</para>
            <para>byte[] ChangeBitArray(int intV)</para>
            <para>ChgBitString</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.BitUtils.ReplaceNullToSpace(System.Byte[])">
            <summary>
            0x00 -> 0x20
            </summary>
            <param name="bs"></param>
        </member>
        <member name="M:Floware.Utils.BitUtils.ReplaceNonAsciiToSpace(System.Byte[])">
            <summary>
            ascii code !(0x20 ~ 0x7f) -> 0x20
            </summary>
        </member>
        <member name="M:Floware.Utils.BitUtils.ChgString(System.Int32,System.Int32)">
            <summary>
            int -> bit string
            <para>length padright or substring</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.BitUtils.ChgString(System.Int32)">
            <summary>
            int -> bit string
            </summary>
        </member>
        <member name="M:Floware.Utils.BitUtils.ChgInt32(System.String)">
            <summary>
            bit string -> int
            <para>e.g. 00000000000000000000000000000011 -> 3</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.BitUtils.ChgBytes(System.Int32)">
            <summary>
            <para>int -> byte array</para>
            <para>e.g. 3 -> 00000000000000000000000000000011</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.BitUtils.ChgBytes(System.Int16)">
            <summary>
            <para>int -> byte array</para>
            <para>e.g. 3 -> 0000000000000011</para>        
            </summary>
        </member>
        <member name="M:Floware.Utils.BitUtils.ChgBytes(System.Collections.BitArray)">
            <summary>
            BitArray -> byte array
            </summary>
            <param name="ba"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.BitUtils.ChgBitArray(System.Int32)">
            <summary>
            int -> BitArray(32)
            </summary>
        </member>
        <member name="M:Floware.Utils.BitUtils.ChgBitArray(System.Byte[])">
            <summary>
            Byte array -> BitArray
            </summary>
        </member>
        <member name="M:Floware.Utils.BitUtils.ChgInt32(System.Collections.BitArray)">
            <summary>
            BitArray to int
            </summary>
        </member>
        <member name="M:Floware.Utils.BitUtils.Enlarge8(System.Byte[])">
            <summary>
            <para>arg bytes를 bit format으로 8배 확장하여 byte array 구성</para>
            </summary>
        </member>
        <member name="T:Floware.Utils.CharsetUtils">
            <summary>
            Ascii &lt;-&gt; byte[]
            </summary>
        </member>
        <member name="F:Floware.Utils.CharsetUtils.CODE_PAGE_KOREAN">
            <summary/>
        </member>
        <member name="F:Floware.Utils.CharsetUtils.CODE_PAGE_EUC_KR">
            <summary/>
        </member>
        <member name="F:Floware.Utils.CharsetUtils.CODE_PAGE_ISO_8859_1">
            <summary>
            western european
            </summary>
        </member>
        <member name="F:Floware.Utils.CharsetUtils.CODE_PAGE_UTF8">
            <summary/>
        </member>
        <member name="F:Floware.Utils.CharsetUtils.CODE_PAGE_UTF16">
            <summary/>
        </member>
        <member name="F:Floware.Utils.CharsetUtils.CODE_PAGE_SHIFT_JIS">
            <summary/>
        </member>
        <member name="F:Floware.Utils.CharsetUtils.CODE_PAGE_CHINESE_1">
            <summary>
            중국어 간체(GB2312)"
            </summary>
        </member>
        <member name="M:Floware.Utils.CharsetUtils.Change(System.String)">
            <summary>
            <para>string -> byte[]</para>
            <para>Gets an encoding for the ASCII (7-bit) character set.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.CharsetUtils.Change(System.String,System.Text.Encoding)">
            <summary>
            <para>string -> byte[]</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.CharsetUtils.Change(System.String,System.Int32)">
            <summary>
            Encode Code를 이용한 변경
            </summary>
        </member>
        <member name="M:Floware.Utils.CharsetUtils.Change(System.Byte[])">
            <summary>
            <para>byte[] -> string</para>
            <para>Gets string for the ASCII (7-bit) character set.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.CharsetUtils.Change(System.Byte[],System.Text.Encoding)">
            <summary>
            <para>Ascii이므로 0x00 -> 0x20 기능 포함.</para>
            <para>byte[] -> string</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.CharsetUtils.Change(System.Byte[],System.Int32)">
            <summary>
            Encode Code를 이용한 변경
            </summary>
        </member>
        <member name="T:Floware.Utils.ChksumUtils">
            <summary/>
        </member>
        <member name="F:Floware.Utils.ChksumUtils.POLY_16_IBM">
            <summary/>
        </member>
        <member name="M:Floware.Utils.ChksumUtils.Crc16IBM(System.UInt16[],System.Int32,System.Byte[])">
            <summary>
            <para>CRC16 IBM.</para>
            <para>Polynomial: x^16 + x^15 + x^2 + 1 (0xa001)</para>
            <para>-</para>
            <para>Modbus Crc16</para>
            <para>GenTable(POLY_16_IBM)</para>
            <para>initCrcV(0xffff)</para>
            </summary>
            <param name="table"></param>
            <param name="initCrcV"></param>
            <param name="bs"></param>
        </member>
        <member name="M:Floware.Utils.ChksumUtils.Crc8(System.Byte[],System.Byte[])">
            <summary>
            <para>CRC8 = 0xd5, CRC8_CCITT = 0x07, CRC8_DALLAS_MAXIM = 0x31, CRC8_SAE_J1850 = 0x1D, CRC_8_WCDMA = 0x9b,</para>
            </summary>
            <param name="table"></param>
            <param name="bs"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.ChksumUtils.Crc8GenTable(System.Int32)">
            <summary>
            x8 + x7 + x6 + x4 + x2 + 1
            const byte poly = 0xd5;
            </summary>
            <param name="poly"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.ChksumUtils.Crc16GenTable(System.Int32)">
            <summary>
            <para>CRC16 IBM:Polynomial: x^16 + x^15 + x^2 + 1 (0xa001)</para>
            </summary>
            <param name="poly"></param>
        </member>
        <member name="T:Floware.Utils.CipherUtils">
            <summary/>
        </member>
        <member name="M:Floware.Utils.CipherUtils.Encrypt(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.CipherUtils.Encrypt(System.String,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.CipherUtils.Decrypt(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.CipherUtils.Decrypt(System.String,System.String)">
            <summary/>
        </member>
        <member name="T:Floware.Utils.ConstUtils">
            <summary>
            Floware const data
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.ONE_KILO_BYTES">
            <summary>
            1024
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.ONE_MEGA_BYTES">
            <summary>
            1024 * ONE_KILO_BYTES;
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.ONE_GIGA_BYTES">
            <summary>
            1024 * ONE_MEGA_BYTES;
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.ONE_SECOND">
            <summary>
            1000 ms
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.ONE_MINUTE">
            <summary>
            60 * ONE_SECOND;
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.ONE_HOUR">
            <summary>
            60 * ONE_MINUTE;
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.ONE_DAY">
            <summary>
            24 * ONE_HOUR;
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.ONE_WEEK">
            <summary>
            7 * ONE_DAY;
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.SPACE_CHAR">
            <summary>
            ' ';
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.SPACE">
            <summary>
            " ";
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.QUOTATION">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.QUOTATION_SINGLE">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.SPACE20">
            <summary>
            "                    ";
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.SPACE25">
            <summary>
            "                         ";
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.IP_LOCAL_HOST">
            <summary>
            <para>127.0.0.1</para>
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.HTML_TAB">
            <summary/>
        </member>
        <member name="F:Floware.Utils.ConstUtils.HTML_SPACE">
            <summary/>
        </member>
        <member name="F:Floware.Utils.ConstUtils.ESC">
            <summary>
            escape string
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.DIR_CHAR">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.Utils.ConstUtils.DIR">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.Utils.DateUtils">
            <summary>
            각종 Begin, End함수 구현
            <para>TimeChange 함수</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.Quarter(System.DateTime)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.DateUtils.BeginOfMonth(System.Int32,System.Int32)">
            <summary>
            월초
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.BeginOfYear(System.Int32)">
            <summary>
            년초
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.BeginOfWeek(System.Int32,System.Int32)">
            <summary>
            Week Number를 이용한 DateTime 가져오기
            <para>1주 시작 Sunday 기준</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.BeginOfWeek(System.DateTime)">
            <summary>
            <para>1주 시작 일~토 기준</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.EndOfWeek(System.DateTime)">
            <summary>
            <para>1주끝 일~토 기준</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.EndOfWeek(System.Int32,System.Int32)">
            <summary>
            Week를 이용한 DateTime 가져오기
            <para>12월말일 경우에 다음년도의 날짜 초반을 가져온다. (향후 변경 가능성 있음)</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.BeginOfQuarter(System.Int32,System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.DateUtils.EndOfYear(System.Int32)">
            <summary>
            년말
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.EndOfQuarter(System.Int32,System.Int32)">
            <summary>
            <para>날짜 계산과 시간을 23:59:59로 계산하여 가져온다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.EndOfMonth(System.Int32,System.Int32)">
            <summary>
            Month 마지막 날 자동 계산
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.EndOfDay(System.DateTime)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.DateUtils.ChangeSystemTime(System.String)">
            <summary>
            PC 시간 변경.
            <para>14자리. yyyyMMddHHmmss</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.ToTimeMillis(System.DateTime)">
            <summary>
            may be also new TimeSpan(DateTime.UtcNow.Ticks).TotalMilliseconds;
            http://msdn.microsoft.com/library/default.asp?url=/library/en-us/dv_jlca/html/vberrjavalangsystemcurrenttimemillis.asp
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.ToString(System.DateTime)">
            <summary>
            <para>yyyy-MMdd HH:mm:ss.fff</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.ToString(System.DateTime,System.String)">
            <summary>
            <para>Invariant Culture Format</para>
            <para>dt.ToString(format, System.Globalization.DateTimeFormatInfo.InvariantInfo)</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.WeekNumber(System.DateTime)">
            <summary>
            arg의 DateTime이 몇번째 Week인지 가져오기
            <para>해가 바뀌는 부분을 감안하여 일요일 기준으로 WeekNumber를 계산한다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.DayCount(System.DateTime)">
            <summary>
            DateTime의 day가 몇일인지 가져오기.
            </summary>
        </member>
        <member name="M:Floware.Utils.DateUtils.Parse(System.String)">
            <summary>
            <para>Parse가 실패할 경우 1년,1월,1일 반환.</para>
            </summary>
        </member>
        <member name="P:Floware.Utils.DateUtils.CurrentTimeMillis">
            <summary/>
        </member>
        <member name="T:Floware.Utils.DelegateUtils">
            <summary>
            <para>Change UI Thread</para>
            </summary>
        </member>
        <member name="T:Floware.Utils.DlgUtils">
            <summary>
            <para>DelegateUtils</para>
            <para>Change UI Thread</para>
            <para>Method용 Invoke 지원</para>
            <para>Delegate용 Invoke 지원</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DlgUtils.IsControlInstance(System.Delegate)">
            <summary>
            <para>Delegate를 이용한 호출 메소드가 Control 즉 화면인지 여부</para>
            </summary>
            <param name="dlg"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.DlgUtils.GetControlTarget(System.Delegate)">
            <summary>
            <para>Delegate의 Target을 가져옴.</para>
            </summary>
            <param name="dlg"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.DlgUtils.ChgCtrlText(System.Windows.Forms.Control,System.Object)">
            <summary>
            <para>Cross-thread 처리 완료.</para>
            </summary>
            <param name="c"></param>
            <param name="v"></param>
        </member>
        <member name="M:Floware.Utils.DlgUtils.Invoke(Floware.TAction)">
            <summary>
            <para>BeginInvoke를 이용해서 화면 스레드로 변환함</para>
            <para>호출 method는 void 0 argument가 없어야 함.</para>
            </summary>
            <param name="method"></param>
        </member>
        <member name="M:Floware.Utils.DlgUtils.Invoke``1(Floware.TAction{``0},``0)">
            <summary>
            <para>BeginInvoke를 이용해서 화면 스레드로 변환함</para>
            <para>-</para>
            <para>호출 method는 void 1 argument.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DlgUtils.Invoke``2(Floware.TAction{``0,``1},``0,``1)">
            <summary>
            <para>BeginInvoke를 이용해서 화면 스레드로 변환함</para>
            <para>-</para>
            <para>호출 method는 void 2 argument.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DlgUtils.Invoke``3(Floware.TAction{``0,``1,``2},``0,``1,``2)">
            <summary>
            <para>BeginInvoke를 이용해서 화면 스레드로 변환함</para>
            <para>-</para>
            <para>호출 method는 void 3 argument.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DlgUtils.Invoke``4(Floware.TAction{``0,``1,``2,``3},``0,``1,``2,``3)">
            <summary>
            <para>BeginInvoke를 이용해서 화면 스레드로 변환함</para>
            <para>-</para>
            <para>호출 method는 void 4 argument.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.DlgUtils.Call(System.Delegate,System.Object[])">
            <summary>
            <para>단순 호출, 화면 Thread등을 고려하지 않는다.</para>
            </summary>
            <param name="dlg"></param>
            <param name="args"></param>
        </member>
        <member name="M:Floware.Utils.DlgUtils.Invoke(System.Delegate,System.Object[])">
            <summary>
            <para>delegate용 Thread change Invoke</para>
            </summary>
            <param name="dlg">Event입력</param>
            <param name="args"></param>
        </member>
        <member name="T:Floware.Utils.EnumUtils">
            <summary/>
        </member>
        <member name="M:Floware.Utils.EnumUtils.IntV(System.Enum)">
            <summary>
            Enum -> int
            </summary>
        </member>
        <member name="M:Floware.Utils.EnumUtils.ObjV(System.Type,System.String)">
            <summary>
            IgnoreCase
            </summary>
        </member>
        <member name="M:Floware.Utils.EnumUtils.IsEnum(System.Type)">
            <summary>
            Type Enum Or Not
            </summary>
        </member>
        <member name="M:Floware.Utils.EnumUtils.Chg``1(System.Int32)">
            <summary>
            int Enum 변환
            <para>Exception 발생하지 않음</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.EnumUtils.Chg``1(System.String)">
            <summary>
            string Enum 변환
            <para>Exception 발생하지 않음</para>
            <para>모르는 enum 갑은 0, 즉 default값으로 변함.</para>
            <para>IgnoreCase, space 허용</para>
            </summary>
        </member>
        <member name="T:Floware.Utils.HexaUtils">
            <summary>
            <para>byte를 string으로 변환함.</para>
            </summary>
        </member>
        <member name="F:Floware.Utils.HexaUtils.map1">
            <summary>
            string key를 이용해 byte를 찾기위함. (성능향상을 위해 구현함)
            </summary>
        </member>
        <member name="M:Floware.Utils.HexaUtils.StringToByte(System.String)">
            <summary>
            "01" -> 1 byte
            "FF" -> 0xff byte
            </summary>
        </member>
        <member name="M:Floware.Utils.HexaUtils.ToString(System.Byte[])">
            <summary>
            hexspace를 이용하며 delimeter를 space로 처리함.
            </summary>
        </member>
        <member name="M:Floware.Utils.HexaUtils.ToString(System.Byte[],System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.HexaUtils.ToFF(System.Byte[])">
            <summary>
            <para>FF format으로 붙인다</para>
            <para>space가 없으며 DB blob 저장시 유용함.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.HexaUtils.FromFF(System.String)">
            <summary>
            <para>HexaString -> byte array</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.HexaUtils.Hex2StringSpace(System.Byte)">
            <summary>
            "00 ", "01 ", "02 ", "03 "...
            </summary>
        </member>
        <member name="M:Floware.Utils.HexaUtils.Hex2String(System.Byte)">
            <summary>
            "00", "01", "02", "03"...
            </summary>
        </member>
        <member name="T:Floware.Utils.MemoryBuffer">
            <summary>
            <para>memory stream buffer, default size 256</para>
            <para>Append와 Read함수 지원함</para>
            <para>.net이 little endian이 기본이므로</para>
            <para>Little endian은 byte swap을 하지 않고 Big endian은 byte swap을 하고 값을 읽고쓴다</para>
            <para></para>
            <para>Append</para>
            <para>MemoryBuffer에 데이터를 추가하는 함수</para>
            <para>최종 ToBytes를 이용하여 한번에 byte array를 추출함.</para>
            <para></para>
            <para>Read</para>
            <para>mb.Append(byte[])를 하고</para>
            <para>ResetSeek()를 이용하여 position초기화</para>
            <para>ReadLexxx 등을 사용하여 position을 자동 이동시키며</para>
            <para>byte array에서 int, short등을 추출한다.</para>
            <para>-</para>
            <para>201603:Append의 return값을 제거함, Length와 Pos가 불명확함.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.#ctor">
            <summary>
            기본 size:256으로 할당한다
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.#ctor(System.Int32)">
            <summary>
            bufSize 만큼 buffer를 할당한다
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.#ctor(System.Byte[])">
            <summary>
            1. buffer를 입력된 bs 만큼 할당한다
            <para>2. Append를 내부적으로 호출하여 bs를 append한다</para>
            <para>3. Position을 최초로 이동하여 바로 ReadXXX를 사용가능하게 한다</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.Reset">
            <summary>
            <para>MemoryBuffer를 초기화하고(데이터 삭제됨)</para> 
            <para>새로운 MemoryStream을 생성함.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.Append(System.Byte[])">
            <summary>
            bs -> MemoryBuffer
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.PosChange(System.Int32)">
            <summary>
            <para>Change curr position</para>
            <para>Multi thread에서는 Lock처리가 필요함.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.PosShift(System.Int32)">
            <summary>
            <para>Shift left or right</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ResetSeek">
            <summary>
            <para>MemoryBuffer position을 처음으로 복귀시킴.</para>
            <para>Pos '0'</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.PosBegin">
            <summary>
            Position을 제일 앞으로
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.PosEnd">
            <summary>
            Position을 제일 마지막으로
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.PeekBytes(System.Int32,System.Int32)">
            <summary>
            Position 이동을 하지 않는다.
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.Append(System.Int32)">
            <summary>
            <para>integer를 byte를 casting하여 append함수 호출</para>
            </summary>
            <param name="i">0~255</param>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.Fill(System.Int32,System.Byte)">
            <summary>
            length만큼 b 로 채워서 Append함.
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.Append(Floware.Utils.MemoryBuffer)">
            <summary>
            from의 데이터를 this memory buffer를 합친다.
            <para>from의 Position에 관계없이 from의 모든 데이터를 this에 추가한다.</para>
            <para>this의 position은 유효함.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.Append(System.Byte[],System.Int32)">
            <summary>
            bs -> MemoryBuffer
            </summary>
            <param name="bs"></param>
            <param name="offset">From bs offset to end</param>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.Append(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <para>bs -> MemoryBuffer</para>
            <para>length를 둔 이유는 넘치거나 적은 데이터의 보정을 위함.</para>
            <para>bs가 length를 넘치거나 적은 경우 대비한 로직.</para>
            </summary>
            <param name="bs"></param>
            <param name="offset">bs의 시작점</param>
            <param name="size">offset부터 append 할 byte size</param>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.Chg(System.Byte[],System.Int32,System.Int32)">
            <summary>
            <para>MemoryBuffer 값변경.</para>
            <para>offset은 bs의 시작점.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.Chg(System.Byte)">
            <summary>
            현재위치(pos)의 1 byte 값만 변경함
            <para>성능향상 용도</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.Chg(System.Int32,System.Byte[])">
            <summary>
            <para>MemoryBuffer 값변경.</para>
            <para>pos 부터 bs로 변경하고 원래 Position으로 반환한다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendLeUint(System.UInt32)">
            <summary>
            little endian
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendLeInt(System.Int32)">
            <summary>
            little endian
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendLeInt3(System.Int32)">
            <summary>
            3byte int 처리.
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendLeShort(System.Int32)">
            <summary>
            Append little endian short
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendLeShort(System.Int16)">
            <summary>
            little endian
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendLeUshort(System.Int32)">
            <summary>
            little endian
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendLeUshort(System.UInt16)">
            <summary>
            little endian
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendLeFloat(System.Single)">
            <summary>
            Little endian 4 byte float value append.
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendBeFloat(System.Single)">
            <summary>
            Big endian 4 byte float value append
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendBeDouble(System.Double)">
            <summary>
            Big endian 8 byte double value append
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendAscii(System.String)">
            <summary>
            <para>Append string</para>
            <para>Encoding.ASCII</para>
            <para>영문, 한글 및 unicode도 1byte로 치환된다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendAscii(System.String,System.Text.Encoding)">
            <summary>
            <para>Append string</para>
            <para>Encoding에 따른 byte수가 다를 수 있다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendAscii(System.Int32,System.String)">
            <summary>
            <para>Ascii Length 보정.</para>
            <para>0x00->0x20</para>
            <para>Encoding.ASCII</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendAscii(System.Int32,System.String,System.Text.Encoding)">
            <summary>
            <para>Ascii Length 보정.</para>
            <para>0x00->0x20</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendAscii(System.Int32,System.String,System.Int32)">
            <summary>
            <para>Ascii Length 보정.</para>
            <para>0x00->0x20</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendAscii0x00(System.Int32,System.String)">
            <summary>
            <para>Ascii Length 보정 0x00으로 나머지를 채운다.</para>
            <para>영문, 한글 및 unicode도 1byte로 치환된다.</para>
            <para>Encoding.ASCII</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendAscii0x00(System.Int32,System.String,System.Text.Encoding)">
            <summary>
            <para>Ascii Length 보정 0x00으로 나머지를 채운다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendBeShort(System.Int32)">
            <summary>
            big endian
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendBeUshort(System.Int32)">
            <summary>
            big endian
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendBeShort(System.Int16)">
            <summary>
            big endian
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendBeInt(System.Int32)">
            <summary>
            big endian
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendBeInt3(System.Int32)">
            <summary>
            3byte int 처리.
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendBeUint(System.UInt32)">
            <summary>
            big endian
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendBeUint(System.Int64)">
            <summary>
            big endian
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.AppendBeLong(System.Int64)">
            <summary>
            big endian
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ToHexLine(System.Int32)">
            <summary>
            lineDigit byte를 기준으로 NewLine처리
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadLeInt">
            <summary>
            <para>Memory buffer에서 4byte를 읽어서 little endian 을 만든다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadLeInt3">
            <summary>
            3byte int 처리.
            <para>최상위 바이트 0을 뒤에 추가하여 Int로 처리함.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadBitArray(System.Int32)">
            <summary>
            size 만큼 읽어서 BitArray 작성
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadAscii(System.Int32)">
            <summary>
            <para>size 만큼 읽어서 string 변환, null(0x00)문자가 있으면 space로 치환한다.</para>
            <para>byte[] bs = ReadBytes(size);</para>
            <para>Encoding.ASCII</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadAscii(System.Int32,System.Text.Encoding)">
            <summary>
            <para>size 만큼 읽어서 string 변환, null(0x00)문자가 있으면 space로 치환한다.</para>
            <para>byte[] bs = ReadBytes(size);</para>
            <para>Encoding에 의해 string으로 변환한다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadAscT(System.Int32)">
            <summary>
            Read Ascii Trim with Encoding.Default
            <para>Encoding은 Encoding.Default를 사용한다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadBeInt">
            <summary>
            <para>Memory buffer에서 4byte를 읽어서 big endian 을 만든다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadBeInt3">
            <summary>
            3byte int 처리.
            <para>최상위 바이트 0을 앞에 추가하여 Int로 처리함.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadBeUint">
            <summary>
            <para>Memory buffer에서 4byte를 읽어서 big endian 을 만든다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadBeFloat">
            <summary>
            <para>Memory buffer에서 4byte를 읽어서 big endian 을 만든다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadBeDouble">
            <summary>
            <para>Memory buffer에서 8byte를 읽어서 big endian 을 만든다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadBeLong">
            <summary>
            <para>Memory buffer에서 8byte를 읽어서 big endian 을 만든다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadBeUshort">
            <summary>
            <para>Memory buffer에서 2byte를 big endian으로 읽는다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadBeShort">
            <summary>
            <para>Memory buffer에서 2byte를 big endian으로 읽는다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadLeUshort">
            <summary>
            <para>Memory buffer에서 2byte를 little endian으로 읽는다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadLeShort">
            <summary>
            <para>Memory buffer에서 2byte를 little endian으로 읽는다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadLeFloat">
            <summary>
            <para>Memory buffer에서 4byte를 little endian</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadLeDouble">
            <summary>
            <para>Memory buffer에서 8byte를 little endian</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.Read1Byte">
            <summary>
            1 바이트를 읽는다. int로 받는다.
            <para>0~255(0~0xff)</para>
            <para>int.Equals(byte)는 값이 같으면 True가 되지만</para>
            <para>byte.Equals(int)는 값이 같아도 False가 된다.</para>
            <para>byte == int, int == byte 는 값이 같을 경우 True가 되므로 Equals 보다 == 사용 권장.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadByte">
            <summary>
            <para>1 바이트를 읽는다. byte로 받는다.</para>
            <para>int.Equals(byte)는 값이 같으면 True가 되지만</para>
            <para>byte.Equals(int)는 값이 같아도 False가 된다.</para>
            <para>byte == int, int == byte 는 값이 같을 경우 True가 되므로 Equals 보다 == 사용 권장.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadBytes(System.Int32)">
            <summary>
            <para>Memorybuffer에서 byte추출</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.MemoryBuffer.ReadBytesRest">
            <summary>
            현재 pos의 나머지 읽기
            </summary>
        </member>
        <member name="P:Floware.Utils.MemoryBuffer.ToBytes">
            <summary>
            <para>전체를 byte array로 추출</para>
            </summary>
        </member>
        <member name="P:Floware.Utils.MemoryBuffer.ToAscii">
            <summary>
            <para>전체를 string으로 추출</para>
            </summary>
        </member>
        <member name="P:Floware.Utils.MemoryBuffer.ToHex">
            <summary>
            <para>space, hexa string</para>
            </summary>
        </member>
        <member name="P:Floware.Utils.MemoryBuffer.Pos">
            <summary>
            MemoryBuffer access position
            </summary>
        </member>
        <member name="P:Floware.Utils.MemoryBuffer.Length">
            <summary>
            실제 valid(append 되었던) Size
            <para>Position이 이동되어도 Length는 기존 값을 유지한다.</para>
            </summary>
        </member>
        <member name="T:Floware.Utils.NetworkUtils">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.NetworkUtils.IsPingOK(System.String,System.Int32)">
            <summary>
            <para>Ping check</para>
            <para>Ping check가 완료될때까지 Blocking 된다.</para>
            </summary>
            <param name="ipAddress"></param>
            <param name="ms"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.NetworkUtils.GetAllMacAddress">
            <summary>
            Mac address list 가져오기.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Floware.Utils.NumUtils">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Random(System.Int32,System.Int32)">
            <summary>
            <para>1~10 까지 수행하려면 Random(1, 10)</para>
            <para>바로 이전에 구한값과 중복은 발생하지 않게 처리함.</para>
            <para>ThreadStatic을 적용하여 Thread마다 각각 이전 값을 유지함.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Ceiling(System.Int32,System.Int32)">
            <summary>
            <para>올림</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Floor(System.Int32,System.Int32)">
            <summary>
            <para>내림</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Round(System.Int32,System.Int32)">
            <summary>
            <para>반올림</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.IsMultiple(System.Int32,System.Int32)">
            <summary>
            <para>배수인지 체크</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.IsOddNumber(System.Int32)">
            <summary>
            홀수인지 체크
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Remainder(System.Int32,System.Int32)">
            <summary>
            <para>나머지 구하기</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.RangeCheck(System.String,System.Int32,System.Int32)">
            <summary>
            <para>Range check</para>
            <para>e.g. RangeCheck("1", 0, short.MaxValue)</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.RangeCheck(System.String,System.Double,System.Double)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.RangeCheck(System.Int32,System.Int32,System.Int32)">
            <summary>
            <para>Range check</para>
            <para>e.g. RangeCheck(i, 0, short.MaxValue)</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.RangeCheck(System.Double,System.Double,System.Double)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.NumUtils.Percent(System.Object,System.Object)">
            <summary>
            <para>백분율 가져오기</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.IsNumber(System.Object)">
            <summary>
            <para>obj의 Type이 Integer or decimal인지 여부 검사.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.CanConvertToInteger(System.String)">
            <summary>
            <para>argument를 integer로 변경 가능한지?</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Average(System.Int32[])">
            <summary>
            <para>평균 구하기</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Average(System.Double[])">
            <summary>
            <para>평균 구하기</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Variance(System.Double[])">
            <summary>
            <para>분포도(분산)</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.StdDev(System.Double[])">
            <summary>
            <para>표준편차</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Median(System.Double[])">
            <summary>
            중간값.
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Min(System.Int32[])">
            <summary>
            <para>최소값</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Min(System.Double[])">
            <summary>
            <para>최소값</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Max(System.Int32[])">
            <summary>
            <para>최대값</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.Max(System.Double[])">
            <summary>
            <para>최대값</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.NumUtils.IntV(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.NumUtils.IntHexV(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.NumUtils.DoubleV(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.NumUtils.FloatV(System.String)">
            <summary/>
        </member>
        <member name="T:Floware.Utils.OSUtils">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.OSUtils.GetLocalIpAddrs">
            <summary>
            Local machine ip address 목록 읽어오기.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.OSUtils.GetDotnetVersion">
            <summary>
            CLR version retrive
            </summary>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.OSUtils.AddFirewall(System.String,System.Int32)">
            <summary>
            Tcp방화벽 등록.
            </summary>
            <param name="name"></param>
            <param name="tcpPortNo"></param>
        </member>
        <member name="M:Floware.Utils.OSUtils.ServiceStart(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:Floware.Utils.OSUtils.ServiceStop(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Floware.Utils.OSUtils.Is64BitOperatingSystem">
            <summary>
            32, 64 bit check
            </summary>
        </member>
        <member name="T:Floware.Utils.PathUtils">
            <summary>
            아래 폴더는 \\를 포함하지 않는다.
            <para>TempPath는 \\를 포함함.</para>
            </summary>
        </member>
        <member name="P:Floware.Utils.PathUtils.Personal">
            <summary>
            common repository for documents
            </summary>
        </member>
        <member name="P:Floware.Utils.PathUtils.MyDocuments">
            <summary/>
        </member>
        <member name="P:Floware.Utils.PathUtils.StartMenu">
            <summary/>
        </member>
        <member name="P:Floware.Utils.PathUtils.Startup">
            <summary/>
        </member>
        <member name="P:Floware.Utils.PathUtils.DesktopLogical">
            <summary/>
        </member>
        <member name="P:Floware.Utils.PathUtils.Desktop">
            <summary/>
        </member>
        <member name="P:Floware.Utils.PathUtils.System">
            <summary/>
        </member>
        <member name="P:Floware.Utils.PathUtils.Windows">
            <summary/>
        </member>
        <member name="P:Floware.Utils.PathUtils.TempPath">
            <summary>
            <para>경로 끝에 \\ 가 포함되어 있다.</para>
            <para>e.g.</para>
            <para>C:\\Users\\Administrator\\AppData\\Local\\Temp\\</para>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Floware.Utils.ProcessUtils">
            <summary>
            AddStartUpProcess는 windows registry를 사용하며 실행 폴더는 system folder가 되므로
            spring config, log4net config를 상대 경로 가능 수정(2012.07)
            </summary>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.AddStartUpProcess(System.String,System.String,System.Object[])">
            <summary/>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.RemoveStartUpProcess(System.String)">
            <summary>
            <para>Remove StartUp Process</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.AddMeStartUpProcess(System.Object[])">
            <summary>
            <para>Add Current Process StartUp</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.RemoveMeStartUpProcess">
            <summary>
            <para>Remove Current Process StartUp</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.GetProcess(System.String)">
            <summary>
            <para>Process Name을 이용해 Process 개체를 가져옴</para>
            <para>여러개일 경우 첫번째 Process만 가져옴</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.GetProcesses(System.String)">
            <summary>
            <para>Process Name을 이용해 Process Array를 가져옴.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.GetProcessCount(System.String)">
            <summary>
            <para>Get Excuted Process Count</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.Kill(System.String)">
            <summary>
            <para>Process Name으로 Process Kill</para>
            <para>xxx.exe -> processName: xxx</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.KillGraceful(System.String)">
            <summary>
            <para>Form Close에 로직이 있는 경우에 사용함.</para>
            </summary>
            <param name="procName"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.Start(System.String)">
            <summary>
            <para>App 실행</para>
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.Start(System.String,System.String)">
            <summary>
            <para>App 실행, argument 입력</para>
            </summary>
            <param name="path"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.Start(System.String,System.String,System.String)">
            <summary>
            <para>App 실행</para>
            </summary>
            <param name="path"></param>
            <param name="wd">Working Directory</param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.StartWaitForExit(System.String,System.String,System.String)">
            <summary>
            <para>실행한 process가 종료될때까지 block됨.</para>
            </summary>
            <param name="path"></param>
            <param name="wd">Working directory, null or empty 입력 가능</param>
            <param name="args">null or empty 가능</param>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.StartConsoleRedirect(System.String,System.String,System.String)">
            <summary>
            <para>Console process를 실행하고 결과를 redirect하여 string으로 받는다.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.ProcessUtils.Kill(System.Int32)">
            <summary>
            <para>processID가 없을 경우에도 Exception이 발생하지 않는다, return 값으로 체크</para>
            </summary>
            <param name="processID"></param>
            <returns>Killed or Not</returns>
        </member>
        <member name="P:Floware.Utils.ProcessUtils.IsAutoStartMe">
            <summary>
            현재 Process가 AutoStart에 등록되어 있는지?
            </summary>
        </member>
        <member name="P:Floware.Utils.ProcessUtils.IsOnlyOneInstance">
            <summary>
            <para>프로세스 이름을 이용하여 OnlyOneInstance check를 한다.</para>
            </summary>
        </member>
        <member name="P:Floware.Utils.ProcessUtils.CurrentProcessName">
            <summary>
            <para>Get Current Process Name</para>
            </summary>
        </member>
        <member name="T:Floware.Utils.RawPrinterHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.RawPrinterHelper.SendStringToPrinter(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="printerName"></param>
            <param name="printString"></param>
            <returns></returns>
        </member>
        <member name="F:Floware.Utils.RawPrinterHelper.DOCINFOA.pDocName">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.Utils.RawPrinterHelper.DOCINFOA.pOutputFile">
            <summary>
            
            </summary>
        </member>
        <member name="F:Floware.Utils.RawPrinterHelper.DOCINFOA.pDataType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.Utils.RegexUtils">
            <summary>
            <para>Regular Utils</para>
            <para>숫자: [0-9]</para>
            <para>숫자 여러개: [0-9]*</para>
            <para>소문자 여러개: [a-z]*</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.RegexUtils.Substring(System.String,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.RegexUtils.Replace(System.String,System.String,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.RegexUtils.CheckIpFormat(System.String)">
            <summary>
            IP Address 유효성검사
            </summary>
        </member>
        <member name="M:Floware.Utils.RegexUtils.CheckIpFormatWithStar(System.String)">
            <summary>
            *을 포함한 IP Address 유효성검사
            ex) 127.*.*.*
            </summary>
        </member>
        <member name="M:Floware.Utils.RegexUtils.SplitWithString(System.String,System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.RegexUtils.SplitWithSpace(System.String)">
            <summary>
            공백 기준 split
            </summary>
        </member>
        <member name="M:Floware.Utils.RegexUtils.SplitWithNewLine(System.String)">
            <summary>
            \n 기준 split
            </summary>
        </member>
        <member name="M:Floware.Utils.RegexUtils.CheckTelephoneNo(System.String)">
            <summary>
            전화 번호부 포맷 체크
            ex) 010-1234-5678
            ex) 031-204-7542
            </summary>
        </member>
        <member name="M:Floware.Utils.RegexUtils.IsNumber(System.String)">
            <summary>
            문자열의 숫자 유무 확인
            </summary>
        </member>
        <member name="M:Floware.Utils.RegexUtils.IsAlpabet(System.String)">
            <summary/>
        </member>
        <member name="T:Floware.Utils.StringUtils">
            <summary>
            Floware.Utils.StringUtils
            </summary>
        </member>
        <member name="M:Floware.Utils.StringUtils.ToString(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            dictionary를 key=value 형태로 만듦
            </summary>
        </member>
        <member name="M:Floware.Utils.StringUtils.Int2Bit(System.Int32)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.StringUtils.Byte2Bit(System.Byte)">
            <summary>
            Convert.ToString(v, 2);
            </summary>
        </member>
        <member name="M:Floware.Utils.StringUtils.Substring(System.String,System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.StringUtils.HasTwoParams(System.String,System.String,System.String)">
            <summary>
            org에 From, To 가 모두 존재하는지 검사함.
            </summary>
        </member>
        <member name="M:Floware.Utils.StringUtils.QuietSubstring(System.String,System.String,System.String)">
            <summary>
            Ignore error
            </summary>
        </member>
        <member name="M:Floware.Utils.StringUtils.SubstringAfter(System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.StringUtils.QuietSubstringAfter(System.String,System.String)">
            <summary>
            Ignore error
            </summary>
        </member>
        <member name="M:Floware.Utils.StringUtils.SubstringBefore(System.String,System.String)">
            <summary>
            Ignore error
            </summary>
        </member>
        <member name="M:Floware.Utils.StringUtils.QuietSubstringBefore(System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Floware.Utils.SwUtils">
            <summary>
            <para>Stopwatch: elapsed time check</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.SwUtils.ElapsedTime(System.Int64)">
            <summary>
            <para>string.Format("[{0:d3} ms]", gap);</para>
            <para>Use F</para>
            </summary>
            <param name="pre">이전 milli-second</param>
        </member>
        <member name="M:Floware.Utils.SwUtils.F(System.Int64)">
            <summary>
            <para>string.Format("[{0:d3} ms]", gap);</para>
            <para>Use F</para>
            </summary>
            <param name="pre">이전 milli-second</param>
        </member>
        <member name="M:Floware.Utils.SwUtils.Elapsed(System.Int64)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.SwUtils.Gt(System.Int64,System.Int32)">
            <summary/>
        </member>
        <member name="P:Floware.Utils.SwUtils.T">
            <summary>
            <para>same CurrentTimeMillis</para>
            </summary>
        </member>
        <member name="P:Floware.Utils.SwUtils.CurrentTimeMillis">
            <summary>
            <para>CurrentTime의 millisecond 가져옴</para>
            </summary>
        </member>
        <member name="T:Floware.Utils.SznUtils">
            <summary/>
        </member>
        <member name="M:Floware.Utils.SznUtils.CanSerialize(System.Object)">
            <summary>
            <para>Serializable 가능 여부 체크</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.SznUtils.Serialize(System.Object)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.SznUtils.Deserialize(System.Byte[])">
            <summary/>
        </member>
        <member name="T:Floware.Utils.WndUtils">
            <summary>
            Form Window 조작
            </summary>
        </member>
        <member name="M:Floware.Utils.WndUtils.Hole(System.Windows.Forms.Form,System.Windows.Forms.Control)">
            <summary>
            Make Hole
            </summary>
            <param name="form"></param>
            <param name="ctrl"></param>
        </member>
        <member name="M:Floware.Utils.WndUtils.Hole(System.Windows.Forms.Form,System.Windows.Forms.Control,System.Boolean)">
            <summary>
            Make Hole
            </summary>
            <param name="form"></param>
            <param name="ctrl"></param>
            <param name="clickable"></param>
        </member>
        <member name="T:Floware.Utils.XmlSznUtils">
            <summary>
            <para>XML Serialization Utils</para>
            <para>-</para>
            <para>XmlSerialzier를 이용한 File 저장 및 불러오기.</para>
            <para>Class를 읽기 쉬운 Format 저장, 불러오기.</para>
            <para>-</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlSznUtils.ReadFileList``1(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.Utils.XmlSznUtils.WriteFileList``1(System.String,System.Collections.Generic.List{``0})">
            <summary/>
        </member>
        <member name="M:Floware.Utils.XmlSznUtils.WriteFile(System.String,System.Object)">
            <summary>
            <para>Serialize T 객체를 XML 파일로 만듦</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlSznUtils.ToString(System.Object,System.Boolean)">
            <summary>
            객체를 xml string으로 변환
            <para>Indent를 넣을지 여부세팅.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlSznUtils.ToObject``1(System.String)">
            <summary>
            string을 객체로 변환.
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlSznUtils.ReadFile``1(System.String)">
            <summary>
            <para>XML File을 읽어서 Serialize T 객체 만듦</para>
            </summary>
        </member>
        <member name="T:Floware.Utils.XmlUtils">
            <summary>
            <para>Xml Document 처리</para>
            <para>Element, Attribute make</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.AppendChildNodeTwoXml(System.Xml.XmlNode,System.Xml.XmlNode)">
            <summary>
            2개 document간 node 이동
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.ToIndentedString(System.Xml.XmlNode)">
            <summary>
            XmlNode -> indented string
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.ToIndentEmpty(System.Xml.XmlNode)">
            <summary>
            Indent + Empty string을 간략하게 만듦.
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.ToPlainString(System.Xml.XmlNode)">
            <summary>
            한줄로 표현함.
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.LoadText(System.String)">
            <summary>
            string -> XmlDocument
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.LoadFile(System.String)">
            <summary>
            File -> XmlDocument
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.MakeElement(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            <para>2013.07</para>
            <para>Root node namespace default 로직 추가.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.MakeAttr(System.Xml.XmlDocument,System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.RemoveAttr(System.Xml.XmlNode,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.AddOrChangeAttrV(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.HasAttr(System.Xml.XmlNode,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.GetTextValue(System.Xml.XmlNode)">
            <summary>
            <para>XmlElement의 Value 가져오기</para>
            <para>Newline or white space가 있을 수 있음.</para>
            </summary>
        </member>
        <member name="M:Floware.Utils.XmlUtils.GetNode(System.Xml.XmlNode,System.Int32[])">
            <summary>
            <para>Index를 이용하여 XmlNode 가져오기</para>
            <para>주의 : TextNode가 들어갈 수 있음을 유의.</para>
            </summary>
        </member>
        <member name="T:Floware.V2.SerialV2">
            <summary>
            Serial 통신 Ver2
            </summary>
        </member>
        <member name="M:Floware.V2.SerialV2.#ctor">
            <summary>
            ReadWrite Timeout def 2 sec
            </summary>
        </member>
        <member name="M:Floware.V2.SerialV2.Init">
            <summary>
            open serial port
            </summary>
        </member>
        <member name="M:Floware.V2.SerialV2.Send(System.Byte[])">
            <summary/>
        </member>
        <member name="M:Floware.V2.SerialV2.Send(Floware.Utils.MemoryBuffer)">
            <summary/>
        </member>
        <member name="M:Floware.V2.SerialV2.Read(System.Int32)">
            <summary>
            <para>blocking read</para>
            </summary>
        </member>
        <member name="M:Floware.V2.SerialV2.ReadTo(System.Byte)">
            <summary>
            <para>NewLine, ETX까지 읽는 경우.</para>
            <para>b는 포함되지 않음</para>
            <para>in stream에서 b 까지 읽음</para>
            </summary>
        </member>
        <member name="M:Floware.V2.SerialV2.Ignore(System.Int32)">
            <summary>
            읽어서 버림.
            </summary>
        </member>
        <member name="M:Floware.V2.SerialV2.Close">
            <summary>
            close SerailPort
            </summary>
        </member>
        <member name="M:Floware.V2.SerialV2.Clean">
            <summary>
            Clean buffer
            </summary>
        </member>
        <member name="M:Floware.V2.SerialV2.ToString">
            <summary/>
        </member>
        <member name="P:Floware.V2.SerialV2.H">
            <summary/>
        </member>
        <member name="P:Floware.V2.SerialV2.Name">
            <summary>
            SerialV2 구분자
            <para>구별을 위해서는 Name을 적절히 변경한다.</para>
            </summary>
        </member>
        <member name="T:Floware.V2.SignalV2">
            <summary>
            Local Multicast 통신
            <para>netsh int ip show joins</para>
            </summary>
        </member>
        <member name="F:Floware.V2.SignalV2.MAX_UDP_SIZE">
            <summary>
            4 KB
            </summary>
        </member>
        <member name="F:Floware.V2.SignalV2.MAX_DATA_SIZE">
            <summary>
            Max 2 MB
            </summary>
        </member>
        <member name="M:Floware.V2.SignalV2.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.V2.SignalV2.Init">
            <summary/>
        </member>
        <member name="M:Floware.V2.SignalV2.OpenMulticast">
            <summary>
            Server: IpAddr을 세팅하지 않음
            <para>Client: IpAddr setting</para>
            </summary>
        </member>
        <member name="M:Floware.V2.SignalV2.Send(System.Object,System.String,System.Object[])">
            <summary>
            <para>cmd: 구분자</para>
            <para>-</para>
            <para>format 또는 value를 넣어도 호환됨.</para>
            <para>format : {0,-10}{1,-20}{2} 등등</para>
            <para>string.format을 쉽게 사용함</para>
            </summary>
        </member>
        <member name="M:Floware.V2.SignalV2.Send(System.Object,System.String)">
            <summary>
            <para>cmd: 구분자</para>
            <para>cmd는 int, string, enum 허용함</para>
            <para>-</para>
            <para>string value only</para>
            </summary>
        </member>
        <member name="M:Floware.V2.SignalV2.Send(System.Object,System.Object)">
            <summary>
            <para>cmd는 int, string, enum 허용함</para>
            <para>obj value는 int, enum 및 ToString을이용하는 항목과, serialize object 허용</para>
            </summary>
        </member>
        <member name="M:Floware.V2.SignalV2.ThSend">
            <summary>
            Length(4)+guid(1+n)+channel(1+n)+cmd(1+n)+protocol(1)+value or object(n)
            </summary>
        </member>
        <member name="M:Floware.V2.SignalV2.Read(System.Int32)">
            <summary>
            size 읽을때까지 blocking
            <para>size -1, clear garbage buffer</para>
            </summary>
        </member>
        <member name="P:Floware.V2.SignalV2.Charset">
            <summary>
            string 통신 encoding 설정
            </summary>
        </member>
        <member name="P:Floware.V2.SignalV2.Channel">
            <summary>
            Channel을 통한 수신
            </summary>
        </member>
        <member name="E:Floware.V2.SignalV2.OnMessage">
            <summary>
            arg1: cmd
            <para>arg2: value</para>
            </summary>
        </member>
        <member name="T:Floware.V2.SignalV2.InMsg">
            <summary/>
        </member>
        <member name="P:Floware.V2.SignalV2.InMsg.Guid">
            <summary/>
        </member>
        <member name="P:Floware.V2.SignalV2.InMsg.Length">
            <summary/>
        </member>
        <member name="P:Floware.V2.SignalV2.InMsg.Cmd">
            <summary/>
        </member>
        <member name="P:Floware.V2.SignalV2.InMsg.Value">
            <summary>
            string value
            </summary>
        </member>
        <member name="P:Floware.V2.SignalV2.InMsg.Serialize">
            <summary>
            객체통신
            </summary>
        </member>
        <member name="T:Floware.V2.TcpV2">
            <summary>
            <para>160615 최초 개발</para>
            <para>1. Client Tcp 만 일단 지원.</para>
            </summary>
        </member>
        <member name="M:Floware.V2.TcpV2.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.V2.TcpV2.Init">
            <summary>
            Client의 경우 Comm.Retry 회수 만큼 연결 시도후 함수 return 됨.
            </summary>
        </member>
        <member name="M:Floware.V2.TcpV2.DefSckOpt(System.Net.Sockets.TcpClient)">
            <summary>
            tcp socket option 설정
            <para>NoDelay, LingerState, ReceiveTimeout</para>
            </summary>
        </member>
        <member name="M:Floware.V2.TcpV2.Close">
            <summary>
            <para>close socket</para>
            <para>Exception이 없다, 내부적으로 모두 처리함.</para>
            </summary>
        </member>
        <member name="M:Floware.V2.TcpV2.Clean">
            <summary>
            In buffer clear
            </summary>
        </member>
        <member name="M:Floware.V2.TcpV2.Ignore(System.Int32)">
            <summary>
            읽어서 버림.
            </summary>
        </member>
        <member name="M:Floware.V2.TcpV2.ReadInt(System.Int32)">
            <summary>
            Int변환
            <para>LittleEndian property를 이용하여 ByteOrder세팅이 가능함.</para>
            <para>size 2일 경우 Ushort 변환</para>
            <para>-</para>
            <para>TimeoutException catch 가능함</para>
            </summary>
        </member>
        <member name="M:Floware.V2.TcpV2.Read(System.Int32)">
            <summary>
            size만큼 읽어 MemoryBuffer에 담고 Pos를 0으로 이동한다.
            <para>-</para>
            <para>TimeoutException catch 가능함</para>
            </summary>
        </member>
        <member name="M:Floware.V2.TcpV2.ReadTo(System.Byte)">
            <summary>
            <para>ETX까지 읽는 경우.</para>
            <para>b는 포함되지 않음</para>
            <para>in stream에서 b 까지 읽음</para>
            <para>-</para>
            <para>TimeoutException catch 가능함</para>
            </summary>
        </member>
        <member name="M:Floware.V2.TcpV2.Send(Floware.Utils.MemoryBuffer)">
            <summary>
            MemoryBuffer의 Position과 상관없이 모든 데이터 write함
            </summary>
        </member>
        <member name="M:Floware.V2.TcpV2.Send(System.Byte[])">
            <summary/>
        </member>
        <member name="P:Floware.V2.TcpV2.LittleEndian">
            <summary>
            default: false, 즉 BigEndian default
            </summary>
        </member>
        <member name="P:Floware.V2.TcpV2.Comm">
            <summary/>
        </member>
        <member name="P:Floware.V2.TcpV2.Sck">
            <summary/>
        </member>
        <member name="P:Floware.V2.TcpV2.KeepAlive">
            <summary/>
        </member>
        <member name="P:Floware.V2.TcpV2.Connected">
            <summary>
            tcp connect or not
            </summary>
        </member>
        <member name="T:Floware.V2.UdpV2">
            <summary/>
        </member>
        <member name="M:Floware.V2.UdpV2.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.V2.UdpV2.Init(System.Boolean)">
            <summary>
            Server: IpAddr을 세팅하지 않음
            <para>Client: IpAddr setting</para>
            </summary>
        </member>
        <member name="M:Floware.V2.UdpV2.Send(Floware.Utils.MemoryBuffer)">
            <summary/>
        </member>
        <member name="M:Floware.V2.UdpV2.Reply(Floware.Utils.MemoryBuffer)">
            <summary>
            수신된 연결로 reply 보냄
            </summary>
        </member>
        <member name="M:Floware.V2.UdpV2.Clean">
            <summary>
            In buffer garbage clear
            </summary>
        </member>
        <member name="M:Floware.V2.UdpV2.Read(System.Int32)">
            <summary>
            size 읽을때까지 blocking
            <para>size -1 경우, Clean과 동일함.</para>
            <para>Timeout일 경우 SocketTimeoutException이 발생</para>
            </summary>
        </member>
        <member name="M:Floware.V2.UdpV2.Close">
            <summary/>
        </member>
        <member name="P:Floware.V2.UdpV2.IpAddr">
            <summary/>
        </member>
        <member name="P:Floware.V2.UdpV2.PortNo">
            <summary/>
        </member>
        <member name="P:Floware.V2.UdpV2.TTL">
            <summary>
            TTL: Microsoft def 128, Floware 8
            <para>TTL:0 Local Mode</para>
            </summary>
        </member>
        <member name="P:Floware.V2.UdpV2.BufferSize">
            <summary>
            def : 10 mb
            </summary>
        </member>
        <member name="P:Floware.V2.UdpV2.Sck">
            <summary/>
        </member>
        <member name="P:Floware.V2.UdpV2.Timeout">
            <summary>
            Receive timeout
            </summary>
        </member>
        <member name="T:Floware.V3.FourthCenter">
            <summary/>
        </member>
        <member name="M:Floware.V3.FourthCenter.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.V3.FourthCenter.Init(System.Int32)">
            <summary/>
        </member>
        <member name="M:Floware.V3.FourthCenter.Reply(System.Net.IPEndPoint,System.Object[])">
            <summary/>
        </member>
        <member name="E:Floware.V3.FourthCenter.OnMessage">
            <summary/>
        </member>
        <member name="P:Floware.V3.FourthCenter.Charset">
            <summary>
            string 통신 encoding 설정
            </summary>
        </member>
        <member name="T:Floware.V3.FourthCenter.Item">
            <summary/>
        </member>
        <member name="M:Floware.V3.FourthCenter.Item.ToString">
            <summary/>
        </member>
        <member name="P:Floware.V3.FourthCenter.Item.Origin">
            <summary>
            Origin value
            </summary>
        </member>
        <member name="P:Floware.V3.FourthCenter.Item.StrV">
            <summary>
            string or enum value get
            </summary>
        </member>
        <member name="P:Floware.V3.FourthCenter.Item.IntV">
            <summary/>
        </member>
        <member name="P:Floware.V3.FourthCenter.Item.BoolV">
            <summary/>
        </member>
        <member name="T:Floware.V3.SignalV3">
            <summary>
            Local Multicast 통신
            <para>netsh int ip show joins</para>
            </summary>
        </member>
        <member name="F:Floware.V3.SignalV3.MAX_UDP_SIZE">
            <summary>
            4 KB
            </summary>
        </member>
        <member name="F:Floware.V3.SignalV3.MAX_DATA_SIZE">
            <summary>
            Max 2 MB
            </summary>
        </member>
        <member name="M:Floware.V3.SignalV3.#ctor">
            <summary/>
        </member>
        <member name="M:Floware.V3.SignalV3.Init">
            <summary/>
        </member>
        <member name="M:Floware.V3.SignalV3.OpenMulticast">
            <summary>
            Server: IpAddr을 세팅하지 않음
            <para>Client: IpAddr setting</para>
            </summary>
        </member>
        <member name="M:Floware.V3.SignalV3.Send(System.Object[])">
            <summary>
            <para>여러타입을 하나의 메시지로 보낼수 있음.</para>
            <para>-</para>
            <para>지원타입</para>
            <para>string, int, bool, enum, byte[], serializable object</para>
            </summary>
        </member>
        <member name="M:Floware.V3.SignalV3.Request(System.Single,System.Object[])">
            <summary>
            timeout이 발생하면 List count 0이 됨
            <para>0th: 초단위 timeout</para>
            </summary>
        </member>
        <member name="M:Floware.V3.SignalV3.Reply(System.Collections.Generic.List{Floware.V3.SignalV3.Item},System.Object[])">
            <summary/>
        </member>
        <member name="M:Floware.V3.SignalV3._Send">
            <summary/>
        </member>
        <member name="M:Floware.V3.SignalV3.Read(System.Int32)">
            <summary>
            size 읽을때까지 blocking
            <para>size -1, clear garbage buffer</para>
            </summary>
        </member>
        <member name="P:Floware.V3.SignalV3.Charset">
            <summary>
            string 통신 encoding 설정
            </summary>
        </member>
        <member name="E:Floware.V3.SignalV3.OnMessage">
            <summary>
            arg1: length
            <para>arg2: values</para>
            </summary>
        </member>
        <member name="T:Floware.V3.SignalV3.Item">
            <summary/>
        </member>
        <member name="M:Floware.V3.SignalV3.Item.ToString">
            <summary/>
        </member>
        <member name="P:Floware.V3.SignalV3.Item.Origin">
            <summary>
            Origin value
            </summary>
        </member>
        <member name="P:Floware.V3.SignalV3.Item.StrV">
            <summary>
            string or enum value get
            </summary>
        </member>
        <member name="P:Floware.V3.SignalV3.Item.IntV">
            <summary/>
        </member>
        <member name="P:Floware.V3.SignalV3.Item.BoolV">
            <summary/>
        </member>
        <member name="T:Floware.WEB.FageFw">
            <summary/>
        </member>
        <member name="F:Floware.WEB.FageFw.logger">
            <summary/>
        </member>
        <member name="M:Floware.WEB.FageFw.GetObject``1(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.WEB.FageFw.LogOn(System.String,System.Boolean)">
            <summary/>
        </member>
        <member name="M:Floware.WEB.FageFw.LogOff">
            <summary>
            LogOff후 root redirect
            </summary>
        </member>
        <member name="P:Floware.WEB.FageFw.LoggedOn">
            <summary>
            User 인증여부
            </summary>
        </member>
        <member name="P:Floware.WEB.FageFw.AuthID">
            <summary>
            인증 UserID
            <para>LogOn을 하지 않았을 경우 string.Empty</para>
            <para>LogOn 후 User ID</para>
            </summary>
        </member>
        <member name="P:Floware.WEB.FageFw.RootFolder">
            <summary>
            Web(IIS)실행 root 폴더
            </summary>
        </member>
        <member name="P:Floware.WEB.FageFw.TempFolder">
            <summary>
            Web(IIS)실행 폴더 + App_Data\
            <para>응용 프로그램 데이터 파일을 포함</para>
            </summary>
        </member>
        <member name="T:Floware.WEB.HttpAppFw">
            <summary>
            aspx HttpApplication
            </summary>
        </member>
        <member name="F:Floware.WEB.HttpAppFw.logger">
            <summary/>
        </member>
        <member name="M:Floware.WEB.HttpAppFw.GetObject``1(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.WEB.HttpAppFw.LogConfigure(System.String)">
            <summary>
            Log4net config 상대 경로를 iis folder 변경 로딩
            </summary>
        </member>
        <member name="M:Floware.WEB.HttpAppFw.MongoTimezone">
            <summary>
            Mongo Time zone을 Local timezone으로 변경함
            </summary>
        </member>
        <member name="P:Floware.WEB.HttpAppFw.RootFolder">
            <summary>
            Web(IIS)실행 root 폴더
            </summary>
        </member>
        <member name="T:Floware.WEB.MasterFageFw">
            <summary/>
        </member>
        <member name="M:Floware.WEB.MasterFageFw.GetObject``1(System.String)">
            <summary/>
        </member>
        <member name="M:Floware.WEB.MasterFageFw.LogOff">
            <summary/>
        </member>
        <member name="P:Floware.WEB.MasterFageFw.LoggedOn">
            <summary>
            User 인증여부
            </summary>
        </member>
        <member name="P:Floware.WEB.MasterFageFw.AuthID">
            <summary>
            인증 UserID
            <para>LogOn을 하지 않았을 경우 string.Empty</para>
            <para>LogOn 후 User ID</para>
            </summary>
        </member>
        <member name="T:Floware.WEB.PushMQ">
            <summary/>
        </member>
        <member name="M:Floware.WEB.PushMQ.ProcessRequest(System.Web.HttpContext)">
            <summary/>
        </member>
        <member name="P:Floware.WEB.PushMQ.IsReusable">
            <summary/>
        </member>
        <member name="T:Floware.WEB.PushSignal">
            <summary>
            Signal web push
            <para>Web으로 보내기 위해 2개의 item으로 구성</para>
            <para>1st: floware.web, 2nd: data</para>
            <para>Web push의 성능은 초당 200건 내외이므로 filtering을 위해 위와 같이 2개의 item으로 구성</para>
            </summary>
        </member>
        <member name="M:Floware.WEB.PushSignal.ProcessRequest(System.Web.HttpContext)">
            <summary/>
        </member>
        <member name="F:Floware.WEB.PushSignal.CMD_PUSH">
            <summary/>
        </member>
        <member name="P:Floware.WEB.PushSignal.IsReusable">
            <summary/>
        </member>
        <member name="T:Floware.Interop32">
            <summary>
            <para>const uint FILE_SHARE_READ = 1;</para>
            <para></para>
            <para>const uint FILE_ATTRIBUTE_NORMAL = 0x80;</para>
            <para></para>
            <para>const uint GENERIC_READ = 0x80000000;</para>
            <para>const uint OPEN_EXISTING = 3;</para>
            <para></para>
            <para></para>
            <para></para>
            </summary>
        </member>
        <member name="T:Floware.TAction">
            <summary>
            <para>void 0 arg method</para>
            </summary>
        </member>
        <member name="T:Floware.TAction`1">
            <summary>
            <para>void 1 arg method</para>
            </summary>
        </member>
        <member name="T:Floware.TAction`2">
            <summary>
            <para>void 2 arg method</para>
            </summary>
        </member>
        <member name="T:Floware.TAction`3">
            <summary>
            <para>void 3 arg method</para>
            </summary>
        </member>
        <member name="T:Floware.TAction`4">
            <summary>
            <para>void 4 arg method</para>
            </summary>
        </member>
        <member name="T:Floware.TFunc`1">
            <summary>
            <para>return Generic, 0 arg method</para>
            </summary>
        </member>
        <member name="T:Floware.TFunc`2">
            <summary>
            <para>return Generic, 1 arg method</para>
            </summary>
        </member>
        <member name="T:Floware.TFunc`3">
            <summary>
            <para>return Generic, 2 arg method</para>
            </summary>
        </member>
        <member name="T:Floware.TFunc`4">
            <summary>
            <para>return Generic, 3 arg method</para>
            </summary>
        </member>
        <member name="T:Floware.TFunc`5">
            <summary>
            <para>return Generic, 4 arg method</para>
            </summary>
        </member>
    </members>
</doc>
